digraph graphname {
n68197 [shape=box,label="(68197)\nScopes: 0\nimage.dirty = true\nimage.version ++"];
n68196 [shape=box,label="(68196)\nScopes: 24, 0"];
n68195 [shape=box,label="(68195)\nScopes: 124, 24, 0"];
n68194 [shape=box,label="(68194)\nScopes: 185, 124, 24, 0"];
n68193 [shape=box,label="(68193)\nLoops: 7\nScopes: 186, 185, 124, 24, 0"];
n68192 [shape=box,label="(68192)\nLoops: 7\nScopes: 188, 186, 185, 124, 24, 0"];
n68191 [shape=box,label="(68191)\nLoops: 8, 7\nScopes: 189, 188, 186, 185, 124, 24, 0\nsourcePosition = sourcePosition + 4\ndestPosition = destPosition + 4\nalphaPosition = alphaPosition + 4"];
n68190 [shape=box,label="(68190)\nLoops: 8, 7\nScopes: 214, 189, 188, 186, 185, 124, 24, 0"];
n68189 [shape=box,label="(68189)\nLoops: 8, 7\nScopes: 225, 214, 189, 188, 186, 185, 124, 24, 0\ncast destData[destPosition] = cast cast cast cast cast cast sourcePixel >>> 8 & 255\nvar tmp = destPosition + 1\ncast destData[tmp] = cast cast cast cast cast cast sourcePixel >>> 16 & 255\nvar tmp = destPosition + 2\ncast destData[tmp] = cast cast cast cast cast cast sourcePixel >>> 24 & 255\nvar tmp = destPosition + 3\ncast destData[tmp] = cast cast cast cast sourcePixel & 255"];
n68188 [shape=box,label="(68188)\nLoops: 8, 7\nScopes: 224, 214, 189, 188, 186, 185, 124, 24, 0\ncast destData[destPosition] = cast cast cast cast sourcePixel & 255\nvar tmp = destPosition + 1\ncast destData[tmp] = cast cast cast cast cast cast sourcePixel >>> 24 & 255\nvar tmp = destPosition + 2\ncast destData[tmp] = cast cast cast cast cast cast sourcePixel >>> 16 & 255\nvar tmp = destPosition + 3\ncast destData[tmp] = cast cast cast cast cast cast sourcePixel >>> 8 & 255"];
n68187 [shape=box,label="(68187)\nLoops: 8, 7\nScopes: 223, 214, 189, 188, 186, 185, 124, 24, 0\ncast destData[destPosition] = cast cast cast cast cast cast sourcePixel >>> 24 & 255\nvar tmp = destPosition + 1\ncast destData[tmp] = cast cast cast cast cast cast sourcePixel >>> 16 & 255\nvar tmp = destPosition + 2\ncast destData[tmp] = cast cast cast cast cast cast sourcePixel >>> 8 & 255\nvar tmp = destPosition + 3\ncast destData[tmp] = cast cast cast cast sourcePixel & 255"];
n68186 [shape=box,label="(68186)\nLoops: 8, 7\nScopes: 214, 189, 188, 186, 185, 124, 24, 0\nvar format = @:exhaustive format\n@:cond-branch format"];
n68185 [shape=box,label="(68185)\nLoops: 8, 7\nScopes: 217, 214, 189, 188, 186, 185, 124, 24, 0"];
n68184 [shape=box,label="(68184)\nLoops: 8, 7\nScopes: 220, 217, 214, 189, 188, 186, 185, 124, 24, 0"];
n68183 [shape=box,label="(68183)\nLoops: 8, 7\nScopes: 221, 220, 217, 214, 189, 188, 186, 185, 124, 24, 0"];
n68182 [shape=box,label="(68182)\nLoops: 8, 7\nScopes: 222, 221, 220, 217, 214, 189, 188, 186, 185, 124, 24, 0\nvar r = (cast cast cast cast cast cast sourcePixel >>> 24 & 255) * lime.math._RGBA.RGBA_Impl_.a16\nvar r = r >> 16\nvar g = (cast cast cast cast cast cast sourcePixel >>> 16 & 255) * lime.math._RGBA.RGBA_Impl_.a16\nvar g = g >> 16\nvar b = (cast cast cast cast cast cast sourcePixel >>> 8 & 255) * lime.math._RGBA.RGBA_Impl_.a16\nvar b = b >> 16\nvar sourcePixel = r & 255\nvar sourcePixel = sourcePixel << 24\nvar sourcePixel = g & 255\nvar sourcePixel = sourcePixel << 16\nvar sourcePixel = sourcePixel | sourcePixel\nvar sourcePixel = b & 255\nvar sourcePixel = sourcePixel << 8\nvar sourcePixel = sourcePixel | sourcePixel\nvar sourcePixel = cast cast cast cast sourcePixel & 255 & 255\nsourcePixel = sourcePixel | sourcePixel"];
n68181 [shape=box,label="(68181)\nLoops: 8, 7\nScopes: 221, 220, 217, 214, 189, 188, 186, 185, 124, 24, 0\nlime.math._RGBA.RGBA_Impl_.a16 = cast cast lime.math._RGBA.RGBA_Impl_.__alpha16[cast cast cast cast sourcePixel & 255]"];
n68180 [shape=box,label="(68180)\nLoops: 8, 7\nScopes: 218, 217, 214, 189, 188, 186, 185, 124, 24, 0"];
n68179 [shape=box,label="(68179)\nLoops: 8, 7\nScopes: 219, 218, 217, 214, 189, 188, 186, 185, 124, 24, 0\nsourcePixel = 0"];
n68178 [shape=box,label="(68178)\nLoops: 8, 7\nScopes: 220, 217, 214, 189, 188, 186, 185, 124, 24, 0\nvar tmp = (cast cast cast cast sourcePixel & 255) != 255\n@:cond-branch tmp"];
n68177 [shape=box,label="(68177)\nLoops: 8, 7\nScopes: 218, 217, 214, 189, 188, 186, 185, 124, 24, 0\nvar tmp = cast cast sourcePixel != 0\n@:cond-branch tmp"];
n68176 [shape=box,label="(68176)\nLoops: 8, 7\nScopes: 217, 214, 189, 188, 186, 185, 124, 24, 0\nvar tmp = (cast cast cast cast sourcePixel & 255) == 0\n@:cond-branch tmp"];
n68175 [shape=box,label="(68175)\nLoops: 8, 7\nScopes: 214, 189, 188, 186, 185, 124, 24, 0\nvar premultiplied = premultiplied\n@:cond-branch premultiplied"];
n68174 [shape=box,label="(68174)\nLoops: 8, 7\nScopes: 216, 214, 189, 188, 186, 185, 124, 24, 0\nformat = 0"];
n68173 [shape=box,label="(68173)\nLoops: 8, 7\nScopes: 214, 189, 188, 186, 185, 124, 24, 0\nvar tmp = format == null\n@:cond-branch tmp"];
n68172 [shape=box,label="(68172)\nLoops: 8, 7\nScopes: 215, 214, 189, 188, 186, 185, 124, 24, 0\npremultiplied = false"];
n68171 [shape=box,label="(68171)\nLoops: 8, 7\nScopes: 214, 189, 188, 186, 185, 124, 24, 0\nvar format = destFormat\nvar premultiplied = destPremultiplied\nvar tmp = premultiplied == null\n@:cond-branch tmp"];
n68170 [shape=box,label="(68170)\nLoops: 8, 7\nScopes: 189, 188, 186, 185, 124, 24, 0"];
n68169 [shape=box,label="(68169)\nLoops: 8, 7\nScopes: 213, 189, 188, 186, 185, 124, 24, 0\nvar value = (cast cast cast cast alphaPixel & 255) / 255\nvar value = (cast cast cast cast sourcePixel & 255) * value\nvar value = Math.round(value)\nvar sourcePixel = cast cast cast cast cast cast sourcePixel >>> 24 & 255 & 255\nvar sourcePixel = sourcePixel << 24\nvar sourcePixel = cast cast cast cast cast cast sourcePixel >>> 16 & 255 & 255\nvar sourcePixel = sourcePixel << 16\nvar sourcePixel = sourcePixel | sourcePixel\nvar sourcePixel = cast cast cast cast cast cast sourcePixel >>> 8 & 255 & 255\nvar sourcePixel = sourcePixel << 8\nvar sourcePixel = sourcePixel | sourcePixel\nvar sourcePixel = value & 255\nsourcePixel = sourcePixel | sourcePixel"];
n68168 [shape=box,label="(68168)\nLoops: 8, 7\nScopes: 189, 188, 186, 185, 124, 24, 0"];
n68167 [shape=box,label="(68167)\nLoops: 8, 7\nScopes: 202, 189, 188, 186, 185, 124, 24, 0"];
n68166 [shape=box,label="(68166)\nLoops: 8, 7\nScopes: 208, 202, 189, 188, 186, 185, 124, 24, 0"];
n68165 [shape=box,label="(68165)\nLoops: 8, 7\nScopes: 211, 208, 202, 189, 188, 186, 185, 124, 24, 0"];
n68164 [shape=box,label="(68164)\nLoops: 8, 7\nScopes: 212, 211, 208, 202, 189, 188, 186, 185, 124, 24, 0\nvar r = cast lime.math._RGBA.RGBA_Impl_.__clamp\nvar r = (cast cast cast cast cast cast alphaPixel >>> 24 & 255) * lime.math._RGBA.RGBA_Impl_.unmult\nvar r = Math.round(r)\nvar r = cast r[r]\nvar g = cast lime.math._RGBA.RGBA_Impl_.__clamp\nvar g = (cast cast cast cast cast cast alphaPixel >>> 16 & 255) * lime.math._RGBA.RGBA_Impl_.unmult\nvar g = Math.round(g)\nvar g = cast g[g]\nvar b = cast lime.math._RGBA.RGBA_Impl_.__clamp\nvar b = (cast cast cast cast cast cast alphaPixel >>> 8 & 255) * lime.math._RGBA.RGBA_Impl_.unmult\nvar b = Math.round(b)\nvar b = cast b[b]\nvar alphaPixel = r & 255\nvar alphaPixel = alphaPixel << 24\nvar alphaPixel = g & 255\nvar alphaPixel = alphaPixel << 16\nvar alphaPixel = alphaPixel | alphaPixel\nvar alphaPixel = b & 255\nvar alphaPixel = alphaPixel << 8\nvar alphaPixel = alphaPixel | alphaPixel\nvar alphaPixel = cast cast cast cast alphaPixel & 255 & 255\nalphaPixel = alphaPixel | alphaPixel"];
n68163 [shape=box,label="(68163)\nLoops: 8, 7\nScopes: 211, 208, 202, 189, 188, 186, 185, 124, 24, 0\nlime.math._RGBA.RGBA_Impl_.unmult = 255.0 / (cast cast cast cast alphaPixel & 255)"];
n68162 [shape=box,label="(68162)\nLoops: 8, 7\nScopes: 208, 202, 189, 188, 186, 185, 124, 24, 0\n@:cond-branch tmp"];
n68161 [shape=box,label="(68161)\nLoops: 8, 7\nScopes: 210, 208, 202, 189, 188, 186, 185, 124, 24, 0\ntmp = false"];
n68160 [shape=box,label="(68160)\nLoops: 8, 7\nScopes: 209, 208, 202, 189, 188, 186, 185, 124, 24, 0\ntmp = (cast cast cast cast alphaPixel & 255) != 255"];
n68159 [shape=box,label="(68159)\nLoops: 8, 7\nScopes: 208, 202, 189, 188, 186, 185, 124, 24, 0\nvar tmp\nvar tmp = (cast cast cast cast alphaPixel & 255) != 0\n@:cond-branch tmp"];
n68158 [shape=box,label="(68158)\nLoops: 8, 7\nScopes: 202, 189, 188, 186, 185, 124, 24, 0\nvar premultiplied = premultiplied\n@:cond-branch premultiplied"];
n68157 [shape=box,label="(68157)\nLoops: 8, 7\nScopes: 207, 202, 189, 188, 186, 185, 124, 24, 0\nvar alphaPixel = alphaPosition + 2\nvar alphaPixel = cast cast alphaData[alphaPixel] & 255\nvar alphaPixel = alphaPixel << 24\nvar alphaPixel = alphaPosition + 1\nvar alphaPixel = cast cast alphaData[alphaPixel] & 255\nvar alphaPixel = alphaPixel << 16\nvar alphaPixel = alphaPixel | alphaPixel\nvar alphaPixel = cast cast alphaData[alphaPosition] & 255\nvar alphaPixel = alphaPixel << 8\nvar alphaPixel = alphaPixel | alphaPixel\nvar alphaPixel = alphaPosition + 3\nvar alphaPixel = cast cast alphaData[alphaPixel] & 255\nalphaPixel = alphaPixel | alphaPixel"];
n68156 [shape=box,label="(68156)\nLoops: 8, 7\nScopes: 206, 202, 189, 188, 186, 185, 124, 24, 0\nvar alphaPixel = alphaPosition + 1\nvar alphaPixel = cast cast alphaData[alphaPixel] & 255\nvar alphaPixel = alphaPixel << 24\nvar alphaPixel = alphaPosition + 2\nvar alphaPixel = cast cast alphaData[alphaPixel] & 255\nvar alphaPixel = alphaPixel << 16\nvar alphaPixel = alphaPixel | alphaPixel\nvar alphaPixel = alphaPosition + 3\nvar alphaPixel = cast cast alphaData[alphaPixel] & 255\nvar alphaPixel = alphaPixel << 8\nvar alphaPixel = alphaPixel | alphaPixel\nvar alphaPixel = cast cast alphaData[alphaPosition] & 255\nalphaPixel = alphaPixel | alphaPixel"];
n68155 [shape=box,label="(68155)\nLoops: 8, 7\nScopes: 205, 202, 189, 188, 186, 185, 124, 24, 0\nvar alphaPixel = cast cast alphaData[alphaPosition] & 255\nvar alphaPixel = alphaPixel << 24\nvar alphaPixel = alphaPosition + 1\nvar alphaPixel = cast cast alphaData[alphaPixel] & 255\nvar alphaPixel = alphaPixel << 16\nvar alphaPixel = alphaPixel | alphaPixel\nvar alphaPixel = alphaPosition + 2\nvar alphaPixel = cast cast alphaData[alphaPixel] & 255\nvar alphaPixel = alphaPixel << 8\nvar alphaPixel = alphaPixel | alphaPixel\nvar alphaPixel = alphaPosition + 3\nvar alphaPixel = cast cast alphaData[alphaPixel] & 255\nalphaPixel = alphaPixel | alphaPixel"];
n68154 [shape=box,label="(68154)\nLoops: 8, 7\nScopes: 202, 189, 188, 186, 185, 124, 24, 0\nvar format = @:exhaustive format\n@:cond-branch format"];
n68153 [shape=box,label="(68153)\nLoops: 8, 7\nScopes: 204, 202, 189, 188, 186, 185, 124, 24, 0\nformat = 0"];
n68152 [shape=box,label="(68152)\nLoops: 8, 7\nScopes: 202, 189, 188, 186, 185, 124, 24, 0\nvar tmp = format == null\n@:cond-branch tmp"];
n68151 [shape=box,label="(68151)\nLoops: 8, 7\nScopes: 203, 202, 189, 188, 186, 185, 124, 24, 0\npremultiplied = false"];
n68150 [shape=box,label="(68150)\nLoops: 8, 7\nScopes: 202, 189, 188, 186, 185, 124, 24, 0\nvar format = alphaFormat\nvar premultiplied = false\nvar tmp = premultiplied == null\n@:cond-branch tmp"];
n68149 [shape=box,label="(68149)\nLoops: 8, 7\nScopes: 189, 188, 186, 185, 124, 24, 0"];
n68148 [shape=box,label="(68148)\nLoops: 8, 7\nScopes: 191, 189, 188, 186, 185, 124, 24, 0"];
n68147 [shape=box,label="(68147)\nLoops: 8, 7\nScopes: 197, 191, 189, 188, 186, 185, 124, 24, 0"];
n68146 [shape=box,label="(68146)\nLoops: 8, 7\nScopes: 200, 197, 191, 189, 188, 186, 185, 124, 24, 0"];
n68145 [shape=box,label="(68145)\nLoops: 8, 7\nScopes: 201, 200, 197, 191, 189, 188, 186, 185, 124, 24, 0\nvar r = cast lime.math._RGBA.RGBA_Impl_.__clamp\nvar r = (cast cast cast cast cast cast sourcePixel >>> 24 & 255) * lime.math._RGBA.RGBA_Impl_.unmult\nvar r = Math.round(r)\nvar r = cast r[r]\nvar g = cast lime.math._RGBA.RGBA_Impl_.__clamp\nvar g = (cast cast cast cast cast cast sourcePixel >>> 16 & 255) * lime.math._RGBA.RGBA_Impl_.unmult\nvar g = Math.round(g)\nvar g = cast g[g]\nvar b = cast lime.math._RGBA.RGBA_Impl_.__clamp\nvar b = (cast cast cast cast cast cast sourcePixel >>> 8 & 255) * lime.math._RGBA.RGBA_Impl_.unmult\nvar b = Math.round(b)\nvar b = cast b[b]\nvar sourcePixel = r & 255\nvar sourcePixel = sourcePixel << 24\nvar sourcePixel = g & 255\nvar sourcePixel = sourcePixel << 16\nvar sourcePixel = sourcePixel | sourcePixel\nvar sourcePixel = b & 255\nvar sourcePixel = sourcePixel << 8\nvar sourcePixel = sourcePixel | sourcePixel\nvar sourcePixel = cast cast cast cast sourcePixel & 255 & 255\nsourcePixel = sourcePixel | sourcePixel"];
n68144 [shape=box,label="(68144)\nLoops: 8, 7\nScopes: 200, 197, 191, 189, 188, 186, 185, 124, 24, 0\nlime.math._RGBA.RGBA_Impl_.unmult = 255.0 / (cast cast cast cast sourcePixel & 255)"];
n68143 [shape=box,label="(68143)\nLoops: 8, 7\nScopes: 197, 191, 189, 188, 186, 185, 124, 24, 0\n@:cond-branch tmp"];
n68142 [shape=box,label="(68142)\nLoops: 8, 7\nScopes: 199, 197, 191, 189, 188, 186, 185, 124, 24, 0\ntmp = false"];
n68141 [shape=box,label="(68141)\nLoops: 8, 7\nScopes: 198, 197, 191, 189, 188, 186, 185, 124, 24, 0\ntmp = (cast cast cast cast sourcePixel & 255) != 255"];
n68140 [shape=box,label="(68140)\nLoops: 8, 7\nScopes: 197, 191, 189, 188, 186, 185, 124, 24, 0\nvar tmp\nvar tmp = (cast cast cast cast sourcePixel & 255) != 0\n@:cond-branch tmp"];
n68139 [shape=box,label="(68139)\nLoops: 8, 7\nScopes: 191, 189, 188, 186, 185, 124, 24, 0\nvar premultiplied = premultiplied\n@:cond-branch premultiplied"];
n68138 [shape=box,label="(68138)\nLoops: 8, 7\nScopes: 196, 191, 189, 188, 186, 185, 124, 24, 0\nvar sourcePixel = sourcePosition + 2\nvar sourcePixel = cast cast sourceData[sourcePixel] & 255\nvar sourcePixel = sourcePixel << 24\nvar sourcePixel = sourcePosition + 1\nvar sourcePixel = cast cast sourceData[sourcePixel] & 255\nvar sourcePixel = sourcePixel << 16\nvar sourcePixel = sourcePixel | sourcePixel\nvar sourcePixel = cast cast sourceData[sourcePosition] & 255\nvar sourcePixel = sourcePixel << 8\nvar sourcePixel = sourcePixel | sourcePixel\nvar sourcePixel = sourcePosition + 3\nvar sourcePixel = cast cast sourceData[sourcePixel] & 255\nsourcePixel = sourcePixel | sourcePixel"];
n68137 [shape=box,label="(68137)\nLoops: 8, 7\nScopes: 195, 191, 189, 188, 186, 185, 124, 24, 0\nvar sourcePixel = sourcePosition + 1\nvar sourcePixel = cast cast sourceData[sourcePixel] & 255\nvar sourcePixel = sourcePixel << 24\nvar sourcePixel = sourcePosition + 2\nvar sourcePixel = cast cast sourceData[sourcePixel] & 255\nvar sourcePixel = sourcePixel << 16\nvar sourcePixel = sourcePixel | sourcePixel\nvar sourcePixel = sourcePosition + 3\nvar sourcePixel = cast cast sourceData[sourcePixel] & 255\nvar sourcePixel = sourcePixel << 8\nvar sourcePixel = sourcePixel | sourcePixel\nvar sourcePixel = cast cast sourceData[sourcePosition] & 255\nsourcePixel = sourcePixel | sourcePixel"];
n68136 [shape=box,label="(68136)\nLoops: 8, 7\nScopes: 194, 191, 189, 188, 186, 185, 124, 24, 0\nvar sourcePixel = cast cast sourceData[sourcePosition] & 255\nvar sourcePixel = sourcePixel << 24\nvar sourcePixel = sourcePosition + 1\nvar sourcePixel = cast cast sourceData[sourcePixel] & 255\nvar sourcePixel = sourcePixel << 16\nvar sourcePixel = sourcePixel | sourcePixel\nvar sourcePixel = sourcePosition + 2\nvar sourcePixel = cast cast sourceData[sourcePixel] & 255\nvar sourcePixel = sourcePixel << 8\nvar sourcePixel = sourcePixel | sourcePixel\nvar sourcePixel = sourcePosition + 3\nvar sourcePixel = cast cast sourceData[sourcePixel] & 255\nsourcePixel = sourcePixel | sourcePixel"];
n68135 [shape=box,label="(68135)\nLoops: 8, 7\nScopes: 191, 189, 188, 186, 185, 124, 24, 0\nvar format = @:exhaustive format\n@:cond-branch format"];
n68134 [shape=box,label="(68134)\nLoops: 8, 7\nScopes: 193, 191, 189, 188, 186, 185, 124, 24, 0\nformat = 0"];
n68133 [shape=box,label="(68133)\nLoops: 8, 7\nScopes: 191, 189, 188, 186, 185, 124, 24, 0\nvar tmp = format == null\n@:cond-branch tmp"];
n68132 [shape=box,label="(68132)\nLoops: 8, 7\nScopes: 192, 191, 189, 188, 186, 185, 124, 24, 0\npremultiplied = false"];
n68131 [shape=box,label="(68131)\nLoops: 8, 7\nScopes: 191, 189, 188, 186, 185, 124, 24, 0\nvar format = sourceFormat\nvar premultiplied = sourcePremultiplied\nvar tmp = premultiplied == null\n@:cond-branch tmp"];
n68130 [shape=box,label="(68130)\nLoops: 8, 7\nScopes: 189, 188, 186, 185, 124, 24, 0\n` = ` + 1\nvar x = ` - 1"];
n68129 [shape=box,label="(68129)\nLoops: 8, 7\nScopes: 190, 189, 188, 186, 185, 124, 24, 0\nbreak"];
n68128 [shape=box,label="(68128)\nLoops: 8, 7\nScopes: 189, 188, 186, 185, 124, 24, 0\nvar tmp = ! ((` < `1))\n@:cond-branch tmp"];
n68127 [shape=box,label="<loop-head>
(68127)\nLoops: 8, 7\nScopes: 189, 188, 186, 185, 124, 24, 0"];
n68126 [shape=box,label="(68126)\nLoops: 7\nScopes: 188, 186, 185, 124, 24, 0\nwhile ((true)) @:block 68128"];
n68125 [shape=box,label="(68125)\nLoops: 7\nScopes: 188, 186, 185, 124, 24, 0\nvar ` = 0\nvar `1 = destView.width"];
n68124 [shape=box,label="(68124)\nLoops: 7\nScopes: 186, 185, 124, 24, 0\n` = ` + 1\nvar y = ` - 1\nvar sourceView = sourceView.byteOffset\nvar sourcePosition = sourceView.stride * y\nsourcePosition = sourceView + sourcePosition\nvar destView = destView.byteOffset\nvar destPosition = destView.stride * y\ndestPosition = destView + destPosition\nvar alphaView = alphaView.byteOffset\nvar alphaPosition = alphaView.stride * y\nalphaPosition = alphaView + alphaPosition"];
n68123 [shape=box,label="(68123)\nLoops: 7\nScopes: 187, 186, 185, 124, 24, 0\nbreak"];
n68122 [shape=box,label="(68122)\nLoops: 7\nScopes: 186, 185, 124, 24, 0\nvar tmp = ! ((` < `1))\n@:cond-branch tmp"];
n68121 [shape=box,label="<loop-head>
(68121)\nLoops: 7\nScopes: 186, 185, 124, 24, 0"];
n68120 [shape=box,label="(68120)\nScopes: 185, 124, 24, 0\nwhile ((true)) @:block 68122"];
n68119 [shape=box,label="(68119)\nScopes: 129, 124, 24, 0"];
n68118 [shape=box,label="(68118)\nLoops: 5\nScopes: 130, 129, 124, 24, 0"];
n68117 [shape=box,label="(68117)\nLoops: 5\nScopes: 132, 130, 129, 124, 24, 0"];
n68116 [shape=box,label="(68116)\nLoops: 6, 5\nScopes: 133, 132, 130, 129, 124, 24, 0\nsourcePosition = sourcePosition + 4\ndestPosition = destPosition + 4\nalphaPosition = alphaPosition + 4"];
n68115 [shape=box,label="(68115)\nLoops: 6, 5\nScopes: 168, 133, 132, 130, 129, 124, 24, 0"];
n68114 [shape=box,label="(68114)\nLoops: 6, 5\nScopes: 173, 168, 133, 132, 130, 129, 124, 24, 0"];
n68113 [shape=box,label="(68113)\nLoops: 6, 5\nScopes: 184, 173, 168, 133, 132, 130, 129, 124, 24, 0\ncast destData[destPosition] = cast cast cast cast cast cast destPixel >>> 8 & 255\nvar tmp = destPosition + 1\ncast destData[tmp] = cast cast cast cast cast cast destPixel >>> 16 & 255\nvar tmp = destPosition + 2\ncast destData[tmp] = cast cast cast cast cast cast destPixel >>> 24 & 255\nvar tmp = destPosition + 3\ncast destData[tmp] = cast cast cast cast destPixel & 255"];
n68112 [shape=box,label="(68112)\nLoops: 6, 5\nScopes: 183, 173, 168, 133, 132, 130, 129, 124, 24, 0\ncast destData[destPosition] = cast cast cast cast destPixel & 255\nvar tmp = destPosition + 1\ncast destData[tmp] = cast cast cast cast cast cast destPixel >>> 24 & 255\nvar tmp = destPosition + 2\ncast destData[tmp] = cast cast cast cast cast cast destPixel >>> 16 & 255\nvar tmp = destPosition + 3\ncast destData[tmp] = cast cast cast cast cast cast destPixel >>> 8 & 255"];
n68111 [shape=box,label="(68111)\nLoops: 6, 5\nScopes: 182, 173, 168, 133, 132, 130, 129, 124, 24, 0\ncast destData[destPosition] = cast cast cast cast cast cast destPixel >>> 24 & 255\nvar tmp = destPosition + 1\ncast destData[tmp] = cast cast cast cast cast cast destPixel >>> 16 & 255\nvar tmp = destPosition + 2\ncast destData[tmp] = cast cast cast cast cast cast destPixel >>> 8 & 255\nvar tmp = destPosition + 3\ncast destData[tmp] = cast cast cast cast destPixel & 255"];
n68110 [shape=box,label="(68110)\nLoops: 6, 5\nScopes: 173, 168, 133, 132, 130, 129, 124, 24, 0\nvar format = @:exhaustive format\n@:cond-branch format"];
n68109 [shape=box,label="(68109)\nLoops: 6, 5\nScopes: 176, 173, 168, 133, 132, 130, 129, 124, 24, 0"];
n68108 [shape=box,label="(68108)\nLoops: 6, 5\nScopes: 179, 176, 173, 168, 133, 132, 130, 129, 124, 24, 0"];
n68107 [shape=box,label="(68107)\nLoops: 6, 5\nScopes: 180, 179, 176, 173, 168, 133, 132, 130, 129, 124, 24, 0"];
n68106 [shape=box,label="(68106)\nLoops: 6, 5\nScopes: 181, 180, 179, 176, 173, 168, 133, 132, 130, 129, 124, 24, 0\nvar r = (cast cast cast cast cast cast destPixel >>> 24 & 255) * lime.math._RGBA.RGBA_Impl_.a16\nvar r = r >> 16\nvar g = (cast cast cast cast cast cast destPixel >>> 16 & 255) * lime.math._RGBA.RGBA_Impl_.a16\nvar g = g >> 16\nvar b = (cast cast cast cast cast cast destPixel >>> 8 & 255) * lime.math._RGBA.RGBA_Impl_.a16\nvar b = b >> 16\nvar destPixel = r & 255\nvar destPixel = destPixel << 24\nvar destPixel = g & 255\nvar destPixel = destPixel << 16\nvar destPixel = destPixel | destPixel\nvar destPixel = b & 255\nvar destPixel = destPixel << 8\nvar destPixel = destPixel | destPixel\nvar destPixel = cast cast cast cast destPixel & 255 & 255\ndestPixel = destPixel | destPixel"];
n68105 [shape=box,label="(68105)\nLoops: 6, 5\nScopes: 180, 179, 176, 173, 168, 133, 132, 130, 129, 124, 24, 0\nlime.math._RGBA.RGBA_Impl_.a16 = cast cast lime.math._RGBA.RGBA_Impl_.__alpha16[cast cast cast cast destPixel & 255]"];
n68104 [shape=box,label="(68104)\nLoops: 6, 5\nScopes: 177, 176, 173, 168, 133, 132, 130, 129, 124, 24, 0"];
n68103 [shape=box,label="(68103)\nLoops: 6, 5\nScopes: 178, 177, 176, 173, 168, 133, 132, 130, 129, 124, 24, 0\ndestPixel = 0"];
n68102 [shape=box,label="(68102)\nLoops: 6, 5\nScopes: 179, 176, 173, 168, 133, 132, 130, 129, 124, 24, 0\nvar tmp = (cast cast cast cast destPixel & 255) != 255\n@:cond-branch tmp"];
n68101 [shape=box,label="(68101)\nLoops: 6, 5\nScopes: 177, 176, 173, 168, 133, 132, 130, 129, 124, 24, 0\nvar tmp = cast cast destPixel != 0\n@:cond-branch tmp"];
n68100 [shape=box,label="(68100)\nLoops: 6, 5\nScopes: 176, 173, 168, 133, 132, 130, 129, 124, 24, 0\nvar tmp = (cast cast cast cast destPixel & 255) == 0\n@:cond-branch tmp"];
n68099 [shape=box,label="(68099)\nLoops: 6, 5\nScopes: 173, 168, 133, 132, 130, 129, 124, 24, 0\nvar premultiplied = premultiplied\n@:cond-branch premultiplied"];
n68098 [shape=box,label="(68098)\nLoops: 6, 5\nScopes: 175, 173, 168, 133, 132, 130, 129, 124, 24, 0\nformat = 0"];
n68097 [shape=box,label="(68097)\nLoops: 6, 5\nScopes: 173, 168, 133, 132, 130, 129, 124, 24, 0\nvar tmp = format == null\n@:cond-branch tmp"];
n68096 [shape=box,label="(68096)\nLoops: 6, 5\nScopes: 174, 173, 168, 133, 132, 130, 129, 124, 24, 0\npremultiplied = false"];
n68095 [shape=box,label="(68095)\nLoops: 6, 5\nScopes: 173, 168, 133, 132, 130, 129, 124, 24, 0\nvar format = destFormat\nvar premultiplied = destPremultiplied\nvar tmp = premultiplied == null\n@:cond-branch tmp"];
n68094 [shape=box,label="(68094)\nLoops: 6, 5\nScopes: 168, 133, 132, 130, 129, 124, 24, 0"];
n68093 [shape=box,label="(68093)\nLoops: 6, 5\nScopes: 172, 168, 133, 132, 130, 129, 124, 24, 0\nvar value = cast lime.math._RGBA.RGBA_Impl_.__clamp\nvar value = blendAlpha * 255.0\nvar value = Math.round(value)\nvar value = cast value[value]\nvar destPixel = cast cast cast cast cast cast destPixel >>> 24 & 255 & 255\nvar destPixel = destPixel << 24\nvar destPixel = cast cast cast cast cast cast destPixel >>> 16 & 255 & 255\nvar destPixel = destPixel << 16\nvar destPixel = destPixel | destPixel\nvar destPixel = cast cast cast cast cast cast destPixel >>> 8 & 255 & 255\nvar destPixel = destPixel << 8\nvar destPixel = destPixel | destPixel\nvar destPixel = value & 255\ndestPixel = destPixel | destPixel"];
n68092 [shape=box,label="(68092)\nLoops: 6, 5\nScopes: 168, 133, 132, 130, 129, 124, 24, 0"];
n68091 [shape=box,label="(68091)\nLoops: 6, 5\nScopes: 171, 168, 133, 132, 130, 129, 124, 24, 0\nvar value = cast lime.math._RGBA.RGBA_Impl_.__clamp\nvar value = (cast cast cast cast cast cast sourcePixel >>> 8 & 255) * sourceAlpha\nvar value = (cast cast cast cast cast cast destPixel >>> 8 & 255) * destAlpha\nvar value = value * oneMinusSourceAlpha\nvar value = value + value\nvar value = value / blendAlpha\nvar value = Math.round(value)\nvar value = cast value[value]\nvar destPixel = cast cast cast cast cast cast destPixel >>> 24 & 255 & 255\nvar destPixel = destPixel << 24\nvar destPixel = cast cast cast cast cast cast destPixel >>> 16 & 255 & 255\nvar destPixel = destPixel << 16\nvar destPixel = destPixel | destPixel\nvar destPixel = value & 255\nvar destPixel = destPixel << 8\nvar destPixel = destPixel | destPixel\nvar destPixel = cast cast cast cast destPixel & 255 & 255\ndestPixel = destPixel | destPixel"];
n68090 [shape=box,label="(68090)\nLoops: 6, 5\nScopes: 168, 133, 132, 130, 129, 124, 24, 0"];
n68089 [shape=box,label="(68089)\nLoops: 6, 5\nScopes: 170, 168, 133, 132, 130, 129, 124, 24, 0\nvar value = cast lime.math._RGBA.RGBA_Impl_.__clamp\nvar value = (cast cast cast cast cast cast sourcePixel >>> 16 & 255) * sourceAlpha\nvar value = (cast cast cast cast cast cast destPixel >>> 16 & 255) * destAlpha\nvar value = value * oneMinusSourceAlpha\nvar value = value + value\nvar value = value / blendAlpha\nvar value = Math.round(value)\nvar value = cast value[value]\nvar destPixel = cast cast cast cast cast cast destPixel >>> 24 & 255 & 255\nvar destPixel = destPixel << 24\nvar destPixel = value & 255\nvar destPixel = destPixel << 16\nvar destPixel = destPixel | destPixel\nvar destPixel = cast cast cast cast cast cast destPixel >>> 8 & 255 & 255\nvar destPixel = destPixel << 8\nvar destPixel = destPixel | destPixel\nvar destPixel = cast cast cast cast destPixel & 255 & 255\ndestPixel = destPixel | destPixel"];
n68088 [shape=box,label="(68088)\nLoops: 6, 5\nScopes: 168, 133, 132, 130, 129, 124, 24, 0"];
n68087 [shape=box,label="(68087)\nLoops: 6, 5\nScopes: 169, 168, 133, 132, 130, 129, 124, 24, 0\nvar value = cast lime.math._RGBA.RGBA_Impl_.__clamp\nvar value = (cast cast cast cast cast cast sourcePixel >>> 24 & 255) * sourceAlpha\nvar value = (cast cast cast cast cast cast destPixel >>> 24 & 255) * destAlpha\nvar value = value * oneMinusSourceAlpha\nvar value = value + value\nvar value = value / blendAlpha\nvar value = Math.round(value)\nvar value = cast value[value]\nvar destPixel = value & 255\nvar destPixel = destPixel << 24\nvar destPixel = cast cast cast cast cast cast destPixel >>> 16 & 255 & 255\nvar destPixel = destPixel << 16\nvar destPixel = destPixel | destPixel\nvar destPixel = cast cast cast cast cast cast destPixel >>> 8 & 255 & 255\nvar destPixel = destPixel << 8\nvar destPixel = destPixel | destPixel\nvar destPixel = cast cast cast cast destPixel & 255 & 255\ndestPixel = destPixel | destPixel"];
n68086 [shape=box,label="(68086)\nLoops: 6, 5\nScopes: 168, 133, 132, 130, 129, 124, 24, 0\ndestAlpha = (cast cast cast cast destPixel & 255) / 255.0\noneMinusSourceAlpha = 1 - sourceAlpha\nvar blendAlpha = destAlpha * oneMinusSourceAlpha\nblendAlpha = sourceAlpha + blendAlpha"];
n68085 [shape=box,label="(68085)\nLoops: 6, 5\nScopes: 133, 132, 130, 129, 124, 24, 0\nvar sourceAlpha = (cast cast cast cast alphaPixel & 255) / 255.0\nvar sourceAlpha = (cast cast cast cast sourcePixel & 255) / 255.0\nsourceAlpha = sourceAlpha * sourceAlpha\nvar tmp = sourceAlpha > 0\n@:cond-branch tmp"];
n68084 [shape=box,label="(68084)\nLoops: 6, 5\nScopes: 157, 133, 132, 130, 129, 124, 24, 0"];
n68083 [shape=box,label="(68083)\nLoops: 6, 5\nScopes: 163, 157, 133, 132, 130, 129, 124, 24, 0"];
n68082 [shape=box,label="(68082)\nLoops: 6, 5\nScopes: 166, 163, 157, 133, 132, 130, 129, 124, 24, 0"];
n68081 [shape=box,label="(68081)\nLoops: 6, 5\nScopes: 167, 166, 163, 157, 133, 132, 130, 129, 124, 24, 0\nvar r = cast lime.math._RGBA.RGBA_Impl_.__clamp\nvar r = (cast cast cast cast cast cast alphaPixel >>> 24 & 255) * lime.math._RGBA.RGBA_Impl_.unmult\nvar r = Math.round(r)\nvar r = cast r[r]\nvar g = cast lime.math._RGBA.RGBA_Impl_.__clamp\nvar g = (cast cast cast cast cast cast alphaPixel >>> 16 & 255) * lime.math._RGBA.RGBA_Impl_.unmult\nvar g = Math.round(g)\nvar g = cast g[g]\nvar b = cast lime.math._RGBA.RGBA_Impl_.__clamp\nvar b = (cast cast cast cast cast cast alphaPixel >>> 8 & 255) * lime.math._RGBA.RGBA_Impl_.unmult\nvar b = Math.round(b)\nvar b = cast b[b]\nvar alphaPixel = r & 255\nvar alphaPixel = alphaPixel << 24\nvar alphaPixel = g & 255\nvar alphaPixel = alphaPixel << 16\nvar alphaPixel = alphaPixel | alphaPixel\nvar alphaPixel = b & 255\nvar alphaPixel = alphaPixel << 8\nvar alphaPixel = alphaPixel | alphaPixel\nvar alphaPixel = cast cast cast cast alphaPixel & 255 & 255\nalphaPixel = alphaPixel | alphaPixel"];
n68080 [shape=box,label="(68080)\nLoops: 6, 5\nScopes: 166, 163, 157, 133, 132, 130, 129, 124, 24, 0\nlime.math._RGBA.RGBA_Impl_.unmult = 255.0 / (cast cast cast cast alphaPixel & 255)"];
n68079 [shape=box,label="(68079)\nLoops: 6, 5\nScopes: 163, 157, 133, 132, 130, 129, 124, 24, 0\n@:cond-branch tmp"];
n68078 [shape=box,label="(68078)\nLoops: 6, 5\nScopes: 165, 163, 157, 133, 132, 130, 129, 124, 24, 0\ntmp = false"];
n68077 [shape=box,label="(68077)\nLoops: 6, 5\nScopes: 164, 163, 157, 133, 132, 130, 129, 124, 24, 0\ntmp = (cast cast cast cast alphaPixel & 255) != 255"];
n68076 [shape=box,label="(68076)\nLoops: 6, 5\nScopes: 163, 157, 133, 132, 130, 129, 124, 24, 0\nvar tmp\nvar tmp = (cast cast cast cast alphaPixel & 255) != 0\n@:cond-branch tmp"];
n68075 [shape=box,label="(68075)\nLoops: 6, 5\nScopes: 157, 133, 132, 130, 129, 124, 24, 0\nvar premultiplied = premultiplied\n@:cond-branch premultiplied"];
n68074 [shape=box,label="(68074)\nLoops: 6, 5\nScopes: 162, 157, 133, 132, 130, 129, 124, 24, 0\nvar alphaPixel = alphaPosition + 2\nvar alphaPixel = cast cast alphaData[alphaPixel] & 255\nvar alphaPixel = alphaPixel << 24\nvar alphaPixel = alphaPosition + 1\nvar alphaPixel = cast cast alphaData[alphaPixel] & 255\nvar alphaPixel = alphaPixel << 16\nvar alphaPixel = alphaPixel | alphaPixel\nvar alphaPixel = cast cast alphaData[alphaPosition] & 255\nvar alphaPixel = alphaPixel << 8\nvar alphaPixel = alphaPixel | alphaPixel\nvar alphaPixel = alphaPosition + 3\nvar alphaPixel = cast cast alphaData[alphaPixel] & 255\nalphaPixel = alphaPixel | alphaPixel"];
n68073 [shape=box,label="(68073)\nLoops: 6, 5\nScopes: 161, 157, 133, 132, 130, 129, 124, 24, 0\nvar alphaPixel = alphaPosition + 1\nvar alphaPixel = cast cast alphaData[alphaPixel] & 255\nvar alphaPixel = alphaPixel << 24\nvar alphaPixel = alphaPosition + 2\nvar alphaPixel = cast cast alphaData[alphaPixel] & 255\nvar alphaPixel = alphaPixel << 16\nvar alphaPixel = alphaPixel | alphaPixel\nvar alphaPixel = alphaPosition + 3\nvar alphaPixel = cast cast alphaData[alphaPixel] & 255\nvar alphaPixel = alphaPixel << 8\nvar alphaPixel = alphaPixel | alphaPixel\nvar alphaPixel = cast cast alphaData[alphaPosition] & 255\nalphaPixel = alphaPixel | alphaPixel"];
n68072 [shape=box,label="(68072)\nLoops: 6, 5\nScopes: 160, 157, 133, 132, 130, 129, 124, 24, 0\nvar alphaPixel = cast cast alphaData[alphaPosition] & 255\nvar alphaPixel = alphaPixel << 24\nvar alphaPixel = alphaPosition + 1\nvar alphaPixel = cast cast alphaData[alphaPixel] & 255\nvar alphaPixel = alphaPixel << 16\nvar alphaPixel = alphaPixel | alphaPixel\nvar alphaPixel = alphaPosition + 2\nvar alphaPixel = cast cast alphaData[alphaPixel] & 255\nvar alphaPixel = alphaPixel << 8\nvar alphaPixel = alphaPixel | alphaPixel\nvar alphaPixel = alphaPosition + 3\nvar alphaPixel = cast cast alphaData[alphaPixel] & 255\nalphaPixel = alphaPixel | alphaPixel"];
n68071 [shape=box,label="(68071)\nLoops: 6, 5\nScopes: 157, 133, 132, 130, 129, 124, 24, 0\nvar format = @:exhaustive format\n@:cond-branch format"];
n68070 [shape=box,label="(68070)\nLoops: 6, 5\nScopes: 159, 157, 133, 132, 130, 129, 124, 24, 0\nformat = 0"];
n68069 [shape=box,label="(68069)\nLoops: 6, 5\nScopes: 157, 133, 132, 130, 129, 124, 24, 0\nvar tmp = format == null\n@:cond-branch tmp"];
n68068 [shape=box,label="(68068)\nLoops: 6, 5\nScopes: 158, 157, 133, 132, 130, 129, 124, 24, 0\npremultiplied = false"];
n68067 [shape=box,label="(68067)\nLoops: 6, 5\nScopes: 157, 133, 132, 130, 129, 124, 24, 0\nvar format = alphaFormat\nvar premultiplied = false\nvar tmp = premultiplied == null\n@:cond-branch tmp"];
n68066 [shape=box,label="(68066)\nLoops: 6, 5\nScopes: 133, 132, 130, 129, 124, 24, 0"];
n68065 [shape=box,label="(68065)\nLoops: 6, 5\nScopes: 146, 133, 132, 130, 129, 124, 24, 0"];
n68064 [shape=box,label="(68064)\nLoops: 6, 5\nScopes: 152, 146, 133, 132, 130, 129, 124, 24, 0"];
n68063 [shape=box,label="(68063)\nLoops: 6, 5\nScopes: 155, 152, 146, 133, 132, 130, 129, 124, 24, 0"];
n68062 [shape=box,label="(68062)\nLoops: 6, 5\nScopes: 156, 155, 152, 146, 133, 132, 130, 129, 124, 24, 0\nvar r = cast lime.math._RGBA.RGBA_Impl_.__clamp\nvar r = (cast cast cast cast cast cast destPixel >>> 24 & 255) * lime.math._RGBA.RGBA_Impl_.unmult\nvar r = Math.round(r)\nvar r = cast r[r]\nvar g = cast lime.math._RGBA.RGBA_Impl_.__clamp\nvar g = (cast cast cast cast cast cast destPixel >>> 16 & 255) * lime.math._RGBA.RGBA_Impl_.unmult\nvar g = Math.round(g)\nvar g = cast g[g]\nvar b = cast lime.math._RGBA.RGBA_Impl_.__clamp\nvar b = (cast cast cast cast cast cast destPixel >>> 8 & 255) * lime.math._RGBA.RGBA_Impl_.unmult\nvar b = Math.round(b)\nvar b = cast b[b]\nvar destPixel = r & 255\nvar destPixel = destPixel << 24\nvar destPixel = g & 255\nvar destPixel = destPixel << 16\nvar destPixel = destPixel | destPixel\nvar destPixel = b & 255\nvar destPixel = destPixel << 8\nvar destPixel = destPixel | destPixel\nvar destPixel = cast cast cast cast destPixel & 255 & 255\ndestPixel = destPixel | destPixel"];
n68061 [shape=box,label="(68061)\nLoops: 6, 5\nScopes: 155, 152, 146, 133, 132, 130, 129, 124, 24, 0\nlime.math._RGBA.RGBA_Impl_.unmult = 255.0 / (cast cast cast cast destPixel & 255)"];
n68060 [shape=box,label="(68060)\nLoops: 6, 5\nScopes: 152, 146, 133, 132, 130, 129, 124, 24, 0\n@:cond-branch tmp"];
n68059 [shape=box,label="(68059)\nLoops: 6, 5\nScopes: 154, 152, 146, 133, 132, 130, 129, 124, 24, 0\ntmp = false"];
n68058 [shape=box,label="(68058)\nLoops: 6, 5\nScopes: 153, 152, 146, 133, 132, 130, 129, 124, 24, 0\ntmp = (cast cast cast cast destPixel & 255) != 255"];
n68057 [shape=box,label="(68057)\nLoops: 6, 5\nScopes: 152, 146, 133, 132, 130, 129, 124, 24, 0\nvar tmp\nvar tmp = (cast cast cast cast destPixel & 255) != 0\n@:cond-branch tmp"];
n68056 [shape=box,label="(68056)\nLoops: 6, 5\nScopes: 146, 133, 132, 130, 129, 124, 24, 0\nvar premultiplied = premultiplied\n@:cond-branch premultiplied"];
n68055 [shape=box,label="(68055)\nLoops: 6, 5\nScopes: 151, 146, 133, 132, 130, 129, 124, 24, 0\nvar destPixel = destPosition + 2\nvar destPixel = cast cast destData[destPixel] & 255\nvar destPixel = destPixel << 24\nvar destPixel = destPosition + 1\nvar destPixel = cast cast destData[destPixel] & 255\nvar destPixel = destPixel << 16\nvar destPixel = destPixel | destPixel\nvar destPixel = cast cast destData[destPosition] & 255\nvar destPixel = destPixel << 8\nvar destPixel = destPixel | destPixel\nvar destPixel = destPosition + 3\nvar destPixel = cast cast destData[destPixel] & 255\ndestPixel = destPixel | destPixel"];
n68054 [shape=box,label="(68054)\nLoops: 6, 5\nScopes: 150, 146, 133, 132, 130, 129, 124, 24, 0\nvar destPixel = destPosition + 1\nvar destPixel = cast cast destData[destPixel] & 255\nvar destPixel = destPixel << 24\nvar destPixel = destPosition + 2\nvar destPixel = cast cast destData[destPixel] & 255\nvar destPixel = destPixel << 16\nvar destPixel = destPixel | destPixel\nvar destPixel = destPosition + 3\nvar destPixel = cast cast destData[destPixel] & 255\nvar destPixel = destPixel << 8\nvar destPixel = destPixel | destPixel\nvar destPixel = cast cast destData[destPosition] & 255\ndestPixel = destPixel | destPixel"];
n68053 [shape=box,label="(68053)\nLoops: 6, 5\nScopes: 149, 146, 133, 132, 130, 129, 124, 24, 0\nvar destPixel = cast cast destData[destPosition] & 255\nvar destPixel = destPixel << 24\nvar destPixel = destPosition + 1\nvar destPixel = cast cast destData[destPixel] & 255\nvar destPixel = destPixel << 16\nvar destPixel = destPixel | destPixel\nvar destPixel = destPosition + 2\nvar destPixel = cast cast destData[destPixel] & 255\nvar destPixel = destPixel << 8\nvar destPixel = destPixel | destPixel\nvar destPixel = destPosition + 3\nvar destPixel = cast cast destData[destPixel] & 255\ndestPixel = destPixel | destPixel"];
n68052 [shape=box,label="(68052)\nLoops: 6, 5\nScopes: 146, 133, 132, 130, 129, 124, 24, 0\nvar format = @:exhaustive format\n@:cond-branch format"];
n68051 [shape=box,label="(68051)\nLoops: 6, 5\nScopes: 148, 146, 133, 132, 130, 129, 124, 24, 0\nformat = 0"];
n68050 [shape=box,label="(68050)\nLoops: 6, 5\nScopes: 146, 133, 132, 130, 129, 124, 24, 0\nvar tmp = format == null\n@:cond-branch tmp"];
n68049 [shape=box,label="(68049)\nLoops: 6, 5\nScopes: 147, 146, 133, 132, 130, 129, 124, 24, 0\npremultiplied = false"];
n68048 [shape=box,label="(68048)\nLoops: 6, 5\nScopes: 146, 133, 132, 130, 129, 124, 24, 0\nvar format = destFormat\nvar premultiplied = destPremultiplied\nvar tmp = premultiplied == null\n@:cond-branch tmp"];
n68047 [shape=box,label="(68047)\nLoops: 6, 5\nScopes: 133, 132, 130, 129, 124, 24, 0"];
n68046 [shape=box,label="(68046)\nLoops: 6, 5\nScopes: 135, 133, 132, 130, 129, 124, 24, 0"];
n68045 [shape=box,label="(68045)\nLoops: 6, 5\nScopes: 141, 135, 133, 132, 130, 129, 124, 24, 0"];
n68044 [shape=box,label="(68044)\nLoops: 6, 5\nScopes: 144, 141, 135, 133, 132, 130, 129, 124, 24, 0"];
n68043 [shape=box,label="(68043)\nLoops: 6, 5\nScopes: 145, 144, 141, 135, 133, 132, 130, 129, 124, 24, 0\nvar r = cast lime.math._RGBA.RGBA_Impl_.__clamp\nvar r = (cast cast cast cast cast cast sourcePixel >>> 24 & 255) * lime.math._RGBA.RGBA_Impl_.unmult\nvar r = Math.round(r)\nvar r = cast r[r]\nvar g = cast lime.math._RGBA.RGBA_Impl_.__clamp\nvar g = (cast cast cast cast cast cast sourcePixel >>> 16 & 255) * lime.math._RGBA.RGBA_Impl_.unmult\nvar g = Math.round(g)\nvar g = cast g[g]\nvar b = cast lime.math._RGBA.RGBA_Impl_.__clamp\nvar b = (cast cast cast cast cast cast sourcePixel >>> 8 & 255) * lime.math._RGBA.RGBA_Impl_.unmult\nvar b = Math.round(b)\nvar b = cast b[b]\nvar sourcePixel = r & 255\nvar sourcePixel = sourcePixel << 24\nvar sourcePixel = g & 255\nvar sourcePixel = sourcePixel << 16\nvar sourcePixel = sourcePixel | sourcePixel\nvar sourcePixel = b & 255\nvar sourcePixel = sourcePixel << 8\nvar sourcePixel = sourcePixel | sourcePixel\nvar sourcePixel = cast cast cast cast sourcePixel & 255 & 255\nsourcePixel = sourcePixel | sourcePixel"];
n68042 [shape=box,label="(68042)\nLoops: 6, 5\nScopes: 144, 141, 135, 133, 132, 130, 129, 124, 24, 0\nlime.math._RGBA.RGBA_Impl_.unmult = 255.0 / (cast cast cast cast sourcePixel & 255)"];
n68041 [shape=box,label="(68041)\nLoops: 6, 5\nScopes: 141, 135, 133, 132, 130, 129, 124, 24, 0\n@:cond-branch tmp"];
n68040 [shape=box,label="(68040)\nLoops: 6, 5\nScopes: 143, 141, 135, 133, 132, 130, 129, 124, 24, 0\ntmp = false"];
n68039 [shape=box,label="(68039)\nLoops: 6, 5\nScopes: 142, 141, 135, 133, 132, 130, 129, 124, 24, 0\ntmp = (cast cast cast cast sourcePixel & 255) != 255"];
n68038 [shape=box,label="(68038)\nLoops: 6, 5\nScopes: 141, 135, 133, 132, 130, 129, 124, 24, 0\nvar tmp\nvar tmp = (cast cast cast cast sourcePixel & 255) != 0\n@:cond-branch tmp"];
n68037 [shape=box,label="(68037)\nLoops: 6, 5\nScopes: 135, 133, 132, 130, 129, 124, 24, 0\nvar premultiplied = premultiplied\n@:cond-branch premultiplied"];
n68036 [shape=box,label="(68036)\nLoops: 6, 5\nScopes: 140, 135, 133, 132, 130, 129, 124, 24, 0\nvar sourcePixel = sourcePosition + 2\nvar sourcePixel = cast cast sourceData[sourcePixel] & 255\nvar sourcePixel = sourcePixel << 24\nvar sourcePixel = sourcePosition + 1\nvar sourcePixel = cast cast sourceData[sourcePixel] & 255\nvar sourcePixel = sourcePixel << 16\nvar sourcePixel = sourcePixel | sourcePixel\nvar sourcePixel = cast cast sourceData[sourcePosition] & 255\nvar sourcePixel = sourcePixel << 8\nvar sourcePixel = sourcePixel | sourcePixel\nvar sourcePixel = sourcePosition + 3\nvar sourcePixel = cast cast sourceData[sourcePixel] & 255\nsourcePixel = sourcePixel | sourcePixel"];
n68035 [shape=box,label="(68035)\nLoops: 6, 5\nScopes: 139, 135, 133, 132, 130, 129, 124, 24, 0\nvar sourcePixel = sourcePosition + 1\nvar sourcePixel = cast cast sourceData[sourcePixel] & 255\nvar sourcePixel = sourcePixel << 24\nvar sourcePixel = sourcePosition + 2\nvar sourcePixel = cast cast sourceData[sourcePixel] & 255\nvar sourcePixel = sourcePixel << 16\nvar sourcePixel = sourcePixel | sourcePixel\nvar sourcePixel = sourcePosition + 3\nvar sourcePixel = cast cast sourceData[sourcePixel] & 255\nvar sourcePixel = sourcePixel << 8\nvar sourcePixel = sourcePixel | sourcePixel\nvar sourcePixel = cast cast sourceData[sourcePosition] & 255\nsourcePixel = sourcePixel | sourcePixel"];
n68034 [shape=box,label="(68034)\nLoops: 6, 5\nScopes: 138, 135, 133, 132, 130, 129, 124, 24, 0\nvar sourcePixel = cast cast sourceData[sourcePosition] & 255\nvar sourcePixel = sourcePixel << 24\nvar sourcePixel = sourcePosition + 1\nvar sourcePixel = cast cast sourceData[sourcePixel] & 255\nvar sourcePixel = sourcePixel << 16\nvar sourcePixel = sourcePixel | sourcePixel\nvar sourcePixel = sourcePosition + 2\nvar sourcePixel = cast cast sourceData[sourcePixel] & 255\nvar sourcePixel = sourcePixel << 8\nvar sourcePixel = sourcePixel | sourcePixel\nvar sourcePixel = sourcePosition + 3\nvar sourcePixel = cast cast sourceData[sourcePixel] & 255\nsourcePixel = sourcePixel | sourcePixel"];
n68033 [shape=box,label="(68033)\nLoops: 6, 5\nScopes: 135, 133, 132, 130, 129, 124, 24, 0\nvar format = @:exhaustive format\n@:cond-branch format"];
n68032 [shape=box,label="(68032)\nLoops: 6, 5\nScopes: 137, 135, 133, 132, 130, 129, 124, 24, 0\nformat = 0"];
n68031 [shape=box,label="(68031)\nLoops: 6, 5\nScopes: 135, 133, 132, 130, 129, 124, 24, 0\nvar tmp = format == null\n@:cond-branch tmp"];
n68030 [shape=box,label="(68030)\nLoops: 6, 5\nScopes: 136, 135, 133, 132, 130, 129, 124, 24, 0\npremultiplied = false"];
n68029 [shape=box,label="(68029)\nLoops: 6, 5\nScopes: 135, 133, 132, 130, 129, 124, 24, 0\nvar format = sourceFormat\nvar premultiplied = sourcePremultiplied\nvar tmp = premultiplied == null\n@:cond-branch tmp"];
n68028 [shape=box,label="(68028)\nLoops: 6, 5\nScopes: 133, 132, 130, 129, 124, 24, 0\n` = ` + 1\nvar x = ` - 1"];
n68027 [shape=box,label="(68027)\nLoops: 6, 5\nScopes: 134, 133, 132, 130, 129, 124, 24, 0\nbreak"];
n68026 [shape=box,label="(68026)\nLoops: 6, 5\nScopes: 133, 132, 130, 129, 124, 24, 0\nvar tmp = ! ((` < `1))\n@:cond-branch tmp"];
n68025 [shape=box,label="<loop-head>
(68025)\nLoops: 6, 5\nScopes: 133, 132, 130, 129, 124, 24, 0"];
n68024 [shape=box,label="(68024)\nLoops: 5\nScopes: 132, 130, 129, 124, 24, 0\nwhile ((true)) @:block 68026"];
n68023 [shape=box,label="(68023)\nLoops: 5\nScopes: 132, 130, 129, 124, 24, 0\nvar ` = 0\nvar `1 = destView.width"];
n68022 [shape=box,label="(68022)\nLoops: 5\nScopes: 130, 129, 124, 24, 0\n` = ` + 1\nvar y = ` - 1\nvar sourceView = sourceView.byteOffset\nvar sourcePosition = sourceView.stride * y\nsourcePosition = sourceView + sourcePosition\nvar destView = destView.byteOffset\nvar destPosition = destView.stride * y\ndestPosition = destView + destPosition\nvar alphaView = alphaView.byteOffset\nvar alphaPosition = alphaView.stride * y\nalphaPosition = alphaView + alphaPosition"];
n68021 [shape=box,label="(68021)\nLoops: 5\nScopes: 131, 130, 129, 124, 24, 0\nbreak"];
n68020 [shape=box,label="(68020)\nLoops: 5\nScopes: 130, 129, 124, 24, 0\nvar tmp = ! ((` < `1))\n@:cond-branch tmp"];
n68019 [shape=box,label="<loop-head>
(68019)\nLoops: 5\nScopes: 130, 129, 124, 24, 0"];
n68018 [shape=box,label="(68018)\nScopes: 129, 124, 24, 0\nwhile ((true)) @:block 68020"];
n68017 [shape=box,label="(68017)\nScopes: 185, 124, 24, 0\nvar ` = 0\nvar `1 = destView.height"];
n68016 [shape=box,label="(68016)\nScopes: 129, 124, 24, 0\nvar ` = 0\nvar `1 = destView.height"];
n68015 [shape=box,label="(68015)\nScopes: 124, 24, 0\nvar alphaView = sourceView.y + (alphaView)\nvar alphaView = new lime._internal.graphics._ImageDataUtil.ImageDataView(alphaImage, new lime.math.Rectangle(alphaView, alphaView, sourceView.width, sourceView.height))\nvar tmp = cast destPoint.x | 0\nvar tmp = cast destPoint.y | 0\ndestView.clip(tmp, tmp, alphaView.width, alphaView.height)\nvar blend = blend\n@:cond-branch blend"];
n68014 [shape=box,label="(68014)\nScopes: 128, 124, 24, 0\nalphaView = alphaPoint.y"];
n68013 [shape=box,label="(68013)\nScopes: 127, 124, 24, 0\nalphaView = 0"];
n68012 [shape=box,label="(68012)\nScopes: 124, 24, 0\nvar alphaView = sourceView.x + (alphaView)\nvar alphaView\nvar alphaView = alphaPoint == null\n@:cond-branch alphaView"];
n68011 [shape=box,label="(68011)\nScopes: 126, 124, 24, 0\nalphaView = alphaPoint.x"];
n68010 [shape=box,label="(68010)\nScopes: 125, 124, 24, 0\nalphaView = 0"];
n68009 [shape=box,label="(68009)\nScopes: 40, 24, 0"];
n68008 [shape=box,label="(68008)\nScopes: 87, 40, 24, 0"];
n68007 [shape=box,label="(68007)\nScopes: 95, 87, 40, 24, 0"];
n68006 [shape=box,label="(68006)\nLoops: 3\nScopes: 96, 95, 87, 40, 24, 0"];
n68005 [shape=box,label="(68005)\nLoops: 3\nScopes: 98, 96, 95, 87, 40, 24, 0"];
n68004 [shape=box,label="(68004)\nLoops: 4, 3\nScopes: 99, 98, 96, 95, 87, 40, 24, 0\nsourcePosition = sourcePosition + 4\ndestPosition = destPosition + 4"];
n68003 [shape=box,label="(68003)\nLoops: 4, 3\nScopes: 112, 99, 98, 96, 95, 87, 40, 24, 0"];
n68002 [shape=box,label="(68002)\nLoops: 4, 3\nScopes: 123, 112, 99, 98, 96, 95, 87, 40, 24, 0\ncast destData[destPosition] = cast cast cast cast cast cast sourcePixel >>> 8 & 255\nvar tmp = destPosition + 1\ncast destData[tmp] = cast cast cast cast cast cast sourcePixel >>> 16 & 255\nvar tmp = destPosition + 2\ncast destData[tmp] = cast cast cast cast cast cast sourcePixel >>> 24 & 255\nvar tmp = destPosition + 3\ncast destData[tmp] = cast cast cast cast sourcePixel & 255"];
n68001 [shape=box,label="(68001)\nLoops: 4, 3\nScopes: 122, 112, 99, 98, 96, 95, 87, 40, 24, 0\ncast destData[destPosition] = cast cast cast cast sourcePixel & 255\nvar tmp = destPosition + 1\ncast destData[tmp] = cast cast cast cast cast cast sourcePixel >>> 24 & 255\nvar tmp = destPosition + 2\ncast destData[tmp] = cast cast cast cast cast cast sourcePixel >>> 16 & 255\nvar tmp = destPosition + 3\ncast destData[tmp] = cast cast cast cast cast cast sourcePixel >>> 8 & 255"];
n68000 [shape=box,label="(68000)\nLoops: 4, 3\nScopes: 121, 112, 99, 98, 96, 95, 87, 40, 24, 0\ncast destData[destPosition] = cast cast cast cast cast cast sourcePixel >>> 24 & 255\nvar tmp = destPosition + 1\ncast destData[tmp] = cast cast cast cast cast cast sourcePixel >>> 16 & 255\nvar tmp = destPosition + 2\ncast destData[tmp] = cast cast cast cast cast cast sourcePixel >>> 8 & 255\nvar tmp = destPosition + 3\ncast destData[tmp] = cast cast cast cast sourcePixel & 255"];
n67999 [shape=box,label="(67999)\nLoops: 4, 3\nScopes: 112, 99, 98, 96, 95, 87, 40, 24, 0\nvar format = @:exhaustive format\n@:cond-branch format"];
n67998 [shape=box,label="(67998)\nLoops: 4, 3\nScopes: 115, 112, 99, 98, 96, 95, 87, 40, 24, 0"];
n67997 [shape=box,label="(67997)\nLoops: 4, 3\nScopes: 118, 115, 112, 99, 98, 96, 95, 87, 40, 24, 0"];
n67996 [shape=box,label="(67996)\nLoops: 4, 3\nScopes: 119, 118, 115, 112, 99, 98, 96, 95, 87, 40, 24, 0"];
n67995 [shape=box,label="(67995)\nLoops: 4, 3\nScopes: 120, 119, 118, 115, 112, 99, 98, 96, 95, 87, 40, 24, 0\nvar r = (cast cast cast cast cast cast sourcePixel >>> 24 & 255) * lime.math._RGBA.RGBA_Impl_.a16\nvar r = r >> 16\nvar g = (cast cast cast cast cast cast sourcePixel >>> 16 & 255) * lime.math._RGBA.RGBA_Impl_.a16\nvar g = g >> 16\nvar b = (cast cast cast cast cast cast sourcePixel >>> 8 & 255) * lime.math._RGBA.RGBA_Impl_.a16\nvar b = b >> 16\nvar sourcePixel = r & 255\nvar sourcePixel = sourcePixel << 24\nvar sourcePixel = g & 255\nvar sourcePixel = sourcePixel << 16\nvar sourcePixel = sourcePixel | sourcePixel\nvar sourcePixel = b & 255\nvar sourcePixel = sourcePixel << 8\nvar sourcePixel = sourcePixel | sourcePixel\nvar sourcePixel = cast cast cast cast sourcePixel & 255 & 255\nsourcePixel = sourcePixel | sourcePixel"];
n67994 [shape=box,label="(67994)\nLoops: 4, 3\nScopes: 119, 118, 115, 112, 99, 98, 96, 95, 87, 40, 24, 0\nlime.math._RGBA.RGBA_Impl_.a16 = cast cast lime.math._RGBA.RGBA_Impl_.__alpha16[cast cast cast cast sourcePixel & 255]"];
n67993 [shape=box,label="(67993)\nLoops: 4, 3\nScopes: 116, 115, 112, 99, 98, 96, 95, 87, 40, 24, 0"];
n67992 [shape=box,label="(67992)\nLoops: 4, 3\nScopes: 117, 116, 115, 112, 99, 98, 96, 95, 87, 40, 24, 0\nsourcePixel = 0"];
n67991 [shape=box,label="(67991)\nLoops: 4, 3\nScopes: 118, 115, 112, 99, 98, 96, 95, 87, 40, 24, 0\nvar tmp = (cast cast cast cast sourcePixel & 255) != 255\n@:cond-branch tmp"];
n67990 [shape=box,label="(67990)\nLoops: 4, 3\nScopes: 116, 115, 112, 99, 98, 96, 95, 87, 40, 24, 0\nvar tmp = cast cast sourcePixel != 0\n@:cond-branch tmp"];
n67989 [shape=box,label="(67989)\nLoops: 4, 3\nScopes: 115, 112, 99, 98, 96, 95, 87, 40, 24, 0\nvar tmp = (cast cast cast cast sourcePixel & 255) == 0\n@:cond-branch tmp"];
n67988 [shape=box,label="(67988)\nLoops: 4, 3\nScopes: 112, 99, 98, 96, 95, 87, 40, 24, 0\nvar premultiplied = premultiplied\n@:cond-branch premultiplied"];
n67987 [shape=box,label="(67987)\nLoops: 4, 3\nScopes: 114, 112, 99, 98, 96, 95, 87, 40, 24, 0\nformat = 0"];
n67986 [shape=box,label="(67986)\nLoops: 4, 3\nScopes: 112, 99, 98, 96, 95, 87, 40, 24, 0\nvar tmp = format == null\n@:cond-branch tmp"];
n67985 [shape=box,label="(67985)\nLoops: 4, 3\nScopes: 113, 112, 99, 98, 96, 95, 87, 40, 24, 0\npremultiplied = false"];
n67984 [shape=box,label="(67984)\nLoops: 4, 3\nScopes: 112, 99, 98, 96, 95, 87, 40, 24, 0\nvar format = destFormat\nvar premultiplied = destPremultiplied\nvar tmp = premultiplied == null\n@:cond-branch tmp"];
n67983 [shape=box,label="(67983)\nLoops: 4, 3\nScopes: 99, 98, 96, 95, 87, 40, 24, 0"];
n67982 [shape=box,label="(67982)\nLoops: 4, 3\nScopes: 101, 99, 98, 96, 95, 87, 40, 24, 0"];
n67981 [shape=box,label="(67981)\nLoops: 4, 3\nScopes: 107, 101, 99, 98, 96, 95, 87, 40, 24, 0"];
n67980 [shape=box,label="(67980)\nLoops: 4, 3\nScopes: 110, 107, 101, 99, 98, 96, 95, 87, 40, 24, 0"];
n67979 [shape=box,label="(67979)\nLoops: 4, 3\nScopes: 111, 110, 107, 101, 99, 98, 96, 95, 87, 40, 24, 0\nvar r = cast lime.math._RGBA.RGBA_Impl_.__clamp\nvar r = (cast cast cast cast cast cast sourcePixel >>> 24 & 255) * lime.math._RGBA.RGBA_Impl_.unmult\nvar r = Math.round(r)\nvar r = cast r[r]\nvar g = cast lime.math._RGBA.RGBA_Impl_.__clamp\nvar g = (cast cast cast cast cast cast sourcePixel >>> 16 & 255) * lime.math._RGBA.RGBA_Impl_.unmult\nvar g = Math.round(g)\nvar g = cast g[g]\nvar b = cast lime.math._RGBA.RGBA_Impl_.__clamp\nvar b = (cast cast cast cast cast cast sourcePixel >>> 8 & 255) * lime.math._RGBA.RGBA_Impl_.unmult\nvar b = Math.round(b)\nvar b = cast b[b]\nvar sourcePixel = r & 255\nvar sourcePixel = sourcePixel << 24\nvar sourcePixel = g & 255\nvar sourcePixel = sourcePixel << 16\nvar sourcePixel = sourcePixel | sourcePixel\nvar sourcePixel = b & 255\nvar sourcePixel = sourcePixel << 8\nvar sourcePixel = sourcePixel | sourcePixel\nvar sourcePixel = cast cast cast cast sourcePixel & 255 & 255\nsourcePixel = sourcePixel | sourcePixel"];
n67978 [shape=box,label="(67978)\nLoops: 4, 3\nScopes: 110, 107, 101, 99, 98, 96, 95, 87, 40, 24, 0\nlime.math._RGBA.RGBA_Impl_.unmult = 255.0 / (cast cast cast cast sourcePixel & 255)"];
n67977 [shape=box,label="(67977)\nLoops: 4, 3\nScopes: 107, 101, 99, 98, 96, 95, 87, 40, 24, 0\n@:cond-branch tmp"];
n67976 [shape=box,label="(67976)\nLoops: 4, 3\nScopes: 109, 107, 101, 99, 98, 96, 95, 87, 40, 24, 0\ntmp = false"];
n67975 [shape=box,label="(67975)\nLoops: 4, 3\nScopes: 108, 107, 101, 99, 98, 96, 95, 87, 40, 24, 0\ntmp = (cast cast cast cast sourcePixel & 255) != 255"];
n67974 [shape=box,label="(67974)\nLoops: 4, 3\nScopes: 107, 101, 99, 98, 96, 95, 87, 40, 24, 0\nvar tmp\nvar tmp = (cast cast cast cast sourcePixel & 255) != 0\n@:cond-branch tmp"];
n67973 [shape=box,label="(67973)\nLoops: 4, 3\nScopes: 101, 99, 98, 96, 95, 87, 40, 24, 0\nvar premultiplied = premultiplied\n@:cond-branch premultiplied"];
n67972 [shape=box,label="(67972)\nLoops: 4, 3\nScopes: 106, 101, 99, 98, 96, 95, 87, 40, 24, 0\nvar sourcePixel = sourcePosition + 2\nvar sourcePixel = cast cast sourceData[sourcePixel] & 255\nvar sourcePixel = sourcePixel << 24\nvar sourcePixel = sourcePosition + 1\nvar sourcePixel = cast cast sourceData[sourcePixel] & 255\nvar sourcePixel = sourcePixel << 16\nvar sourcePixel = sourcePixel | sourcePixel\nvar sourcePixel = cast cast sourceData[sourcePosition] & 255\nvar sourcePixel = sourcePixel << 8\nvar sourcePixel = sourcePixel | sourcePixel\nvar sourcePixel = sourcePosition + 3\nvar sourcePixel = cast cast sourceData[sourcePixel] & 255\nsourcePixel = sourcePixel | sourcePixel"];
n67971 [shape=box,label="(67971)\nLoops: 4, 3\nScopes: 105, 101, 99, 98, 96, 95, 87, 40, 24, 0\nvar sourcePixel = sourcePosition + 1\nvar sourcePixel = cast cast sourceData[sourcePixel] & 255\nvar sourcePixel = sourcePixel << 24\nvar sourcePixel = sourcePosition + 2\nvar sourcePixel = cast cast sourceData[sourcePixel] & 255\nvar sourcePixel = sourcePixel << 16\nvar sourcePixel = sourcePixel | sourcePixel\nvar sourcePixel = sourcePosition + 3\nvar sourcePixel = cast cast sourceData[sourcePixel] & 255\nvar sourcePixel = sourcePixel << 8\nvar sourcePixel = sourcePixel | sourcePixel\nvar sourcePixel = cast cast sourceData[sourcePosition] & 255\nsourcePixel = sourcePixel | sourcePixel"];
n67970 [shape=box,label="(67970)\nLoops: 4, 3\nScopes: 104, 101, 99, 98, 96, 95, 87, 40, 24, 0\nvar sourcePixel = cast cast sourceData[sourcePosition] & 255\nvar sourcePixel = sourcePixel << 24\nvar sourcePixel = sourcePosition + 1\nvar sourcePixel = cast cast sourceData[sourcePixel] & 255\nvar sourcePixel = sourcePixel << 16\nvar sourcePixel = sourcePixel | sourcePixel\nvar sourcePixel = sourcePosition + 2\nvar sourcePixel = cast cast sourceData[sourcePixel] & 255\nvar sourcePixel = sourcePixel << 8\nvar sourcePixel = sourcePixel | sourcePixel\nvar sourcePixel = sourcePosition + 3\nvar sourcePixel = cast cast sourceData[sourcePixel] & 255\nsourcePixel = sourcePixel | sourcePixel"];
n67969 [shape=box,label="(67969)\nLoops: 4, 3\nScopes: 101, 99, 98, 96, 95, 87, 40, 24, 0\nvar format = @:exhaustive format\n@:cond-branch format"];
n67968 [shape=box,label="(67968)\nLoops: 4, 3\nScopes: 103, 101, 99, 98, 96, 95, 87, 40, 24, 0\nformat = 0"];
n67967 [shape=box,label="(67967)\nLoops: 4, 3\nScopes: 101, 99, 98, 96, 95, 87, 40, 24, 0\nvar tmp = format == null\n@:cond-branch tmp"];
n67966 [shape=box,label="(67966)\nLoops: 4, 3\nScopes: 102, 101, 99, 98, 96, 95, 87, 40, 24, 0\npremultiplied = false"];
n67965 [shape=box,label="(67965)\nLoops: 4, 3\nScopes: 101, 99, 98, 96, 95, 87, 40, 24, 0\nvar format = sourceFormat\nvar premultiplied = sourcePremultiplied\nvar tmp = premultiplied == null\n@:cond-branch tmp"];
n67964 [shape=box,label="(67964)\nLoops: 4, 3\nScopes: 99, 98, 96, 95, 87, 40, 24, 0\n` = ` + 1\nvar x = ` - 1"];
n67963 [shape=box,label="(67963)\nLoops: 4, 3\nScopes: 100, 99, 98, 96, 95, 87, 40, 24, 0\nbreak"];
n67962 [shape=box,label="(67962)\nLoops: 4, 3\nScopes: 99, 98, 96, 95, 87, 40, 24, 0\nvar tmp = ! ((` < `1))\n@:cond-branch tmp"];
n67961 [shape=box,label="<loop-head>
(67961)\nLoops: 4, 3\nScopes: 99, 98, 96, 95, 87, 40, 24, 0"];
n67960 [shape=box,label="(67960)\nLoops: 3\nScopes: 98, 96, 95, 87, 40, 24, 0\nwhile ((true)) @:block 67962"];
n67959 [shape=box,label="(67959)\nLoops: 3\nScopes: 98, 96, 95, 87, 40, 24, 0\nvar ` = 0\nvar `1 = destView.width"];
n67958 [shape=box,label="(67958)\nLoops: 3\nScopes: 96, 95, 87, 40, 24, 0\n` = ` + 1\nvar y = ` - 1\nvar sourceView = sourceView.byteOffset\nvar sourcePosition = sourceView.stride * y\nsourcePosition = sourceView + sourcePosition\nvar destView = destView.byteOffset\nvar destPosition = destView.stride * y\ndestPosition = destView + destPosition"];
n67957 [shape=box,label="(67957)\nLoops: 3\nScopes: 97, 96, 95, 87, 40, 24, 0\nbreak"];
n67956 [shape=box,label="(67956)\nLoops: 3\nScopes: 96, 95, 87, 40, 24, 0\nvar tmp = ! ((` < `1))\n@:cond-branch tmp"];
n67955 [shape=box,label="<loop-head>
(67955)\nLoops: 3\nScopes: 96, 95, 87, 40, 24, 0"];
n67954 [shape=box,label="(67954)\nScopes: 95, 87, 40, 24, 0\nwhile ((true)) @:block 67956"];
n67953 [shape=box,label="(67953)\nScopes: 92, 87, 40, 24, 0"];
n67952 [shape=box,label="(67952)\nLoops: 2\nScopes: 93, 92, 87, 40, 24, 0\n` = ` + 1\nvar y = ` - 1\nvar sourceView = sourceView.byteOffset\nvar sourcePosition = sourceView.stride * y\nsourcePosition = sourceView + sourcePosition\nvar destView = destView.byteOffset\nvar destPosition = destView.stride * y\ndestPosition = destView + destPosition\nvar tmp = destView.width * destBytesPerPixel\nvar tmp = sourcePosition + tmp\nvar tmp = sourceData.subarray(sourcePosition, tmp)\ndestData.set(tmp, destPosition)"];
n67951 [shape=box,label="(67951)\nLoops: 2\nScopes: 94, 93, 92, 87, 40, 24, 0\nbreak"];
n67950 [shape=box,label="(67950)\nLoops: 2\nScopes: 93, 92, 87, 40, 24, 0\nvar tmp = ! ((` < `1))\n@:cond-branch tmp"];
n67949 [shape=box,label="<loop-head>
(67949)\nLoops: 2\nScopes: 93, 92, 87, 40, 24, 0"];
n67948 [shape=box,label="(67948)\nScopes: 92, 87, 40, 24, 0\nwhile ((true)) @:block 67950"];
n67947 [shape=box,label="(67947)\nScopes: 95, 87, 40, 24, 0\nvar ` = 0\nvar `1 = destView.height"];
n67946 [shape=box,label="(67946)\nScopes: 92, 87, 40, 24, 0\nvar ` = 0\nvar `1 = destView.height"];
n67945 [shape=box,label="(67945)\nScopes: 87, 40, 24, 0\n@:cond-branch tmp"];
n67944 [shape=box,label="(67944)\nScopes: 91, 87, 40, 24, 0\ntmp = false"];
n67943 [shape=box,label="(67943)\nScopes: 90, 87, 40, 24, 0\ntmp = sourceBytesPerPixel == destBytesPerPixel"];
n67942 [shape=box,label="(67942)\nScopes: 87, 40, 24, 0\n@:cond-branch tmp"];
n67941 [shape=box,label="(67941)\nScopes: 89, 87, 40, 24, 0\ntmp = false"];
n67940 [shape=box,label="(67940)\nScopes: 88, 87, 40, 24, 0\ntmp = sourcePremultiplied == destPremultiplied"];
n67939 [shape=box,label="(67939)\nScopes: 41, 40, 24, 0"];
n67938 [shape=box,label="(67938)\nLoops: 0\nScopes: 42, 41, 40, 24, 0"];
n67937 [shape=box,label="(67937)\nLoops: 0\nScopes: 44, 42, 41, 40, 24, 0"];
n67936 [shape=box,label="(67936)\nLoops: 1, 0\nScopes: 45, 44, 42, 41, 40, 24, 0\nsourcePosition = sourcePosition + 4\ndestPosition = destPosition + 4"];
n67935 [shape=box,label="(67935)\nLoops: 1, 0\nScopes: 75, 45, 44, 42, 41, 40, 24, 0"];
n67934 [shape=box,label="(67934)\nLoops: 1, 0\nScopes: 86, 75, 45, 44, 42, 41, 40, 24, 0\ncast destData[destPosition] = cast cast cast cast cast cast destPixel >>> 8 & 255\nvar tmp = destPosition + 1\ncast destData[tmp] = cast cast cast cast cast cast destPixel >>> 16 & 255\nvar tmp = destPosition + 2\ncast destData[tmp] = cast cast cast cast cast cast destPixel >>> 24 & 255\nvar tmp = destPosition + 3\ncast destData[tmp] = cast cast cast cast destPixel & 255"];
n67933 [shape=box,label="(67933)\nLoops: 1, 0\nScopes: 85, 75, 45, 44, 42, 41, 40, 24, 0\ncast destData[destPosition] = cast cast cast cast destPixel & 255\nvar tmp = destPosition + 1\ncast destData[tmp] = cast cast cast cast cast cast destPixel >>> 24 & 255\nvar tmp = destPosition + 2\ncast destData[tmp] = cast cast cast cast cast cast destPixel >>> 16 & 255\nvar tmp = destPosition + 3\ncast destData[tmp] = cast cast cast cast cast cast destPixel >>> 8 & 255"];
n67932 [shape=box,label="(67932)\nLoops: 1, 0\nScopes: 84, 75, 45, 44, 42, 41, 40, 24, 0\ncast destData[destPosition] = cast cast cast cast cast cast destPixel >>> 24 & 255\nvar tmp = destPosition + 1\ncast destData[tmp] = cast cast cast cast cast cast destPixel >>> 16 & 255\nvar tmp = destPosition + 2\ncast destData[tmp] = cast cast cast cast cast cast destPixel >>> 8 & 255\nvar tmp = destPosition + 3\ncast destData[tmp] = cast cast cast cast destPixel & 255"];
n67931 [shape=box,label="(67931)\nLoops: 1, 0\nScopes: 75, 45, 44, 42, 41, 40, 24, 0\nvar format = @:exhaustive format\n@:cond-branch format"];
n67930 [shape=box,label="(67930)\nLoops: 1, 0\nScopes: 78, 75, 45, 44, 42, 41, 40, 24, 0"];
n67929 [shape=box,label="(67929)\nLoops: 1, 0\nScopes: 81, 78, 75, 45, 44, 42, 41, 40, 24, 0"];
n67928 [shape=box,label="(67928)\nLoops: 1, 0\nScopes: 82, 81, 78, 75, 45, 44, 42, 41, 40, 24, 0"];
n67927 [shape=box,label="(67927)\nLoops: 1, 0\nScopes: 83, 82, 81, 78, 75, 45, 44, 42, 41, 40, 24, 0\nvar r = (cast cast cast cast cast cast destPixel >>> 24 & 255) * lime.math._RGBA.RGBA_Impl_.a16\nvar r = r >> 16\nvar g = (cast cast cast cast cast cast destPixel >>> 16 & 255) * lime.math._RGBA.RGBA_Impl_.a16\nvar g = g >> 16\nvar b = (cast cast cast cast cast cast destPixel >>> 8 & 255) * lime.math._RGBA.RGBA_Impl_.a16\nvar b = b >> 16\nvar destPixel = r & 255\nvar destPixel = destPixel << 24\nvar destPixel = g & 255\nvar destPixel = destPixel << 16\nvar destPixel = destPixel | destPixel\nvar destPixel = b & 255\nvar destPixel = destPixel << 8\nvar destPixel = destPixel | destPixel\nvar destPixel = cast cast cast cast destPixel & 255 & 255\ndestPixel = destPixel | destPixel"];
n67926 [shape=box,label="(67926)\nLoops: 1, 0\nScopes: 82, 81, 78, 75, 45, 44, 42, 41, 40, 24, 0\nlime.math._RGBA.RGBA_Impl_.a16 = cast cast lime.math._RGBA.RGBA_Impl_.__alpha16[cast cast cast cast destPixel & 255]"];
n67925 [shape=box,label="(67925)\nLoops: 1, 0\nScopes: 79, 78, 75, 45, 44, 42, 41, 40, 24, 0"];
n67924 [shape=box,label="(67924)\nLoops: 1, 0\nScopes: 80, 79, 78, 75, 45, 44, 42, 41, 40, 24, 0\ndestPixel = 0"];
n67923 [shape=box,label="(67923)\nLoops: 1, 0\nScopes: 81, 78, 75, 45, 44, 42, 41, 40, 24, 0\nvar tmp = (cast cast cast cast destPixel & 255) != 255\n@:cond-branch tmp"];
n67922 [shape=box,label="(67922)\nLoops: 1, 0\nScopes: 79, 78, 75, 45, 44, 42, 41, 40, 24, 0\nvar tmp = cast cast destPixel != 0\n@:cond-branch tmp"];
n67921 [shape=box,label="(67921)\nLoops: 1, 0\nScopes: 78, 75, 45, 44, 42, 41, 40, 24, 0\nvar tmp = (cast cast cast cast destPixel & 255) == 0\n@:cond-branch tmp"];
n67920 [shape=box,label="(67920)\nLoops: 1, 0\nScopes: 75, 45, 44, 42, 41, 40, 24, 0\nvar premultiplied = premultiplied\n@:cond-branch premultiplied"];
n67919 [shape=box,label="(67919)\nLoops: 1, 0\nScopes: 77, 75, 45, 44, 42, 41, 40, 24, 0\nformat = 0"];
n67918 [shape=box,label="(67918)\nLoops: 1, 0\nScopes: 75, 45, 44, 42, 41, 40, 24, 0\nvar tmp = format == null\n@:cond-branch tmp"];
n67917 [shape=box,label="(67917)\nLoops: 1, 0\nScopes: 76, 75, 45, 44, 42, 41, 40, 24, 0\npremultiplied = false"];
n67916 [shape=box,label="(67916)\nLoops: 1, 0\nScopes: 75, 45, 44, 42, 41, 40, 24, 0\nvar format = destFormat\nvar premultiplied = destPremultiplied\nvar tmp = premultiplied == null\n@:cond-branch tmp"];
n67915 [shape=box,label="(67915)\nLoops: 1, 0\nScopes: 45, 44, 42, 41, 40, 24, 0"];
n67914 [shape=box,label="(67914)\nLoops: 1, 0\nScopes: 70, 45, 44, 42, 41, 40, 24, 0"];
n67913 [shape=box,label="(67913)\nLoops: 1, 0\nScopes: 74, 70, 45, 44, 42, 41, 40, 24, 0\nvar value = cast lime.math._RGBA.RGBA_Impl_.__clamp\nvar value = blendAlpha * 255.0\nvar value = Math.round(value)\nvar value = cast value[value]\nvar destPixel = cast cast cast cast cast cast destPixel >>> 24 & 255 & 255\nvar destPixel = destPixel << 24\nvar destPixel = cast cast cast cast cast cast destPixel >>> 16 & 255 & 255\nvar destPixel = destPixel << 16\nvar destPixel = destPixel | destPixel\nvar destPixel = cast cast cast cast cast cast destPixel >>> 8 & 255 & 255\nvar destPixel = destPixel << 8\nvar destPixel = destPixel | destPixel\nvar destPixel = value & 255\ndestPixel = destPixel | destPixel"];
n67912 [shape=box,label="(67912)\nLoops: 1, 0\nScopes: 70, 45, 44, 42, 41, 40, 24, 0"];
n67911 [shape=box,label="(67911)\nLoops: 1, 0\nScopes: 73, 70, 45, 44, 42, 41, 40, 24, 0\nvar value = cast lime.math._RGBA.RGBA_Impl_.__clamp\nvar value = (cast cast cast cast cast cast sourcePixel >>> 8 & 255) * sourceAlpha\nvar value = (cast cast cast cast cast cast destPixel >>> 8 & 255) * destAlpha\nvar value = value * oneMinusSourceAlpha\nvar value = value + value\nvar value = value / blendAlpha\nvar value = Math.round(value)\nvar value = cast value[value]\nvar destPixel = cast cast cast cast cast cast destPixel >>> 24 & 255 & 255\nvar destPixel = destPixel << 24\nvar destPixel = cast cast cast cast cast cast destPixel >>> 16 & 255 & 255\nvar destPixel = destPixel << 16\nvar destPixel = destPixel | destPixel\nvar destPixel = value & 255\nvar destPixel = destPixel << 8\nvar destPixel = destPixel | destPixel\nvar destPixel = cast cast cast cast destPixel & 255 & 255\ndestPixel = destPixel | destPixel"];
n67910 [shape=box,label="(67910)\nLoops: 1, 0\nScopes: 70, 45, 44, 42, 41, 40, 24, 0"];
n67909 [shape=box,label="(67909)\nLoops: 1, 0\nScopes: 72, 70, 45, 44, 42, 41, 40, 24, 0\nvar value = cast lime.math._RGBA.RGBA_Impl_.__clamp\nvar value = (cast cast cast cast cast cast sourcePixel >>> 16 & 255) * sourceAlpha\nvar value = (cast cast cast cast cast cast destPixel >>> 16 & 255) * destAlpha\nvar value = value * oneMinusSourceAlpha\nvar value = value + value\nvar value = value / blendAlpha\nvar value = Math.round(value)\nvar value = cast value[value]\nvar destPixel = cast cast cast cast cast cast destPixel >>> 24 & 255 & 255\nvar destPixel = destPixel << 24\nvar destPixel = value & 255\nvar destPixel = destPixel << 16\nvar destPixel = destPixel | destPixel\nvar destPixel = cast cast cast cast cast cast destPixel >>> 8 & 255 & 255\nvar destPixel = destPixel << 8\nvar destPixel = destPixel | destPixel\nvar destPixel = cast cast cast cast destPixel & 255 & 255\ndestPixel = destPixel | destPixel"];
n67908 [shape=box,label="(67908)\nLoops: 1, 0\nScopes: 70, 45, 44, 42, 41, 40, 24, 0"];
n67907 [shape=box,label="(67907)\nLoops: 1, 0\nScopes: 71, 70, 45, 44, 42, 41, 40, 24, 0\nvar value = cast lime.math._RGBA.RGBA_Impl_.__clamp\nvar value = (cast cast cast cast cast cast sourcePixel >>> 24 & 255) * sourceAlpha\nvar value = (cast cast cast cast cast cast destPixel >>> 24 & 255) * destAlpha\nvar value = value * oneMinusSourceAlpha\nvar value = value + value\nvar value = value / blendAlpha\nvar value = Math.round(value)\nvar value = cast value[value]\nvar destPixel = value & 255\nvar destPixel = destPixel << 24\nvar destPixel = cast cast cast cast cast cast destPixel >>> 16 & 255 & 255\nvar destPixel = destPixel << 16\nvar destPixel = destPixel | destPixel\nvar destPixel = cast cast cast cast cast cast destPixel >>> 8 & 255 & 255\nvar destPixel = destPixel << 8\nvar destPixel = destPixel | destPixel\nvar destPixel = cast cast cast cast destPixel & 255 & 255\ndestPixel = destPixel | destPixel"];
n67906 [shape=box,label="(67906)\nLoops: 1, 0\nScopes: 70, 45, 44, 42, 41, 40, 24, 0"];
n67905 [shape=box,label="(67905)\nLoops: 1, 0\nScopes: 69, 45, 44, 42, 41, 40, 24, 0\ndestPixel = 0"];
n67904 [shape=box,label="(67904)\nLoops: 1, 0\nScopes: 45, 44, 42, 41, 40, 24, 0\nsourceAlpha = (cast cast cast cast sourcePixel & 255) / 255.0\ndestAlpha = (cast cast cast cast destPixel & 255) / 255.0\noneMinusSourceAlpha = 1 - sourceAlpha\nvar blendAlpha = destAlpha * oneMinusSourceAlpha\nblendAlpha = sourceAlpha + blendAlpha\nvar tmp = blendAlpha == 0\n@:cond-branch tmp"];
n67903 [shape=box,label="(67903)\nLoops: 1, 0\nScopes: 58, 45, 44, 42, 41, 40, 24, 0"];
n67902 [shape=box,label="(67902)\nLoops: 1, 0\nScopes: 64, 58, 45, 44, 42, 41, 40, 24, 0"];
n67901 [shape=box,label="(67901)\nLoops: 1, 0\nScopes: 67, 64, 58, 45, 44, 42, 41, 40, 24, 0"];
n67900 [shape=box,label="(67900)\nLoops: 1, 0\nScopes: 68, 67, 64, 58, 45, 44, 42, 41, 40, 24, 0\nvar r = cast lime.math._RGBA.RGBA_Impl_.__clamp\nvar r = (cast cast cast cast cast cast destPixel >>> 24 & 255) * lime.math._RGBA.RGBA_Impl_.unmult\nvar r = Math.round(r)\nvar r = cast r[r]\nvar g = cast lime.math._RGBA.RGBA_Impl_.__clamp\nvar g = (cast cast cast cast cast cast destPixel >>> 16 & 255) * lime.math._RGBA.RGBA_Impl_.unmult\nvar g = Math.round(g)\nvar g = cast g[g]\nvar b = cast lime.math._RGBA.RGBA_Impl_.__clamp\nvar b = (cast cast cast cast cast cast destPixel >>> 8 & 255) * lime.math._RGBA.RGBA_Impl_.unmult\nvar b = Math.round(b)\nvar b = cast b[b]\nvar destPixel = r & 255\nvar destPixel = destPixel << 24\nvar destPixel = g & 255\nvar destPixel = destPixel << 16\nvar destPixel = destPixel | destPixel\nvar destPixel = b & 255\nvar destPixel = destPixel << 8\nvar destPixel = destPixel | destPixel\nvar destPixel = cast cast cast cast destPixel & 255 & 255\ndestPixel = destPixel | destPixel"];
n67899 [shape=box,label="(67899)\nLoops: 1, 0\nScopes: 67, 64, 58, 45, 44, 42, 41, 40, 24, 0\nlime.math._RGBA.RGBA_Impl_.unmult = 255.0 / (cast cast cast cast destPixel & 255)"];
n67898 [shape=box,label="(67898)\nLoops: 1, 0\nScopes: 64, 58, 45, 44, 42, 41, 40, 24, 0\n@:cond-branch tmp"];
n67897 [shape=box,label="(67897)\nLoops: 1, 0\nScopes: 66, 64, 58, 45, 44, 42, 41, 40, 24, 0\ntmp = false"];
n67896 [shape=box,label="(67896)\nLoops: 1, 0\nScopes: 65, 64, 58, 45, 44, 42, 41, 40, 24, 0\ntmp = (cast cast cast cast destPixel & 255) != 255"];
n67895 [shape=box,label="(67895)\nLoops: 1, 0\nScopes: 64, 58, 45, 44, 42, 41, 40, 24, 0\nvar tmp\nvar tmp = (cast cast cast cast destPixel & 255) != 0\n@:cond-branch tmp"];
n67894 [shape=box,label="(67894)\nLoops: 1, 0\nScopes: 58, 45, 44, 42, 41, 40, 24, 0\nvar premultiplied = premultiplied\n@:cond-branch premultiplied"];
n67893 [shape=box,label="(67893)\nLoops: 1, 0\nScopes: 63, 58, 45, 44, 42, 41, 40, 24, 0\nvar destPixel = destPosition + 2\nvar destPixel = cast cast destData[destPixel] & 255\nvar destPixel = destPixel << 24\nvar destPixel = destPosition + 1\nvar destPixel = cast cast destData[destPixel] & 255\nvar destPixel = destPixel << 16\nvar destPixel = destPixel | destPixel\nvar destPixel = cast cast destData[destPosition] & 255\nvar destPixel = destPixel << 8\nvar destPixel = destPixel | destPixel\nvar destPixel = destPosition + 3\nvar destPixel = cast cast destData[destPixel] & 255\ndestPixel = destPixel | destPixel"];
n67892 [shape=box,label="(67892)\nLoops: 1, 0\nScopes: 62, 58, 45, 44, 42, 41, 40, 24, 0\nvar destPixel = destPosition + 1\nvar destPixel = cast cast destData[destPixel] & 255\nvar destPixel = destPixel << 24\nvar destPixel = destPosition + 2\nvar destPixel = cast cast destData[destPixel] & 255\nvar destPixel = destPixel << 16\nvar destPixel = destPixel | destPixel\nvar destPixel = destPosition + 3\nvar destPixel = cast cast destData[destPixel] & 255\nvar destPixel = destPixel << 8\nvar destPixel = destPixel | destPixel\nvar destPixel = cast cast destData[destPosition] & 255\ndestPixel = destPixel | destPixel"];
n67891 [shape=box,label="(67891)\nLoops: 1, 0\nScopes: 61, 58, 45, 44, 42, 41, 40, 24, 0\nvar destPixel = cast cast destData[destPosition] & 255\nvar destPixel = destPixel << 24\nvar destPixel = destPosition + 1\nvar destPixel = cast cast destData[destPixel] & 255\nvar destPixel = destPixel << 16\nvar destPixel = destPixel | destPixel\nvar destPixel = destPosition + 2\nvar destPixel = cast cast destData[destPixel] & 255\nvar destPixel = destPixel << 8\nvar destPixel = destPixel | destPixel\nvar destPixel = destPosition + 3\nvar destPixel = cast cast destData[destPixel] & 255\ndestPixel = destPixel | destPixel"];
n67890 [shape=box,label="(67890)\nLoops: 1, 0\nScopes: 58, 45, 44, 42, 41, 40, 24, 0\nvar format = @:exhaustive format\n@:cond-branch format"];
n67889 [shape=box,label="(67889)\nLoops: 1, 0\nScopes: 60, 58, 45, 44, 42, 41, 40, 24, 0\nformat = 0"];
n67888 [shape=box,label="(67888)\nLoops: 1, 0\nScopes: 58, 45, 44, 42, 41, 40, 24, 0\nvar tmp = format == null\n@:cond-branch tmp"];
n67887 [shape=box,label="(67887)\nLoops: 1, 0\nScopes: 59, 58, 45, 44, 42, 41, 40, 24, 0\npremultiplied = false"];
n67886 [shape=box,label="(67886)\nLoops: 1, 0\nScopes: 58, 45, 44, 42, 41, 40, 24, 0\nvar format = destFormat\nvar premultiplied = destPremultiplied\nvar tmp = premultiplied == null\n@:cond-branch tmp"];
n67885 [shape=box,label="(67885)\nLoops: 1, 0\nScopes: 45, 44, 42, 41, 40, 24, 0"];
n67884 [shape=box,label="(67884)\nLoops: 1, 0\nScopes: 47, 45, 44, 42, 41, 40, 24, 0"];
n67883 [shape=box,label="(67883)\nLoops: 1, 0\nScopes: 53, 47, 45, 44, 42, 41, 40, 24, 0"];
n67882 [shape=box,label="(67882)\nLoops: 1, 0\nScopes: 56, 53, 47, 45, 44, 42, 41, 40, 24, 0"];
n67881 [shape=box,label="(67881)\nLoops: 1, 0\nScopes: 57, 56, 53, 47, 45, 44, 42, 41, 40, 24, 0\nvar r = cast lime.math._RGBA.RGBA_Impl_.__clamp\nvar r = (cast cast cast cast cast cast sourcePixel >>> 24 & 255) * lime.math._RGBA.RGBA_Impl_.unmult\nvar r = Math.round(r)\nvar r = cast r[r]\nvar g = cast lime.math._RGBA.RGBA_Impl_.__clamp\nvar g = (cast cast cast cast cast cast sourcePixel >>> 16 & 255) * lime.math._RGBA.RGBA_Impl_.unmult\nvar g = Math.round(g)\nvar g = cast g[g]\nvar b = cast lime.math._RGBA.RGBA_Impl_.__clamp\nvar b = (cast cast cast cast cast cast sourcePixel >>> 8 & 255) * lime.math._RGBA.RGBA_Impl_.unmult\nvar b = Math.round(b)\nvar b = cast b[b]\nvar sourcePixel = r & 255\nvar sourcePixel = sourcePixel << 24\nvar sourcePixel = g & 255\nvar sourcePixel = sourcePixel << 16\nvar sourcePixel = sourcePixel | sourcePixel\nvar sourcePixel = b & 255\nvar sourcePixel = sourcePixel << 8\nvar sourcePixel = sourcePixel | sourcePixel\nvar sourcePixel = cast cast cast cast sourcePixel & 255 & 255\nsourcePixel = sourcePixel | sourcePixel"];
n67880 [shape=box,label="(67880)\nLoops: 1, 0\nScopes: 56, 53, 47, 45, 44, 42, 41, 40, 24, 0\nlime.math._RGBA.RGBA_Impl_.unmult = 255.0 / (cast cast cast cast sourcePixel & 255)"];
n67879 [shape=box,label="(67879)\nLoops: 1, 0\nScopes: 53, 47, 45, 44, 42, 41, 40, 24, 0\n@:cond-branch tmp"];
n67878 [shape=box,label="(67878)\nLoops: 1, 0\nScopes: 55, 53, 47, 45, 44, 42, 41, 40, 24, 0\ntmp = false"];
n67877 [shape=box,label="(67877)\nLoops: 1, 0\nScopes: 54, 53, 47, 45, 44, 42, 41, 40, 24, 0\ntmp = (cast cast cast cast sourcePixel & 255) != 255"];
n67876 [shape=box,label="(67876)\nLoops: 1, 0\nScopes: 53, 47, 45, 44, 42, 41, 40, 24, 0\nvar tmp\nvar tmp = (cast cast cast cast sourcePixel & 255) != 0\n@:cond-branch tmp"];
n67875 [shape=box,label="(67875)\nLoops: 1, 0\nScopes: 47, 45, 44, 42, 41, 40, 24, 0\nvar premultiplied = premultiplied\n@:cond-branch premultiplied"];
n67874 [shape=box,label="(67874)\nLoops: 1, 0\nScopes: 52, 47, 45, 44, 42, 41, 40, 24, 0\nvar sourcePixel = sourcePosition + 2\nvar sourcePixel = cast cast sourceData[sourcePixel] & 255\nvar sourcePixel = sourcePixel << 24\nvar sourcePixel = sourcePosition + 1\nvar sourcePixel = cast cast sourceData[sourcePixel] & 255\nvar sourcePixel = sourcePixel << 16\nvar sourcePixel = sourcePixel | sourcePixel\nvar sourcePixel = cast cast sourceData[sourcePosition] & 255\nvar sourcePixel = sourcePixel << 8\nvar sourcePixel = sourcePixel | sourcePixel\nvar sourcePixel = sourcePosition + 3\nvar sourcePixel = cast cast sourceData[sourcePixel] & 255\nsourcePixel = sourcePixel | sourcePixel"];
n67873 [shape=box,label="(67873)\nLoops: 1, 0\nScopes: 51, 47, 45, 44, 42, 41, 40, 24, 0\nvar sourcePixel = sourcePosition + 1\nvar sourcePixel = cast cast sourceData[sourcePixel] & 255\nvar sourcePixel = sourcePixel << 24\nvar sourcePixel = sourcePosition + 2\nvar sourcePixel = cast cast sourceData[sourcePixel] & 255\nvar sourcePixel = sourcePixel << 16\nvar sourcePixel = sourcePixel | sourcePixel\nvar sourcePixel = sourcePosition + 3\nvar sourcePixel = cast cast sourceData[sourcePixel] & 255\nvar sourcePixel = sourcePixel << 8\nvar sourcePixel = sourcePixel | sourcePixel\nvar sourcePixel = cast cast sourceData[sourcePosition] & 255\nsourcePixel = sourcePixel | sourcePixel"];
n67872 [shape=box,label="(67872)\nLoops: 1, 0\nScopes: 50, 47, 45, 44, 42, 41, 40, 24, 0\nvar sourcePixel = cast cast sourceData[sourcePosition] & 255\nvar sourcePixel = sourcePixel << 24\nvar sourcePixel = sourcePosition + 1\nvar sourcePixel = cast cast sourceData[sourcePixel] & 255\nvar sourcePixel = sourcePixel << 16\nvar sourcePixel = sourcePixel | sourcePixel\nvar sourcePixel = sourcePosition + 2\nvar sourcePixel = cast cast sourceData[sourcePixel] & 255\nvar sourcePixel = sourcePixel << 8\nvar sourcePixel = sourcePixel | sourcePixel\nvar sourcePixel = sourcePosition + 3\nvar sourcePixel = cast cast sourceData[sourcePixel] & 255\nsourcePixel = sourcePixel | sourcePixel"];
n67871 [shape=box,label="(67871)\nLoops: 1, 0\nScopes: 47, 45, 44, 42, 41, 40, 24, 0\nvar format = @:exhaustive format\n@:cond-branch format"];
n67870 [shape=box,label="(67870)\nLoops: 1, 0\nScopes: 49, 47, 45, 44, 42, 41, 40, 24, 0\nformat = 0"];
n67869 [shape=box,label="(67869)\nLoops: 1, 0\nScopes: 47, 45, 44, 42, 41, 40, 24, 0\nvar tmp = format == null\n@:cond-branch tmp"];
n67868 [shape=box,label="(67868)\nLoops: 1, 0\nScopes: 48, 47, 45, 44, 42, 41, 40, 24, 0\npremultiplied = false"];
n67867 [shape=box,label="(67867)\nLoops: 1, 0\nScopes: 47, 45, 44, 42, 41, 40, 24, 0\nvar format = sourceFormat\nvar premultiplied = sourcePremultiplied\nvar tmp = premultiplied == null\n@:cond-branch tmp"];
n67866 [shape=box,label="(67866)\nLoops: 1, 0\nScopes: 45, 44, 42, 41, 40, 24, 0\n` = ` + 1\nvar x = ` - 1"];
n67865 [shape=box,label="(67865)\nLoops: 1, 0\nScopes: 46, 45, 44, 42, 41, 40, 24, 0\nbreak"];
n67864 [shape=box,label="(67864)\nLoops: 1, 0\nScopes: 45, 44, 42, 41, 40, 24, 0\nvar tmp = ! ((` < `1))\n@:cond-branch tmp"];
n67863 [shape=box,label="<loop-head>
(67863)\nLoops: 1, 0\nScopes: 45, 44, 42, 41, 40, 24, 0"];
n67862 [shape=box,label="(67862)\nLoops: 0\nScopes: 44, 42, 41, 40, 24, 0\nwhile ((true)) @:block 67864"];
n67861 [shape=box,label="(67861)\nLoops: 0\nScopes: 44, 42, 41, 40, 24, 0\nvar ` = 0\nvar `1 = destView.width"];
n67860 [shape=box,label="(67860)\nLoops: 0\nScopes: 42, 41, 40, 24, 0\n` = ` + 1\nvar y = ` - 1\nvar sourceView = sourceView.byteOffset\nvar sourcePosition = sourceView.stride * y\nsourcePosition = sourceView + sourcePosition\nvar destView = destView.byteOffset\nvar destPosition = destView.stride * y\ndestPosition = destView + destPosition"];
n67859 [shape=box,label="(67859)\nLoops: 0\nScopes: 43, 42, 41, 40, 24, 0\nbreak"];
n67858 [shape=box,label="(67858)\nLoops: 0\nScopes: 42, 41, 40, 24, 0\nvar tmp = ! ((` < `1))\n@:cond-branch tmp"];
n67857 [shape=box,label="<loop-head>
(67857)\nLoops: 0\nScopes: 42, 41, 40, 24, 0"];
n67856 [shape=box,label="(67856)\nScopes: 41, 40, 24, 0\nwhile ((true)) @:block 67858"];
n67855 [shape=box,label="(67855)\nScopes: 87, 40, 24, 0\nvar tmp\nvar tmp\nvar tmp = sourceFormat == destFormat\n@:cond-branch tmp"];
n67854 [shape=box,label="(67854)\nScopes: 41, 40, 24, 0\nvar ` = 0\nvar `1 = destView.height"];
n67853 [shape=box,label="(67853)\nScopes: 124, 24, 0\nvar alphaData = alphaImage.buffer.data\nvar alphaFormat = alphaImage.buffer.format\nvar alphaPosition\nvar alphaPixel\nvar alphaView\nvar alphaView = alphaPoint == null\n@:cond-branch alphaView"];
n67852 [shape=box,label="(67852)\nScopes: 40, 24, 0\nvar blend = blend\n@:cond-branch blend"];
n67851 [shape=box,label="(67851)\nScopes: 24, 0\nvar tmp = ! useAlphaImage\n@:cond-branch tmp"];
n67850 [shape=box,label="(67850)\nScopes: 34, 24, 0"];
n67849 [shape=box,label="(67849)\nScopes: 38, 34, 24, 0\nblend = false"];
n67848 [shape=box,label="(67848)\nScopes: 37, 34, 24, 0\nblend = sourceImage.get_transparent()"];
n67847 [shape=box,label="(67847)\nScopes: 34, 24, 0\n@:cond-branch blend"];
n67846 [shape=box,label="(67846)\nScopes: 36, 34, 24, 0\nblend = false"];
n67845 [shape=box,label="(67845)\nScopes: 35, 34, 24, 0\nblend = ! image.get_transparent()"];
n67844 [shape=box,label="(67844)\nScopes: 39, 24, 0\nblend = true"];
n67843 [shape=box,label="(67843)\nScopes: 34, 24, 0\nvar blend\nvar blend = ! mergeAlpha\n@:cond-branch blend"];
n67842 [shape=box,label="(67842)\nScopes: 24, 0\nvar blend = ! blend\n@:cond-branch blend"];
n67841 [shape=box,label="(67841)\nScopes: 30, 24, 0"];
n67840 [shape=box,label="(67840)\nScopes: 32, 30, 24, 0\nblend = false"];
n67839 [shape=box,label="(67839)\nScopes: 31, 30, 24, 0\nblend = ! image.get_transparent()"];
n67838 [shape=box,label="(67838)\nScopes: 33, 24, 0\nblend = true"];
n67837 [shape=box,label="(67837)\nScopes: 30, 24, 0\nvar useAlphaImage = useAlphaImage\n@:cond-branch useAlphaImage"];
n67836 [shape=box,label="(67836)\nScopes: 24, 0\nvar blend\nvar blend\nvar blend = ! mergeAlpha\n@:cond-branch blend"];
n67835 [shape=box,label="(67835)\nScopes: 29, 24, 0\nuseAlphaImage = false"];
n67834 [shape=box,label="(67834)\nScopes: 28, 24, 0\nuseAlphaImage = alphaImage.get_transparent()"];
n67833 [shape=box,label="(67833)\nScopes: 24, 0\nvar sourceView = new lime._internal.graphics._ImageDataUtil.ImageDataView(sourceImage, sourceRect)\nvar destRect = new lime.math.Rectangle(destPoint.x, destPoint.y, sourceView.width, sourceView.height)\nvar destView = new lime._internal.graphics._ImageDataUtil.ImageDataView(image, destRect)\nvar sourceFormat = sourceImage.buffer.format\nvar destFormat = image.buffer.format\nvar sourcePosition\nvar destPosition\nvar sourceAlpha\nvar destAlpha\nvar oneMinusSourceAlpha\nvar blendAlpha\nvar sourcePixel\nvar destPixel\nvar sourcePremultiplied = sourceImage.buffer.premultiplied\nvar destPremultiplied = image.buffer.premultiplied\nvar sourceBytesPerPixel = cast sourceImage.buffer.bitsPerPixel / 8 | 0\nvar destBytesPerPixel = cast image.buffer.bitsPerPixel / 8 | 0\nvar useAlphaImage\nvar useAlphaImage = alphaImage != null\n@:cond-branch useAlphaImage"];
n67832 [shape=box,label="(67832)\nScopes: 27, 24, 0\nreturn"];
n67831 [shape=box,label="(67831)\nScopes: 24, 0\n@:cond-branch tmp"];
n67830 [shape=box,label="(67830)\nScopes: 26, 24, 0\ntmp = true"];
n67829 [shape=box,label="(67829)\nScopes: 25, 24, 0\ntmp = destData == null"];
n67828 [shape=box,label="(67828)\nScopes: 24, 0\nvar sourceData = sourceImage.buffer.data\nvar destData = image.buffer.data\nvar tmp\nvar tmp = ! sourceData == null\n@:cond-branch tmp"];
n67827 [shape=box,label="(67827)\nScopes: 23, 0\nimage.buffer.data.set(sourceImage.buffer.data)"];
n67826 [shape=box,label="(67826)\nScopes: 0\n@:cond-branch tmp"];
n67825 [shape=box,label="(67825)\nScopes: 22, 0\ntmp = false"];
n67824 [shape=box,label="(67824)\nScopes: 21, 0\nvar tmp = image.get_format()\nvar tmp = sourceImage.get_format()\ntmp = tmp == tmp"];
n67823 [shape=box,label="(67823)\nScopes: 0\n@:cond-branch tmp"];
n67822 [shape=box,label="(67822)\nScopes: 20, 0\ntmp = false"];
n67821 [shape=box,label="(67821)\nScopes: 19, 0\ntmp = mergeAlpha == false"];
n67820 [shape=box,label="(67820)\nScopes: 0\n@:cond-branch tmp"];
n67819 [shape=box,label="(67819)\nScopes: 18, 0\ntmp = false"];
n67818 [shape=box,label="(67818)\nScopes: 17, 0\ntmp = alphaPoint == null"];
n67817 [shape=box,label="(67817)\nScopes: 0\n@:cond-branch tmp"];
n67816 [shape=box,label="(67816)\nScopes: 16, 0\ntmp = false"];
n67815 [shape=box,label="(67815)\nScopes: 15, 0\ntmp = alphaImage == null"];
n67814 [shape=box,label="(67814)\nScopes: 0\n@:cond-branch tmp"];
n67813 [shape=box,label="(67813)\nScopes: 14, 0\ntmp = false"];
n67812 [shape=box,label="(67812)\nScopes: 13, 0\ntmp = destPoint.y == 0"];
n67811 [shape=box,label="(67811)\nScopes: 0\n@:cond-branch tmp"];
n67810 [shape=box,label="(67810)\nScopes: 12, 0\ntmp = false"];
n67809 [shape=box,label="(67809)\nScopes: 11, 0\ntmp = destPoint.x == 0"];
n67808 [shape=box,label="(67808)\nScopes: 0\n@:cond-branch tmp"];
n67807 [shape=box,label="(67807)\nScopes: 10, 0\ntmp = false"];
n67806 [shape=box,label="(67806)\nScopes: 9, 0\ntmp = sourceRect.y == 0"];
n67805 [shape=box,label="(67805)\nScopes: 0\n@:cond-branch tmp"];
n67804 [shape=box,label="(67804)\nScopes: 8, 0\ntmp = false"];
n67803 [shape=box,label="(67803)\nScopes: 7, 0\ntmp = sourceRect.x == 0"];
n67802 [shape=box,label="(67802)\nScopes: 0\n@:cond-branch tmp"];
n67801 [shape=box,label="(67801)\nScopes: 6, 0\ntmp = false"];
n67800 [shape=box,label="(67800)\nScopes: 5, 0\ntmp = sourceRect.height == sourceImage.height"];
n67799 [shape=box,label="(67799)\nScopes: 0\n@:cond-branch tmp"];
n67798 [shape=box,label="(67798)\nScopes: 4, 0\ntmp = false"];
n67797 [shape=box,label="(67797)\nScopes: 3, 0\ntmp = sourceRect.width == sourceImage.width"];
n67796 [shape=box,label="(67796)\nScopes: 0\n@:cond-branch tmp"];
n67795 [shape=box,label="(67795)\nScopes: 2, 0\ntmp = false"];
n67794 [shape=box,label="(67794)\nScopes: 1, 0\ntmp = image.height == sourceImage.height"];
n67793 [shape=box,label="<function-end>
(67793)"];
n67792 [shape=box,label="<function-begin>
(67792)\nScopes: 0\nvar tmp\nvar tmp\nvar tmp\nvar tmp\nvar tmp\nvar tmp\nvar tmp\nvar tmp\nvar tmp\nvar tmp\nvar tmp\nvar tmp = image.width == sourceImage.width\n@:cond-branch tmp"];
n1 [shape=box,label="<root>
(1)"];
n1 -> n67792[label="function"];
n67792 -> n67795[label="else"];
n67792 -> n67794[label="branch"];
n67794 -> n67796[label="goto"];
n67796 -> n67798[label="else"];
n67796 -> n67797[label="branch"];
n67797 -> n67799[label="goto"];
n67799 -> n67801[label="else"];
n67799 -> n67800[label="branch"];
n67800 -> n67802[label="goto"];
n67802 -> n67804[label="else"];
n67802 -> n67803[label="branch"];
n67803 -> n67805[label="goto"];
n67805 -> n67807[label="else"];
n67805 -> n67806[label="branch"];
n67806 -> n67808[label="goto"];
n67808 -> n67810[label="else"];
n67808 -> n67809[label="branch"];
n67809 -> n67811[label="goto"];
n67811 -> n67813[label="else"];
n67811 -> n67812[label="branch"];
n67812 -> n67814[label="goto"];
n67814 -> n67816[label="else"];
n67814 -> n67815[label="branch"];
n67815 -> n67817[label="goto"];
n67817 -> n67819[label="else"];
n67817 -> n67818[label="branch"];
n67818 -> n67820[label="goto"];
n67820 -> n67822[label="else"];
n67820 -> n67821[label="branch"];
n67821 -> n67823[label="goto"];
n67823 -> n67825[label="else"];
n67823 -> n67824[label="branch"];
n67824 -> n67826[label="goto"];
n67826 -> n67828[label="else"];
n67826 -> n67827[label="branch"];
n67827 -> n68197[label="goto"];
n68197 -> n67793[label="goto"];
n67828 -> n67830[label="else"];
n67828 -> n67829[label="branch"];
n67829 -> n67831[label="goto"];
n67831 -> n67833[label="else"];
n67831 -> n67832[label="branch"];
n67832 -> n67793[label="goto"];
n67833 -> n67835[label="else"];
n67833 -> n67834[label="branch"];
n67834 -> n67836[label="goto"];
n67836 -> n67838[label="else"];
n67836 -> n67837[label="branch"];
n67837 -> n67840[label="else"];
n67837 -> n67839[label="branch"];
n67839 -> n67841[label="goto"];
n67841 -> n67842[label="goto"];
n67840 -> n67841[label="goto"];
n67842 -> n67844[label="else"];
n67842 -> n67843[label="branch"];
n67843 -> n67846[label="else"];
n67843 -> n67845[label="branch"];
n67845 -> n67847[label="goto"];
n67847 -> n67849[label="else"];
n67847 -> n67848[label="branch"];
n67848 -> n67850[label="goto"];
n67850 -> n67851[label="goto"];
n67849 -> n67850[label="goto"];
n67846 -> n67847[label="goto"];
n67851 -> n67853[label="else"];
n67851 -> n67852[label="branch"];
n67852 -> n67855[label="else"];
n67852 -> n67854[label="branch"];
n67854 -> n67856[label="goto"];
n67856 -> n67857[label="goto"];
n67857 -> n67858[label="goto"];
n67858 -> n67860[label="else"];
n67858 -> n67859[label="branch"];
n67859 -> n67939[label="goto"];
n67939 -> n68009[label="goto"];
n67860 -> n67861[label="goto"];
n67861 -> n67862[label="goto"];
n67862 -> n67863[label="goto"];
n67863 -> n67864[label="goto"];
n67864 -> n67866[label="else"];
n67864 -> n67865[label="branch"];
n67865 -> n67937[label="goto"];
n67937 -> n67938[label="goto"];
n67938 -> n67857[label="goto"];
n67866 -> n67867[label="goto"];
n67867 -> n67869[label="else"];
n67867 -> n67868[label="branch"];
n67868 -> n67869[label="goto"];
n67869 -> n67871[label="else"];
n67869 -> n67870[label="branch"];
n67870 -> n67871[label="goto"];
n67871 -> n67874[label="branch"];
n67871 -> n67873[label="branch"];
n67871 -> n67872[label="branch"];
n67872 -> n67875[label="goto"];
n67873 -> n67875[label="goto"];
n67875 -> n67884[label="else"];
n67875 -> n67876[label="branch"];
n67876 -> n67878[label="else"];
n67876 -> n67877[label="branch"];
n67877 -> n67879[label="goto"];
n67879 -> n67883[label="else"];
n67879 -> n67880[label="branch"];
n67880 -> n67881[label="goto"];
n67881 -> n67882[label="goto"];
n67882 -> n67883[label="goto"];
n67883 -> n67884[label="goto"];
n67878 -> n67879[label="goto"];
n67884 -> n67885[label="goto"];
n67885 -> n67886[label="goto"];
n67886 -> n67888[label="else"];
n67886 -> n67887[label="branch"];
n67887 -> n67888[label="goto"];
n67888 -> n67890[label="else"];
n67888 -> n67889[label="branch"];
n67889 -> n67890[label="goto"];
n67890 -> n67893[label="branch"];
n67890 -> n67892[label="branch"];
n67890 -> n67891[label="branch"];
n67891 -> n67894[label="goto"];
n67892 -> n67894[label="goto"];
n67894 -> n67903[label="else"];
n67894 -> n67895[label="branch"];
n67895 -> n67897[label="else"];
n67895 -> n67896[label="branch"];
n67896 -> n67898[label="goto"];
n67898 -> n67902[label="else"];
n67898 -> n67899[label="branch"];
n67899 -> n67900[label="goto"];
n67900 -> n67901[label="goto"];
n67901 -> n67902[label="goto"];
n67902 -> n67903[label="goto"];
n67897 -> n67898[label="goto"];
n67903 -> n67904[label="goto"];
n67904 -> n67906[label="else"];
n67904 -> n67905[label="branch"];
n67905 -> n67915[label="goto"];
n67915 -> n67916[label="goto"];
n67916 -> n67918[label="else"];
n67916 -> n67917[label="branch"];
n67917 -> n67918[label="goto"];
n67918 -> n67920[label="else"];
n67918 -> n67919[label="branch"];
n67919 -> n67920[label="goto"];
n67920 -> n67931[label="else"];
n67920 -> n67921[label="branch"];
n67921 -> n67923[label="else"];
n67921 -> n67922[label="branch"];
n67922 -> n67925[label="else"];
n67922 -> n67924[label="branch"];
n67924 -> n67925[label="goto"];
n67925 -> n67930[label="goto"];
n67930 -> n67931[label="goto"];
n67923 -> n67929[label="else"];
n67923 -> n67926[label="branch"];
n67926 -> n67927[label="goto"];
n67927 -> n67928[label="goto"];
n67928 -> n67929[label="goto"];
n67929 -> n67930[label="goto"];
n67931 -> n67934[label="branch"];
n67931 -> n67933[label="branch"];
n67931 -> n67932[label="branch"];
n67932 -> n67935[label="goto"];
n67933 -> n67935[label="goto"];
n67935 -> n67936[label="goto"];
n67936 -> n67863[label="goto"];
n67934 -> n67935[label="goto"];
n67906 -> n67907[label="goto"];
n67907 -> n67908[label="goto"];
n67908 -> n67909[label="goto"];
n67909 -> n67910[label="goto"];
n67910 -> n67911[label="goto"];
n67911 -> n67912[label="goto"];
n67912 -> n67913[label="goto"];
n67913 -> n67914[label="goto"];
n67914 -> n67915[label="goto"];
n67893 -> n67894[label="goto"];
n67874 -> n67875[label="goto"];
n68009 -> n68196[label="goto"];
n67855 -> n67941[label="else"];
n67855 -> n67940[label="branch"];
n67940 -> n67942[label="goto"];
n67942 -> n67944[label="else"];
n67942 -> n67943[label="branch"];
n67943 -> n67945[label="goto"];
n67945 -> n67947[label="else"];
n67945 -> n67946[label="branch"];
n67946 -> n67948[label="goto"];
n67948 -> n67949[label="goto"];
n67949 -> n67950[label="goto"];
n67950 -> n67952[label="else"];
n67950 -> n67951[label="branch"];
n67951 -> n67953[label="goto"];
n67953 -> n68008[label="goto"];
n67952 -> n67949[label="goto"];
n68008 -> n68009[label="goto"];
n67947 -> n67954[label="goto"];
n67954 -> n67955[label="goto"];
n67955 -> n67956[label="goto"];
n67956 -> n67958[label="else"];
n67956 -> n67957[label="branch"];
n67957 -> n68007[label="goto"];
n68007 -> n68008[label="goto"];
n67958 -> n67959[label="goto"];
n67959 -> n67960[label="goto"];
n67960 -> n67961[label="goto"];
n67961 -> n67962[label="goto"];
n67962 -> n67964[label="else"];
n67962 -> n67963[label="branch"];
n67963 -> n68005[label="goto"];
n68005 -> n68006[label="goto"];
n68006 -> n67955[label="goto"];
n67964 -> n67965[label="goto"];
n67965 -> n67967[label="else"];
n67965 -> n67966[label="branch"];
n67966 -> n67967[label="goto"];
n67967 -> n67969[label="else"];
n67967 -> n67968[label="branch"];
n67968 -> n67969[label="goto"];
n67969 -> n67972[label="branch"];
n67969 -> n67971[label="branch"];
n67969 -> n67970[label="branch"];
n67970 -> n67973[label="goto"];
n67971 -> n67973[label="goto"];
n67973 -> n67982[label="else"];
n67973 -> n67974[label="branch"];
n67974 -> n67976[label="else"];
n67974 -> n67975[label="branch"];
n67975 -> n67977[label="goto"];
n67977 -> n67981[label="else"];
n67977 -> n67978[label="branch"];
n67978 -> n67979[label="goto"];
n67979 -> n67980[label="goto"];
n67980 -> n67981[label="goto"];
n67981 -> n67982[label="goto"];
n67976 -> n67977[label="goto"];
n67982 -> n67983[label="goto"];
n67983 -> n67984[label="goto"];
n67984 -> n67986[label="else"];
n67984 -> n67985[label="branch"];
n67985 -> n67986[label="goto"];
n67986 -> n67988[label="else"];
n67986 -> n67987[label="branch"];
n67987 -> n67988[label="goto"];
n67988 -> n67999[label="else"];
n67988 -> n67989[label="branch"];
n67989 -> n67991[label="else"];
n67989 -> n67990[label="branch"];
n67990 -> n67993[label="else"];
n67990 -> n67992[label="branch"];
n67992 -> n67993[label="goto"];
n67993 -> n67998[label="goto"];
n67998 -> n67999[label="goto"];
n67991 -> n67997[label="else"];
n67991 -> n67994[label="branch"];
n67994 -> n67995[label="goto"];
n67995 -> n67996[label="goto"];
n67996 -> n67997[label="goto"];
n67997 -> n67998[label="goto"];
n67999 -> n68002[label="branch"];
n67999 -> n68001[label="branch"];
n67999 -> n68000[label="branch"];
n68000 -> n68003[label="goto"];
n68001 -> n68003[label="goto"];
n68003 -> n68004[label="goto"];
n68004 -> n67961[label="goto"];
n68002 -> n68003[label="goto"];
n67972 -> n67973[label="goto"];
n67944 -> n67945[label="goto"];
n67941 -> n67942[label="goto"];
n68196 -> n68197[label="goto"];
n67853 -> n68011[label="else"];
n67853 -> n68010[label="branch"];
n68010 -> n68012[label="goto"];
n68012 -> n68014[label="else"];
n68012 -> n68013[label="branch"];
n68013 -> n68015[label="goto"];
n68015 -> n68017[label="else"];
n68015 -> n68016[label="branch"];
n68016 -> n68018[label="goto"];
n68018 -> n68019[label="goto"];
n68019 -> n68020[label="goto"];
n68020 -> n68022[label="else"];
n68020 -> n68021[label="branch"];
n68021 -> n68119[label="goto"];
n68119 -> n68195[label="goto"];
n68022 -> n68023[label="goto"];
n68023 -> n68024[label="goto"];
n68024 -> n68025[label="goto"];
n68025 -> n68026[label="goto"];
n68026 -> n68028[label="else"];
n68026 -> n68027[label="branch"];
n68027 -> n68117[label="goto"];
n68117 -> n68118[label="goto"];
n68118 -> n68019[label="goto"];
n68028 -> n68029[label="goto"];
n68029 -> n68031[label="else"];
n68029 -> n68030[label="branch"];
n68030 -> n68031[label="goto"];
n68031 -> n68033[label="else"];
n68031 -> n68032[label="branch"];
n68032 -> n68033[label="goto"];
n68033 -> n68036[label="branch"];
n68033 -> n68035[label="branch"];
n68033 -> n68034[label="branch"];
n68034 -> n68037[label="goto"];
n68035 -> n68037[label="goto"];
n68037 -> n68046[label="else"];
n68037 -> n68038[label="branch"];
n68038 -> n68040[label="else"];
n68038 -> n68039[label="branch"];
n68039 -> n68041[label="goto"];
n68041 -> n68045[label="else"];
n68041 -> n68042[label="branch"];
n68042 -> n68043[label="goto"];
n68043 -> n68044[label="goto"];
n68044 -> n68045[label="goto"];
n68045 -> n68046[label="goto"];
n68040 -> n68041[label="goto"];
n68046 -> n68047[label="goto"];
n68047 -> n68048[label="goto"];
n68048 -> n68050[label="else"];
n68048 -> n68049[label="branch"];
n68049 -> n68050[label="goto"];
n68050 -> n68052[label="else"];
n68050 -> n68051[label="branch"];
n68051 -> n68052[label="goto"];
n68052 -> n68055[label="branch"];
n68052 -> n68054[label="branch"];
n68052 -> n68053[label="branch"];
n68053 -> n68056[label="goto"];
n68054 -> n68056[label="goto"];
n68056 -> n68065[label="else"];
n68056 -> n68057[label="branch"];
n68057 -> n68059[label="else"];
n68057 -> n68058[label="branch"];
n68058 -> n68060[label="goto"];
n68060 -> n68064[label="else"];
n68060 -> n68061[label="branch"];
n68061 -> n68062[label="goto"];
n68062 -> n68063[label="goto"];
n68063 -> n68064[label="goto"];
n68064 -> n68065[label="goto"];
n68059 -> n68060[label="goto"];
n68065 -> n68066[label="goto"];
n68066 -> n68067[label="goto"];
n68067 -> n68069[label="else"];
n68067 -> n68068[label="branch"];
n68068 -> n68069[label="goto"];
n68069 -> n68071[label="else"];
n68069 -> n68070[label="branch"];
n68070 -> n68071[label="goto"];
n68071 -> n68074[label="branch"];
n68071 -> n68073[label="branch"];
n68071 -> n68072[label="branch"];
n68072 -> n68075[label="goto"];
n68073 -> n68075[label="goto"];
n68075 -> n68084[label="else"];
n68075 -> n68076[label="branch"];
n68076 -> n68078[label="else"];
n68076 -> n68077[label="branch"];
n68077 -> n68079[label="goto"];
n68079 -> n68083[label="else"];
n68079 -> n68080[label="branch"];
n68080 -> n68081[label="goto"];
n68081 -> n68082[label="goto"];
n68082 -> n68083[label="goto"];
n68083 -> n68084[label="goto"];
n68078 -> n68079[label="goto"];
n68084 -> n68085[label="goto"];
n68085 -> n68116[label="else"];
n68085 -> n68086[label="branch"];
n68086 -> n68087[label="goto"];
n68087 -> n68088[label="goto"];
n68088 -> n68089[label="goto"];
n68089 -> n68090[label="goto"];
n68090 -> n68091[label="goto"];
n68091 -> n68092[label="goto"];
n68092 -> n68093[label="goto"];
n68093 -> n68094[label="goto"];
n68094 -> n68095[label="goto"];
n68095 -> n68097[label="else"];
n68095 -> n68096[label="branch"];
n68096 -> n68097[label="goto"];
n68097 -> n68099[label="else"];
n68097 -> n68098[label="branch"];
n68098 -> n68099[label="goto"];
n68099 -> n68110[label="else"];
n68099 -> n68100[label="branch"];
n68100 -> n68102[label="else"];
n68100 -> n68101[label="branch"];
n68101 -> n68104[label="else"];
n68101 -> n68103[label="branch"];
n68103 -> n68104[label="goto"];
n68104 -> n68109[label="goto"];
n68109 -> n68110[label="goto"];
n68102 -> n68108[label="else"];
n68102 -> n68105[label="branch"];
n68105 -> n68106[label="goto"];
n68106 -> n68107[label="goto"];
n68107 -> n68108[label="goto"];
n68108 -> n68109[label="goto"];
n68110 -> n68113[label="branch"];
n68110 -> n68112[label="branch"];
n68110 -> n68111[label="branch"];
n68111 -> n68114[label="goto"];
n68112 -> n68114[label="goto"];
n68114 -> n68115[label="goto"];
n68115 -> n68116[label="goto"];
n68113 -> n68114[label="goto"];
n68116 -> n68025[label="goto"];
n68074 -> n68075[label="goto"];
n68055 -> n68056[label="goto"];
n68036 -> n68037[label="goto"];
n68195 -> n68196[label="goto"];
n68017 -> n68120[label="goto"];
n68120 -> n68121[label="goto"];
n68121 -> n68122[label="goto"];
n68122 -> n68124[label="else"];
n68122 -> n68123[label="branch"];
n68123 -> n68194[label="goto"];
n68194 -> n68195[label="goto"];
n68124 -> n68125[label="goto"];
n68125 -> n68126[label="goto"];
n68126 -> n68127[label="goto"];
n68127 -> n68128[label="goto"];
n68128 -> n68130[label="else"];
n68128 -> n68129[label="branch"];
n68129 -> n68192[label="goto"];
n68192 -> n68193[label="goto"];
n68193 -> n68121[label="goto"];
n68130 -> n68131[label="goto"];
n68131 -> n68133[label="else"];
n68131 -> n68132[label="branch"];
n68132 -> n68133[label="goto"];
n68133 -> n68135[label="else"];
n68133 -> n68134[label="branch"];
n68134 -> n68135[label="goto"];
n68135 -> n68138[label="branch"];
n68135 -> n68137[label="branch"];
n68135 -> n68136[label="branch"];
n68136 -> n68139[label="goto"];
n68137 -> n68139[label="goto"];
n68139 -> n68148[label="else"];
n68139 -> n68140[label="branch"];
n68140 -> n68142[label="else"];
n68140 -> n68141[label="branch"];
n68141 -> n68143[label="goto"];
n68143 -> n68147[label="else"];
n68143 -> n68144[label="branch"];
n68144 -> n68145[label="goto"];
n68145 -> n68146[label="goto"];
n68146 -> n68147[label="goto"];
n68147 -> n68148[label="goto"];
n68142 -> n68143[label="goto"];
n68148 -> n68149[label="goto"];
n68149 -> n68150[label="goto"];
n68150 -> n68152[label="else"];
n68150 -> n68151[label="branch"];
n68151 -> n68152[label="goto"];
n68152 -> n68154[label="else"];
n68152 -> n68153[label="branch"];
n68153 -> n68154[label="goto"];
n68154 -> n68157[label="branch"];
n68154 -> n68156[label="branch"];
n68154 -> n68155[label="branch"];
n68155 -> n68158[label="goto"];
n68156 -> n68158[label="goto"];
n68158 -> n68167[label="else"];
n68158 -> n68159[label="branch"];
n68159 -> n68161[label="else"];
n68159 -> n68160[label="branch"];
n68160 -> n68162[label="goto"];
n68162 -> n68166[label="else"];
n68162 -> n68163[label="branch"];
n68163 -> n68164[label="goto"];
n68164 -> n68165[label="goto"];
n68165 -> n68166[label="goto"];
n68166 -> n68167[label="goto"];
n68161 -> n68162[label="goto"];
n68167 -> n68168[label="goto"];
n68168 -> n68169[label="goto"];
n68169 -> n68170[label="goto"];
n68170 -> n68171[label="goto"];
n68171 -> n68173[label="else"];
n68171 -> n68172[label="branch"];
n68172 -> n68173[label="goto"];
n68173 -> n68175[label="else"];
n68173 -> n68174[label="branch"];
n68174 -> n68175[label="goto"];
n68175 -> n68186[label="else"];
n68175 -> n68176[label="branch"];
n68176 -> n68178[label="else"];
n68176 -> n68177[label="branch"];
n68177 -> n68180[label="else"];
n68177 -> n68179[label="branch"];
n68179 -> n68180[label="goto"];
n68180 -> n68185[label="goto"];
n68185 -> n68186[label="goto"];
n68178 -> n68184[label="else"];
n68178 -> n68181[label="branch"];
n68181 -> n68182[label="goto"];
n68182 -> n68183[label="goto"];
n68183 -> n68184[label="goto"];
n68184 -> n68185[label="goto"];
n68186 -> n68189[label="branch"];
n68186 -> n68188[label="branch"];
n68186 -> n68187[label="branch"];
n68187 -> n68190[label="goto"];
n68188 -> n68190[label="goto"];
n68190 -> n68191[label="goto"];
n68191 -> n68127[label="goto"];
n68189 -> n68190[label="goto"];
n68157 -> n68158[label="goto"];
n68138 -> n68139[label="goto"];
n68014 -> n68015[label="goto"];
n68011 -> n68012[label="goto"];
n67844 -> n67851[label="goto"];
n67838 -> n67842[label="goto"];
n67835 -> n67836[label="goto"];
n67830 -> n67831[label="goto"];
n67825 -> n67826[label="goto"];
n67822 -> n67823[label="goto"];
n67819 -> n67820[label="goto"];
n67816 -> n67817[label="goto"];
n67813 -> n67814[label="goto"];
n67810 -> n67811[label="goto"];
n67807 -> n67808[label="goto"];
n67804 -> n67805[label="goto"];
n67801 -> n67802[label="goto"];
n67798 -> n67799[label="goto"];
n67795 -> n67796[label="goto"];
}
