digraph graphname {
	node [shape=plaintext];
n68197[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68197) BKNormal</td></tr>
	<tr><td port="e0" align="left">image.dirty = true</td></tr>
	<tr><td port="e1" align="left">image.version ++</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68196[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68196) BKNormal</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68195[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68195) BKNormal</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68194[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68194) BKNormal</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68193[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68193) BKNormal</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68192[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68192) BKNormal</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68191[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68191) BKNormal</td></tr>
	<tr><td port="e0" align="left">sourcePosition = sourcePosition + 4</td></tr>
	<tr><td port="e1" align="left">destPosition = destPosition + 4</td></tr>
	<tr><td port="e2" align="left">alphaPosition = alphaPosition + 4</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68190[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68190) BKNormal</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68189[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68189) BKConditional</td></tr>
	<tr><td port="e0" align="left">cast destData[destPosition] = cast cast cast cast cast cast sourcePixel &gt;&gt;&gt; 8 &amp; 255</td></tr>
	<tr><td port="e1" align="left">var tmp = destPosition + 1</td></tr>
	<tr><td port="e2" align="left">cast destData[tmp] = cast cast cast cast cast cast sourcePixel &gt;&gt;&gt; 16 &amp; 255</td></tr>
	<tr><td port="e3" align="left">var tmp = destPosition + 2</td></tr>
	<tr><td port="e4" align="left">cast destData[tmp] = cast cast cast cast cast cast sourcePixel &gt;&gt;&gt; 24 &amp; 255</td></tr>
	<tr><td port="e5" align="left">var tmp = destPosition + 3</td></tr>
	<tr><td port="e6" align="left">cast destData[tmp] = cast cast cast cast sourcePixel &amp; 255</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68188[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68188) BKConditional</td></tr>
	<tr><td port="e0" align="left">cast destData[destPosition] = cast cast cast cast sourcePixel &amp; 255</td></tr>
	<tr><td port="e1" align="left">var tmp = destPosition + 1</td></tr>
	<tr><td port="e2" align="left">cast destData[tmp] = cast cast cast cast cast cast sourcePixel &gt;&gt;&gt; 24 &amp; 255</td></tr>
	<tr><td port="e3" align="left">var tmp = destPosition + 2</td></tr>
	<tr><td port="e4" align="left">cast destData[tmp] = cast cast cast cast cast cast sourcePixel &gt;&gt;&gt; 16 &amp; 255</td></tr>
	<tr><td port="e5" align="left">var tmp = destPosition + 3</td></tr>
	<tr><td port="e6" align="left">cast destData[tmp] = cast cast cast cast cast cast sourcePixel &gt;&gt;&gt; 8 &amp; 255</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68187[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68187) BKConditional</td></tr>
	<tr><td port="e0" align="left">cast destData[destPosition] = cast cast cast cast cast cast sourcePixel &gt;&gt;&gt; 24 &amp; 255</td></tr>
	<tr><td port="e1" align="left">var tmp = destPosition + 1</td></tr>
	<tr><td port="e2" align="left">cast destData[tmp] = cast cast cast cast cast cast sourcePixel &gt;&gt;&gt; 16 &amp; 255</td></tr>
	<tr><td port="e3" align="left">var tmp = destPosition + 2</td></tr>
	<tr><td port="e4" align="left">cast destData[tmp] = cast cast cast cast cast cast sourcePixel &gt;&gt;&gt; 8 &amp; 255</td></tr>
	<tr><td port="e5" align="left">var tmp = destPosition + 3</td></tr>
	<tr><td port="e6" align="left">cast destData[tmp] = cast cast cast cast sourcePixel &amp; 255</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68186[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68186) BKNormal</td></tr>
	<tr><td port="e0" align="left">var format = @:exhaustive format</td></tr>
	<tr><td port="e1" align="left">@:cond-branch format</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68185[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68185) BKNormal</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68184[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68184) BKNormal</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68183[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68183) BKNormal</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68182[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68182) BKSub</td></tr>
	<tr><td port="e0" align="left">var r = (cast cast cast cast cast cast sourcePixel &gt;&gt;&gt; 24 &amp; 255) * lime.math._RGBA.RGBA_Impl_.a16</td></tr>
	<tr><td port="e1" align="left">var r = r &gt;&gt; 16</td></tr>
	<tr><td port="e2" align="left">var g = (cast cast cast cast cast cast sourcePixel &gt;&gt;&gt; 16 &amp; 255) * lime.math._RGBA.RGBA_Impl_.a16</td></tr>
	<tr><td port="e3" align="left">var g = g &gt;&gt; 16</td></tr>
	<tr><td port="e4" align="left">var b = (cast cast cast cast cast cast sourcePixel &gt;&gt;&gt; 8 &amp; 255) * lime.math._RGBA.RGBA_Impl_.a16</td></tr>
	<tr><td port="e5" align="left">var b = b &gt;&gt; 16</td></tr>
	<tr><td port="e6" align="left">var sourcePixel = r &amp; 255</td></tr>
	<tr><td port="e7" align="left">var sourcePixel = sourcePixel &lt;&lt; 24</td></tr>
	<tr><td port="e8" align="left">var sourcePixel = g &amp; 255</td></tr>
	<tr><td port="e9" align="left">var sourcePixel = sourcePixel &lt;&lt; 16</td></tr>
	<tr><td port="e10" align="left">var sourcePixel = sourcePixel | sourcePixel</td></tr>
	<tr><td port="e11" align="left">var sourcePixel = b &amp; 255</td></tr>
	<tr><td port="e12" align="left">var sourcePixel = sourcePixel &lt;&lt; 8</td></tr>
	<tr><td port="e13" align="left">var sourcePixel = sourcePixel | sourcePixel</td></tr>
	<tr><td port="e14" align="left">var sourcePixel = cast cast cast cast sourcePixel &amp; 255 &amp; 255</td></tr>
	<tr><td port="e15" align="left">sourcePixel = sourcePixel | sourcePixel</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68181[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68181) BKConditional</td></tr>
	<tr><td port="e0" align="left">lime.math._RGBA.RGBA_Impl_.a16 = cast cast lime.math._RGBA.RGBA_Impl_.__alpha16[cast cast cast cast sourcePixel &amp; 255]</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68180[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68180) BKNormal</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68179[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68179) BKConditional</td></tr>
	<tr><td port="e0" align="left">sourcePixel = 0</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68178[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68178) BKConditional</td></tr>
	<tr><td port="e0" align="left">var tmp = (cast cast cast cast sourcePixel &amp; 255) != 255</td></tr>
	<tr><td port="e1" align="left">@:cond-branch tmp</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68177[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68177) BKConditional</td></tr>
	<tr><td port="e0" align="left">var tmp = cast cast sourcePixel != 0</td></tr>
	<tr><td port="e1" align="left">@:cond-branch tmp</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68176[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68176) BKConditional</td></tr>
	<tr><td port="e0" align="left">var tmp = (cast cast cast cast sourcePixel &amp; 255) == 0</td></tr>
	<tr><td port="e1" align="left">@:cond-branch tmp</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68175[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68175) BKNormal</td></tr>
	<tr><td port="e0" align="left">var premultiplied = premultiplied</td></tr>
	<tr><td port="e1" align="left">@:cond-branch premultiplied</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68174[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68174) BKConditional</td></tr>
	<tr><td port="e0" align="left">format = 0</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68173[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68173) BKNormal</td></tr>
	<tr><td port="e0" align="left">var tmp = format == null</td></tr>
	<tr><td port="e1" align="left">@:cond-branch tmp</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68172[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68172) BKConditional</td></tr>
	<tr><td port="e0" align="left">premultiplied = false</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68171[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68171) BKSub</td></tr>
	<tr><td port="e0" align="left">var format = destFormat</td></tr>
	<tr><td port="e1" align="left">var premultiplied = destPremultiplied</td></tr>
	<tr><td port="e2" align="left">var tmp = premultiplied == null</td></tr>
	<tr><td port="e3" align="left">@:cond-branch tmp</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68170[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68170) BKNormal</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68169[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68169) BKSub</td></tr>
	<tr><td port="e0" align="left">var value = (cast cast cast cast alphaPixel &amp; 255) / 255</td></tr>
	<tr><td port="e1" align="left">var value = (cast cast cast cast sourcePixel &amp; 255) * value</td></tr>
	<tr><td port="e2" align="left">var value = Math.round(value)</td></tr>
	<tr><td port="e3" align="left">var sourcePixel = cast cast cast cast cast cast sourcePixel &gt;&gt;&gt; 24 &amp; 255 &amp; 255</td></tr>
	<tr><td port="e4" align="left">var sourcePixel = sourcePixel &lt;&lt; 24</td></tr>
	<tr><td port="e5" align="left">var sourcePixel = cast cast cast cast cast cast sourcePixel &gt;&gt;&gt; 16 &amp; 255 &amp; 255</td></tr>
	<tr><td port="e6" align="left">var sourcePixel = sourcePixel &lt;&lt; 16</td></tr>
	<tr><td port="e7" align="left">var sourcePixel = sourcePixel | sourcePixel</td></tr>
	<tr><td port="e8" align="left">var sourcePixel = cast cast cast cast cast cast sourcePixel &gt;&gt;&gt; 8 &amp; 255 &amp; 255</td></tr>
	<tr><td port="e9" align="left">var sourcePixel = sourcePixel &lt;&lt; 8</td></tr>
	<tr><td port="e10" align="left">var sourcePixel = sourcePixel | sourcePixel</td></tr>
	<tr><td port="e11" align="left">var sourcePixel = value &amp; 255</td></tr>
	<tr><td port="e12" align="left">sourcePixel = sourcePixel | sourcePixel</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68168[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68168) BKNormal</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68167[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68167) BKNormal</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68166[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68166) BKNormal</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68165[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68165) BKNormal</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68164[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68164) BKSub</td></tr>
	<tr><td port="e0" align="left">var r = cast lime.math._RGBA.RGBA_Impl_.__clamp</td></tr>
	<tr><td port="e1" align="left">var r = (cast cast cast cast cast cast alphaPixel &gt;&gt;&gt; 24 &amp; 255) * lime.math._RGBA.RGBA_Impl_.unmult</td></tr>
	<tr><td port="e2" align="left">var r = Math.round(r)</td></tr>
	<tr><td port="e3" align="left">var r = cast r[r]</td></tr>
	<tr><td port="e4" align="left">var g = cast lime.math._RGBA.RGBA_Impl_.__clamp</td></tr>
	<tr><td port="e5" align="left">var g = (cast cast cast cast cast cast alphaPixel &gt;&gt;&gt; 16 &amp; 255) * lime.math._RGBA.RGBA_Impl_.unmult</td></tr>
	<tr><td port="e6" align="left">var g = Math.round(g)</td></tr>
	<tr><td port="e7" align="left">var g = cast g[g]</td></tr>
	<tr><td port="e8" align="left">var b = cast lime.math._RGBA.RGBA_Impl_.__clamp</td></tr>
	<tr><td port="e9" align="left">var b = (cast cast cast cast cast cast alphaPixel &gt;&gt;&gt; 8 &amp; 255) * lime.math._RGBA.RGBA_Impl_.unmult</td></tr>
	<tr><td port="e10" align="left">var b = Math.round(b)</td></tr>
	<tr><td port="e11" align="left">var b = cast b[b]</td></tr>
	<tr><td port="e12" align="left">var alphaPixel = r &amp; 255</td></tr>
	<tr><td port="e13" align="left">var alphaPixel = alphaPixel &lt;&lt; 24</td></tr>
	<tr><td port="e14" align="left">var alphaPixel = g &amp; 255</td></tr>
	<tr><td port="e15" align="left">var alphaPixel = alphaPixel &lt;&lt; 16</td></tr>
	<tr><td port="e16" align="left">var alphaPixel = alphaPixel | alphaPixel</td></tr>
	<tr><td port="e17" align="left">var alphaPixel = b &amp; 255</td></tr>
	<tr><td port="e18" align="left">var alphaPixel = alphaPixel &lt;&lt; 8</td></tr>
	<tr><td port="e19" align="left">var alphaPixel = alphaPixel | alphaPixel</td></tr>
	<tr><td port="e20" align="left">var alphaPixel = cast cast cast cast alphaPixel &amp; 255 &amp; 255</td></tr>
	<tr><td port="e21" align="left">alphaPixel = alphaPixel | alphaPixel</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68163[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68163) BKConditional</td></tr>
	<tr><td port="e0" align="left">lime.math._RGBA.RGBA_Impl_.unmult = 255.0 / (cast cast cast cast alphaPixel &amp; 255)</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68162[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68162) BKNormal</td></tr>
	<tr><td port="e0" align="left">@:cond-branch tmp</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68161[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68161) BKConditional</td></tr>
	<tr><td port="e0" align="left">tmp = false</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68160[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68160) BKConditional</td></tr>
	<tr><td port="e0" align="left">tmp = (cast cast cast cast alphaPixel &amp; 255) != 255</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68159[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68159) BKConditional</td></tr>
	<tr><td port="e0" align="left">var tmp</td></tr>
	<tr><td port="e1" align="left">var tmp = (cast cast cast cast alphaPixel &amp; 255) != 0</td></tr>
	<tr><td port="e2" align="left">@:cond-branch tmp</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68158[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68158) BKNormal</td></tr>
	<tr><td port="e0" align="left">var premultiplied = premultiplied</td></tr>
	<tr><td port="e1" align="left">@:cond-branch premultiplied</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68157[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68157) BKConditional</td></tr>
	<tr><td port="e0" align="left">var alphaPixel = alphaPosition + 2</td></tr>
	<tr><td port="e1" align="left">var alphaPixel = cast cast alphaData[alphaPixel] &amp; 255</td></tr>
	<tr><td port="e2" align="left">var alphaPixel = alphaPixel &lt;&lt; 24</td></tr>
	<tr><td port="e3" align="left">var alphaPixel = alphaPosition + 1</td></tr>
	<tr><td port="e4" align="left">var alphaPixel = cast cast alphaData[alphaPixel] &amp; 255</td></tr>
	<tr><td port="e5" align="left">var alphaPixel = alphaPixel &lt;&lt; 16</td></tr>
	<tr><td port="e6" align="left">var alphaPixel = alphaPixel | alphaPixel</td></tr>
	<tr><td port="e7" align="left">var alphaPixel = cast cast alphaData[alphaPosition] &amp; 255</td></tr>
	<tr><td port="e8" align="left">var alphaPixel = alphaPixel &lt;&lt; 8</td></tr>
	<tr><td port="e9" align="left">var alphaPixel = alphaPixel | alphaPixel</td></tr>
	<tr><td port="e10" align="left">var alphaPixel = alphaPosition + 3</td></tr>
	<tr><td port="e11" align="left">var alphaPixel = cast cast alphaData[alphaPixel] &amp; 255</td></tr>
	<tr><td port="e12" align="left">alphaPixel = alphaPixel | alphaPixel</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68156[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68156) BKConditional</td></tr>
	<tr><td port="e0" align="left">var alphaPixel = alphaPosition + 1</td></tr>
	<tr><td port="e1" align="left">var alphaPixel = cast cast alphaData[alphaPixel] &amp; 255</td></tr>
	<tr><td port="e2" align="left">var alphaPixel = alphaPixel &lt;&lt; 24</td></tr>
	<tr><td port="e3" align="left">var alphaPixel = alphaPosition + 2</td></tr>
	<tr><td port="e4" align="left">var alphaPixel = cast cast alphaData[alphaPixel] &amp; 255</td></tr>
	<tr><td port="e5" align="left">var alphaPixel = alphaPixel &lt;&lt; 16</td></tr>
	<tr><td port="e6" align="left">var alphaPixel = alphaPixel | alphaPixel</td></tr>
	<tr><td port="e7" align="left">var alphaPixel = alphaPosition + 3</td></tr>
	<tr><td port="e8" align="left">var alphaPixel = cast cast alphaData[alphaPixel] &amp; 255</td></tr>
	<tr><td port="e9" align="left">var alphaPixel = alphaPixel &lt;&lt; 8</td></tr>
	<tr><td port="e10" align="left">var alphaPixel = alphaPixel | alphaPixel</td></tr>
	<tr><td port="e11" align="left">var alphaPixel = cast cast alphaData[alphaPosition] &amp; 255</td></tr>
	<tr><td port="e12" align="left">alphaPixel = alphaPixel | alphaPixel</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68155[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68155) BKConditional</td></tr>
	<tr><td port="e0" align="left">var alphaPixel = cast cast alphaData[alphaPosition] &amp; 255</td></tr>
	<tr><td port="e1" align="left">var alphaPixel = alphaPixel &lt;&lt; 24</td></tr>
	<tr><td port="e2" align="left">var alphaPixel = alphaPosition + 1</td></tr>
	<tr><td port="e3" align="left">var alphaPixel = cast cast alphaData[alphaPixel] &amp; 255</td></tr>
	<tr><td port="e4" align="left">var alphaPixel = alphaPixel &lt;&lt; 16</td></tr>
	<tr><td port="e5" align="left">var alphaPixel = alphaPixel | alphaPixel</td></tr>
	<tr><td port="e6" align="left">var alphaPixel = alphaPosition + 2</td></tr>
	<tr><td port="e7" align="left">var alphaPixel = cast cast alphaData[alphaPixel] &amp; 255</td></tr>
	<tr><td port="e8" align="left">var alphaPixel = alphaPixel &lt;&lt; 8</td></tr>
	<tr><td port="e9" align="left">var alphaPixel = alphaPixel | alphaPixel</td></tr>
	<tr><td port="e10" align="left">var alphaPixel = alphaPosition + 3</td></tr>
	<tr><td port="e11" align="left">var alphaPixel = cast cast alphaData[alphaPixel] &amp; 255</td></tr>
	<tr><td port="e12" align="left">alphaPixel = alphaPixel | alphaPixel</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68154[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68154) BKNormal</td></tr>
	<tr><td port="e0" align="left">var format = @:exhaustive format</td></tr>
	<tr><td port="e1" align="left">@:cond-branch format</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68153[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68153) BKConditional</td></tr>
	<tr><td port="e0" align="left">format = 0</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68152[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68152) BKNormal</td></tr>
	<tr><td port="e0" align="left">var tmp = format == null</td></tr>
	<tr><td port="e1" align="left">@:cond-branch tmp</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68151[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68151) BKConditional</td></tr>
	<tr><td port="e0" align="left">premultiplied = false</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68150[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68150) BKSub</td></tr>
	<tr><td port="e0" align="left">var format = alphaFormat</td></tr>
	<tr><td port="e1" align="left">var premultiplied = false</td></tr>
	<tr><td port="e2" align="left">var tmp = premultiplied == null</td></tr>
	<tr><td port="e3" align="left">@:cond-branch tmp</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68149[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68149) BKNormal</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68148[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68148) BKNormal</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68147[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68147) BKNormal</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68146[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68146) BKNormal</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68145[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68145) BKSub</td></tr>
	<tr><td port="e0" align="left">var r = cast lime.math._RGBA.RGBA_Impl_.__clamp</td></tr>
	<tr><td port="e1" align="left">var r = (cast cast cast cast cast cast sourcePixel &gt;&gt;&gt; 24 &amp; 255) * lime.math._RGBA.RGBA_Impl_.unmult</td></tr>
	<tr><td port="e2" align="left">var r = Math.round(r)</td></tr>
	<tr><td port="e3" align="left">var r = cast r[r]</td></tr>
	<tr><td port="e4" align="left">var g = cast lime.math._RGBA.RGBA_Impl_.__clamp</td></tr>
	<tr><td port="e5" align="left">var g = (cast cast cast cast cast cast sourcePixel &gt;&gt;&gt; 16 &amp; 255) * lime.math._RGBA.RGBA_Impl_.unmult</td></tr>
	<tr><td port="e6" align="left">var g = Math.round(g)</td></tr>
	<tr><td port="e7" align="left">var g = cast g[g]</td></tr>
	<tr><td port="e8" align="left">var b = cast lime.math._RGBA.RGBA_Impl_.__clamp</td></tr>
	<tr><td port="e9" align="left">var b = (cast cast cast cast cast cast sourcePixel &gt;&gt;&gt; 8 &amp; 255) * lime.math._RGBA.RGBA_Impl_.unmult</td></tr>
	<tr><td port="e10" align="left">var b = Math.round(b)</td></tr>
	<tr><td port="e11" align="left">var b = cast b[b]</td></tr>
	<tr><td port="e12" align="left">var sourcePixel = r &amp; 255</td></tr>
	<tr><td port="e13" align="left">var sourcePixel = sourcePixel &lt;&lt; 24</td></tr>
	<tr><td port="e14" align="left">var sourcePixel = g &amp; 255</td></tr>
	<tr><td port="e15" align="left">var sourcePixel = sourcePixel &lt;&lt; 16</td></tr>
	<tr><td port="e16" align="left">var sourcePixel = sourcePixel | sourcePixel</td></tr>
	<tr><td port="e17" align="left">var sourcePixel = b &amp; 255</td></tr>
	<tr><td port="e18" align="left">var sourcePixel = sourcePixel &lt;&lt; 8</td></tr>
	<tr><td port="e19" align="left">var sourcePixel = sourcePixel | sourcePixel</td></tr>
	<tr><td port="e20" align="left">var sourcePixel = cast cast cast cast sourcePixel &amp; 255 &amp; 255</td></tr>
	<tr><td port="e21" align="left">sourcePixel = sourcePixel | sourcePixel</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68144[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68144) BKConditional</td></tr>
	<tr><td port="e0" align="left">lime.math._RGBA.RGBA_Impl_.unmult = 255.0 / (cast cast cast cast sourcePixel &amp; 255)</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68143[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68143) BKNormal</td></tr>
	<tr><td port="e0" align="left">@:cond-branch tmp</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68142[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68142) BKConditional</td></tr>
	<tr><td port="e0" align="left">tmp = false</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68141[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68141) BKConditional</td></tr>
	<tr><td port="e0" align="left">tmp = (cast cast cast cast sourcePixel &amp; 255) != 255</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68140[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68140) BKConditional</td></tr>
	<tr><td port="e0" align="left">var tmp</td></tr>
	<tr><td port="e1" align="left">var tmp = (cast cast cast cast sourcePixel &amp; 255) != 0</td></tr>
	<tr><td port="e2" align="left">@:cond-branch tmp</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68139[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68139) BKNormal</td></tr>
	<tr><td port="e0" align="left">var premultiplied = premultiplied</td></tr>
	<tr><td port="e1" align="left">@:cond-branch premultiplied</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68138[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68138) BKConditional</td></tr>
	<tr><td port="e0" align="left">var sourcePixel = sourcePosition + 2</td></tr>
	<tr><td port="e1" align="left">var sourcePixel = cast cast sourceData[sourcePixel] &amp; 255</td></tr>
	<tr><td port="e2" align="left">var sourcePixel = sourcePixel &lt;&lt; 24</td></tr>
	<tr><td port="e3" align="left">var sourcePixel = sourcePosition + 1</td></tr>
	<tr><td port="e4" align="left">var sourcePixel = cast cast sourceData[sourcePixel] &amp; 255</td></tr>
	<tr><td port="e5" align="left">var sourcePixel = sourcePixel &lt;&lt; 16</td></tr>
	<tr><td port="e6" align="left">var sourcePixel = sourcePixel | sourcePixel</td></tr>
	<tr><td port="e7" align="left">var sourcePixel = cast cast sourceData[sourcePosition] &amp; 255</td></tr>
	<tr><td port="e8" align="left">var sourcePixel = sourcePixel &lt;&lt; 8</td></tr>
	<tr><td port="e9" align="left">var sourcePixel = sourcePixel | sourcePixel</td></tr>
	<tr><td port="e10" align="left">var sourcePixel = sourcePosition + 3</td></tr>
	<tr><td port="e11" align="left">var sourcePixel = cast cast sourceData[sourcePixel] &amp; 255</td></tr>
	<tr><td port="e12" align="left">sourcePixel = sourcePixel | sourcePixel</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68137[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68137) BKConditional</td></tr>
	<tr><td port="e0" align="left">var sourcePixel = sourcePosition + 1</td></tr>
	<tr><td port="e1" align="left">var sourcePixel = cast cast sourceData[sourcePixel] &amp; 255</td></tr>
	<tr><td port="e2" align="left">var sourcePixel = sourcePixel &lt;&lt; 24</td></tr>
	<tr><td port="e3" align="left">var sourcePixel = sourcePosition + 2</td></tr>
	<tr><td port="e4" align="left">var sourcePixel = cast cast sourceData[sourcePixel] &amp; 255</td></tr>
	<tr><td port="e5" align="left">var sourcePixel = sourcePixel &lt;&lt; 16</td></tr>
	<tr><td port="e6" align="left">var sourcePixel = sourcePixel | sourcePixel</td></tr>
	<tr><td port="e7" align="left">var sourcePixel = sourcePosition + 3</td></tr>
	<tr><td port="e8" align="left">var sourcePixel = cast cast sourceData[sourcePixel] &amp; 255</td></tr>
	<tr><td port="e9" align="left">var sourcePixel = sourcePixel &lt;&lt; 8</td></tr>
	<tr><td port="e10" align="left">var sourcePixel = sourcePixel | sourcePixel</td></tr>
	<tr><td port="e11" align="left">var sourcePixel = cast cast sourceData[sourcePosition] &amp; 255</td></tr>
	<tr><td port="e12" align="left">sourcePixel = sourcePixel | sourcePixel</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68136[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68136) BKConditional</td></tr>
	<tr><td port="e0" align="left">var sourcePixel = cast cast sourceData[sourcePosition] &amp; 255</td></tr>
	<tr><td port="e1" align="left">var sourcePixel = sourcePixel &lt;&lt; 24</td></tr>
	<tr><td port="e2" align="left">var sourcePixel = sourcePosition + 1</td></tr>
	<tr><td port="e3" align="left">var sourcePixel = cast cast sourceData[sourcePixel] &amp; 255</td></tr>
	<tr><td port="e4" align="left">var sourcePixel = sourcePixel &lt;&lt; 16</td></tr>
	<tr><td port="e5" align="left">var sourcePixel = sourcePixel | sourcePixel</td></tr>
	<tr><td port="e6" align="left">var sourcePixel = sourcePosition + 2</td></tr>
	<tr><td port="e7" align="left">var sourcePixel = cast cast sourceData[sourcePixel] &amp; 255</td></tr>
	<tr><td port="e8" align="left">var sourcePixel = sourcePixel &lt;&lt; 8</td></tr>
	<tr><td port="e9" align="left">var sourcePixel = sourcePixel | sourcePixel</td></tr>
	<tr><td port="e10" align="left">var sourcePixel = sourcePosition + 3</td></tr>
	<tr><td port="e11" align="left">var sourcePixel = cast cast sourceData[sourcePixel] &amp; 255</td></tr>
	<tr><td port="e12" align="left">sourcePixel = sourcePixel | sourcePixel</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68135[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68135) BKNormal</td></tr>
	<tr><td port="e0" align="left">var format = @:exhaustive format</td></tr>
	<tr><td port="e1" align="left">@:cond-branch format</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68134[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68134) BKConditional</td></tr>
	<tr><td port="e0" align="left">format = 0</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68133[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68133) BKNormal</td></tr>
	<tr><td port="e0" align="left">var tmp = format == null</td></tr>
	<tr><td port="e1" align="left">@:cond-branch tmp</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68132[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68132) BKConditional</td></tr>
	<tr><td port="e0" align="left">premultiplied = false</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68131[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68131) BKSub</td></tr>
	<tr><td port="e0" align="left">var format = sourceFormat</td></tr>
	<tr><td port="e1" align="left">var premultiplied = sourcePremultiplied</td></tr>
	<tr><td port="e2" align="left">var tmp = premultiplied == null</td></tr>
	<tr><td port="e3" align="left">@:cond-branch tmp</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68130[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68130) BKNormal</td></tr>
	<tr><td port="e0" align="left">` = ` + 1</td></tr>
	<tr><td port="e1" align="left">var x = ` - 1</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68129[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68129) BKConditional</td></tr>
	<tr><td port="e0" align="left">break</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68128[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68128) BKNormal</td></tr>
	<tr><td port="e0" align="left">var tmp = ! ((` &lt; `1))</td></tr>
	<tr><td port="e1" align="left">@:cond-branch tmp</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68127[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68127) BKLoopHead</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68126[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68126) BKNormal</td></tr>
	<tr><td port="e0" align="left">while ((true)) @:block 68128</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68125[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68125) BKSub</td></tr>
	<tr><td port="e0" align="left">var ` = 0</td></tr>
	<tr><td port="e1" align="left">var `1 = destView.width</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68124[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68124) BKNormal</td></tr>
	<tr><td port="e0" align="left">` = ` + 1</td></tr>
	<tr><td port="e1" align="left">var y = ` - 1</td></tr>
	<tr><td port="e2" align="left">var sourceView = sourceView.byteOffset</td></tr>
	<tr><td port="e3" align="left">var sourcePosition = sourceView.stride * y</td></tr>
	<tr><td port="e4" align="left">sourcePosition = sourceView + sourcePosition</td></tr>
	<tr><td port="e5" align="left">var destView = destView.byteOffset</td></tr>
	<tr><td port="e6" align="left">var destPosition = destView.stride * y</td></tr>
	<tr><td port="e7" align="left">destPosition = destView + destPosition</td></tr>
	<tr><td port="e8" align="left">var alphaView = alphaView.byteOffset</td></tr>
	<tr><td port="e9" align="left">var alphaPosition = alphaView.stride * y</td></tr>
	<tr><td port="e10" align="left">alphaPosition = alphaView + alphaPosition</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68123[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68123) BKConditional</td></tr>
	<tr><td port="e0" align="left">break</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68122[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68122) BKNormal</td></tr>
	<tr><td port="e0" align="left">var tmp = ! ((` &lt; `1))</td></tr>
	<tr><td port="e1" align="left">@:cond-branch tmp</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68121[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68121) BKLoopHead</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68120[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68120) BKNormal</td></tr>
	<tr><td port="e0" align="left">while ((true)) @:block 68122</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68119[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68119) BKNormal</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68118[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68118) BKNormal</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68117[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68117) BKNormal</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68116[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68116) BKNormal</td></tr>
	<tr><td port="e0" align="left">sourcePosition = sourcePosition + 4</td></tr>
	<tr><td port="e1" align="left">destPosition = destPosition + 4</td></tr>
	<tr><td port="e2" align="left">alphaPosition = alphaPosition + 4</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68115[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68115) BKNormal</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68114[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68114) BKNormal</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68113[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68113) BKConditional</td></tr>
	<tr><td port="e0" align="left">cast destData[destPosition] = cast cast cast cast cast cast destPixel &gt;&gt;&gt; 8 &amp; 255</td></tr>
	<tr><td port="e1" align="left">var tmp = destPosition + 1</td></tr>
	<tr><td port="e2" align="left">cast destData[tmp] = cast cast cast cast cast cast destPixel &gt;&gt;&gt; 16 &amp; 255</td></tr>
	<tr><td port="e3" align="left">var tmp = destPosition + 2</td></tr>
	<tr><td port="e4" align="left">cast destData[tmp] = cast cast cast cast cast cast destPixel &gt;&gt;&gt; 24 &amp; 255</td></tr>
	<tr><td port="e5" align="left">var tmp = destPosition + 3</td></tr>
	<tr><td port="e6" align="left">cast destData[tmp] = cast cast cast cast destPixel &amp; 255</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68112[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68112) BKConditional</td></tr>
	<tr><td port="e0" align="left">cast destData[destPosition] = cast cast cast cast destPixel &amp; 255</td></tr>
	<tr><td port="e1" align="left">var tmp = destPosition + 1</td></tr>
	<tr><td port="e2" align="left">cast destData[tmp] = cast cast cast cast cast cast destPixel &gt;&gt;&gt; 24 &amp; 255</td></tr>
	<tr><td port="e3" align="left">var tmp = destPosition + 2</td></tr>
	<tr><td port="e4" align="left">cast destData[tmp] = cast cast cast cast cast cast destPixel &gt;&gt;&gt; 16 &amp; 255</td></tr>
	<tr><td port="e5" align="left">var tmp = destPosition + 3</td></tr>
	<tr><td port="e6" align="left">cast destData[tmp] = cast cast cast cast cast cast destPixel &gt;&gt;&gt; 8 &amp; 255</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68111[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68111) BKConditional</td></tr>
	<tr><td port="e0" align="left">cast destData[destPosition] = cast cast cast cast cast cast destPixel &gt;&gt;&gt; 24 &amp; 255</td></tr>
	<tr><td port="e1" align="left">var tmp = destPosition + 1</td></tr>
	<tr><td port="e2" align="left">cast destData[tmp] = cast cast cast cast cast cast destPixel &gt;&gt;&gt; 16 &amp; 255</td></tr>
	<tr><td port="e3" align="left">var tmp = destPosition + 2</td></tr>
	<tr><td port="e4" align="left">cast destData[tmp] = cast cast cast cast cast cast destPixel &gt;&gt;&gt; 8 &amp; 255</td></tr>
	<tr><td port="e5" align="left">var tmp = destPosition + 3</td></tr>
	<tr><td port="e6" align="left">cast destData[tmp] = cast cast cast cast destPixel &amp; 255</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68110[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68110) BKNormal</td></tr>
	<tr><td port="e0" align="left">var format = @:exhaustive format</td></tr>
	<tr><td port="e1" align="left">@:cond-branch format</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68109[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68109) BKNormal</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68108[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68108) BKNormal</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68107[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68107) BKNormal</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68106[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68106) BKSub</td></tr>
	<tr><td port="e0" align="left">var r = (cast cast cast cast cast cast destPixel &gt;&gt;&gt; 24 &amp; 255) * lime.math._RGBA.RGBA_Impl_.a16</td></tr>
	<tr><td port="e1" align="left">var r = r &gt;&gt; 16</td></tr>
	<tr><td port="e2" align="left">var g = (cast cast cast cast cast cast destPixel &gt;&gt;&gt; 16 &amp; 255) * lime.math._RGBA.RGBA_Impl_.a16</td></tr>
	<tr><td port="e3" align="left">var g = g &gt;&gt; 16</td></tr>
	<tr><td port="e4" align="left">var b = (cast cast cast cast cast cast destPixel &gt;&gt;&gt; 8 &amp; 255) * lime.math._RGBA.RGBA_Impl_.a16</td></tr>
	<tr><td port="e5" align="left">var b = b &gt;&gt; 16</td></tr>
	<tr><td port="e6" align="left">var destPixel = r &amp; 255</td></tr>
	<tr><td port="e7" align="left">var destPixel = destPixel &lt;&lt; 24</td></tr>
	<tr><td port="e8" align="left">var destPixel = g &amp; 255</td></tr>
	<tr><td port="e9" align="left">var destPixel = destPixel &lt;&lt; 16</td></tr>
	<tr><td port="e10" align="left">var destPixel = destPixel | destPixel</td></tr>
	<tr><td port="e11" align="left">var destPixel = b &amp; 255</td></tr>
	<tr><td port="e12" align="left">var destPixel = destPixel &lt;&lt; 8</td></tr>
	<tr><td port="e13" align="left">var destPixel = destPixel | destPixel</td></tr>
	<tr><td port="e14" align="left">var destPixel = cast cast cast cast destPixel &amp; 255 &amp; 255</td></tr>
	<tr><td port="e15" align="left">destPixel = destPixel | destPixel</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68105[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68105) BKConditional</td></tr>
	<tr><td port="e0" align="left">lime.math._RGBA.RGBA_Impl_.a16 = cast cast lime.math._RGBA.RGBA_Impl_.__alpha16[cast cast cast cast destPixel &amp; 255]</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68104[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68104) BKNormal</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68103[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68103) BKConditional</td></tr>
	<tr><td port="e0" align="left">destPixel = 0</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68102[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68102) BKConditional</td></tr>
	<tr><td port="e0" align="left">var tmp = (cast cast cast cast destPixel &amp; 255) != 255</td></tr>
	<tr><td port="e1" align="left">@:cond-branch tmp</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68101[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68101) BKConditional</td></tr>
	<tr><td port="e0" align="left">var tmp = cast cast destPixel != 0</td></tr>
	<tr><td port="e1" align="left">@:cond-branch tmp</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68100[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68100) BKConditional</td></tr>
	<tr><td port="e0" align="left">var tmp = (cast cast cast cast destPixel &amp; 255) == 0</td></tr>
	<tr><td port="e1" align="left">@:cond-branch tmp</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68099[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68099) BKNormal</td></tr>
	<tr><td port="e0" align="left">var premultiplied = premultiplied</td></tr>
	<tr><td port="e1" align="left">@:cond-branch premultiplied</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68098[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68098) BKConditional</td></tr>
	<tr><td port="e0" align="left">format = 0</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68097[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68097) BKNormal</td></tr>
	<tr><td port="e0" align="left">var tmp = format == null</td></tr>
	<tr><td port="e1" align="left">@:cond-branch tmp</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68096[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68096) BKConditional</td></tr>
	<tr><td port="e0" align="left">premultiplied = false</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68095[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68095) BKSub</td></tr>
	<tr><td port="e0" align="left">var format = destFormat</td></tr>
	<tr><td port="e1" align="left">var premultiplied = destPremultiplied</td></tr>
	<tr><td port="e2" align="left">var tmp = premultiplied == null</td></tr>
	<tr><td port="e3" align="left">@:cond-branch tmp</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68094[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68094) BKNormal</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68093[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68093) BKSub</td></tr>
	<tr><td port="e0" align="left">var value = cast lime.math._RGBA.RGBA_Impl_.__clamp</td></tr>
	<tr><td port="e1" align="left">var value = blendAlpha * 255.0</td></tr>
	<tr><td port="e2" align="left">var value = Math.round(value)</td></tr>
	<tr><td port="e3" align="left">var value = cast value[value]</td></tr>
	<tr><td port="e4" align="left">var destPixel = cast cast cast cast cast cast destPixel &gt;&gt;&gt; 24 &amp; 255 &amp; 255</td></tr>
	<tr><td port="e5" align="left">var destPixel = destPixel &lt;&lt; 24</td></tr>
	<tr><td port="e6" align="left">var destPixel = cast cast cast cast cast cast destPixel &gt;&gt;&gt; 16 &amp; 255 &amp; 255</td></tr>
	<tr><td port="e7" align="left">var destPixel = destPixel &lt;&lt; 16</td></tr>
	<tr><td port="e8" align="left">var destPixel = destPixel | destPixel</td></tr>
	<tr><td port="e9" align="left">var destPixel = cast cast cast cast cast cast destPixel &gt;&gt;&gt; 8 &amp; 255 &amp; 255</td></tr>
	<tr><td port="e10" align="left">var destPixel = destPixel &lt;&lt; 8</td></tr>
	<tr><td port="e11" align="left">var destPixel = destPixel | destPixel</td></tr>
	<tr><td port="e12" align="left">var destPixel = value &amp; 255</td></tr>
	<tr><td port="e13" align="left">destPixel = destPixel | destPixel</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68092[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68092) BKNormal</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68091[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68091) BKSub</td></tr>
	<tr><td port="e0" align="left">var value = cast lime.math._RGBA.RGBA_Impl_.__clamp</td></tr>
	<tr><td port="e1" align="left">var value = (cast cast cast cast cast cast sourcePixel &gt;&gt;&gt; 8 &amp; 255) * sourceAlpha</td></tr>
	<tr><td port="e2" align="left">var value = (cast cast cast cast cast cast destPixel &gt;&gt;&gt; 8 &amp; 255) * destAlpha</td></tr>
	<tr><td port="e3" align="left">var value = value * oneMinusSourceAlpha</td></tr>
	<tr><td port="e4" align="left">var value = value + value</td></tr>
	<tr><td port="e5" align="left">var value = value / blendAlpha</td></tr>
	<tr><td port="e6" align="left">var value = Math.round(value)</td></tr>
	<tr><td port="e7" align="left">var value = cast value[value]</td></tr>
	<tr><td port="e8" align="left">var destPixel = cast cast cast cast cast cast destPixel &gt;&gt;&gt; 24 &amp; 255 &amp; 255</td></tr>
	<tr><td port="e9" align="left">var destPixel = destPixel &lt;&lt; 24</td></tr>
	<tr><td port="e10" align="left">var destPixel = cast cast cast cast cast cast destPixel &gt;&gt;&gt; 16 &amp; 255 &amp; 255</td></tr>
	<tr><td port="e11" align="left">var destPixel = destPixel &lt;&lt; 16</td></tr>
	<tr><td port="e12" align="left">var destPixel = destPixel | destPixel</td></tr>
	<tr><td port="e13" align="left">var destPixel = value &amp; 255</td></tr>
	<tr><td port="e14" align="left">var destPixel = destPixel &lt;&lt; 8</td></tr>
	<tr><td port="e15" align="left">var destPixel = destPixel | destPixel</td></tr>
	<tr><td port="e16" align="left">var destPixel = cast cast cast cast destPixel &amp; 255 &amp; 255</td></tr>
	<tr><td port="e17" align="left">destPixel = destPixel | destPixel</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68090[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68090) BKNormal</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68089[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68089) BKSub</td></tr>
	<tr><td port="e0" align="left">var value = cast lime.math._RGBA.RGBA_Impl_.__clamp</td></tr>
	<tr><td port="e1" align="left">var value = (cast cast cast cast cast cast sourcePixel &gt;&gt;&gt; 16 &amp; 255) * sourceAlpha</td></tr>
	<tr><td port="e2" align="left">var value = (cast cast cast cast cast cast destPixel &gt;&gt;&gt; 16 &amp; 255) * destAlpha</td></tr>
	<tr><td port="e3" align="left">var value = value * oneMinusSourceAlpha</td></tr>
	<tr><td port="e4" align="left">var value = value + value</td></tr>
	<tr><td port="e5" align="left">var value = value / blendAlpha</td></tr>
	<tr><td port="e6" align="left">var value = Math.round(value)</td></tr>
	<tr><td port="e7" align="left">var value = cast value[value]</td></tr>
	<tr><td port="e8" align="left">var destPixel = cast cast cast cast cast cast destPixel &gt;&gt;&gt; 24 &amp; 255 &amp; 255</td></tr>
	<tr><td port="e9" align="left">var destPixel = destPixel &lt;&lt; 24</td></tr>
	<tr><td port="e10" align="left">var destPixel = value &amp; 255</td></tr>
	<tr><td port="e11" align="left">var destPixel = destPixel &lt;&lt; 16</td></tr>
	<tr><td port="e12" align="left">var destPixel = destPixel | destPixel</td></tr>
	<tr><td port="e13" align="left">var destPixel = cast cast cast cast cast cast destPixel &gt;&gt;&gt; 8 &amp; 255 &amp; 255</td></tr>
	<tr><td port="e14" align="left">var destPixel = destPixel &lt;&lt; 8</td></tr>
	<tr><td port="e15" align="left">var destPixel = destPixel | destPixel</td></tr>
	<tr><td port="e16" align="left">var destPixel = cast cast cast cast destPixel &amp; 255 &amp; 255</td></tr>
	<tr><td port="e17" align="left">destPixel = destPixel | destPixel</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68088[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68088) BKNormal</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68087[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68087) BKSub</td></tr>
	<tr><td port="e0" align="left">var value = cast lime.math._RGBA.RGBA_Impl_.__clamp</td></tr>
	<tr><td port="e1" align="left">var value = (cast cast cast cast cast cast sourcePixel &gt;&gt;&gt; 24 &amp; 255) * sourceAlpha</td></tr>
	<tr><td port="e2" align="left">var value = (cast cast cast cast cast cast destPixel &gt;&gt;&gt; 24 &amp; 255) * destAlpha</td></tr>
	<tr><td port="e3" align="left">var value = value * oneMinusSourceAlpha</td></tr>
	<tr><td port="e4" align="left">var value = value + value</td></tr>
	<tr><td port="e5" align="left">var value = value / blendAlpha</td></tr>
	<tr><td port="e6" align="left">var value = Math.round(value)</td></tr>
	<tr><td port="e7" align="left">var value = cast value[value]</td></tr>
	<tr><td port="e8" align="left">var destPixel = value &amp; 255</td></tr>
	<tr><td port="e9" align="left">var destPixel = destPixel &lt;&lt; 24</td></tr>
	<tr><td port="e10" align="left">var destPixel = cast cast cast cast cast cast destPixel &gt;&gt;&gt; 16 &amp; 255 &amp; 255</td></tr>
	<tr><td port="e11" align="left">var destPixel = destPixel &lt;&lt; 16</td></tr>
	<tr><td port="e12" align="left">var destPixel = destPixel | destPixel</td></tr>
	<tr><td port="e13" align="left">var destPixel = cast cast cast cast cast cast destPixel &gt;&gt;&gt; 8 &amp; 255 &amp; 255</td></tr>
	<tr><td port="e14" align="left">var destPixel = destPixel &lt;&lt; 8</td></tr>
	<tr><td port="e15" align="left">var destPixel = destPixel | destPixel</td></tr>
	<tr><td port="e16" align="left">var destPixel = cast cast cast cast destPixel &amp; 255 &amp; 255</td></tr>
	<tr><td port="e17" align="left">destPixel = destPixel | destPixel</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68086[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68086) BKConditional</td></tr>
	<tr><td port="e0" align="left">destAlpha = (cast cast cast cast destPixel &amp; 255) / 255.0</td></tr>
	<tr><td port="e1" align="left">oneMinusSourceAlpha = 1 - sourceAlpha</td></tr>
	<tr><td port="e2" align="left">var blendAlpha = destAlpha * oneMinusSourceAlpha</td></tr>
	<tr><td port="e3" align="left">blendAlpha = sourceAlpha + blendAlpha</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68085[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68085) BKNormal</td></tr>
	<tr><td port="e0" align="left">var sourceAlpha = (cast cast cast cast alphaPixel &amp; 255) / 255.0</td></tr>
	<tr><td port="e1" align="left">var sourceAlpha = (cast cast cast cast sourcePixel &amp; 255) / 255.0</td></tr>
	<tr><td port="e2" align="left">sourceAlpha = sourceAlpha * sourceAlpha</td></tr>
	<tr><td port="e3" align="left">var tmp = sourceAlpha &gt; 0</td></tr>
	<tr><td port="e4" align="left">@:cond-branch tmp</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68084[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68084) BKNormal</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68083[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68083) BKNormal</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68082[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68082) BKNormal</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68081[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68081) BKSub</td></tr>
	<tr><td port="e0" align="left">var r = cast lime.math._RGBA.RGBA_Impl_.__clamp</td></tr>
	<tr><td port="e1" align="left">var r = (cast cast cast cast cast cast alphaPixel &gt;&gt;&gt; 24 &amp; 255) * lime.math._RGBA.RGBA_Impl_.unmult</td></tr>
	<tr><td port="e2" align="left">var r = Math.round(r)</td></tr>
	<tr><td port="e3" align="left">var r = cast r[r]</td></tr>
	<tr><td port="e4" align="left">var g = cast lime.math._RGBA.RGBA_Impl_.__clamp</td></tr>
	<tr><td port="e5" align="left">var g = (cast cast cast cast cast cast alphaPixel &gt;&gt;&gt; 16 &amp; 255) * lime.math._RGBA.RGBA_Impl_.unmult</td></tr>
	<tr><td port="e6" align="left">var g = Math.round(g)</td></tr>
	<tr><td port="e7" align="left">var g = cast g[g]</td></tr>
	<tr><td port="e8" align="left">var b = cast lime.math._RGBA.RGBA_Impl_.__clamp</td></tr>
	<tr><td port="e9" align="left">var b = (cast cast cast cast cast cast alphaPixel &gt;&gt;&gt; 8 &amp; 255) * lime.math._RGBA.RGBA_Impl_.unmult</td></tr>
	<tr><td port="e10" align="left">var b = Math.round(b)</td></tr>
	<tr><td port="e11" align="left">var b = cast b[b]</td></tr>
	<tr><td port="e12" align="left">var alphaPixel = r &amp; 255</td></tr>
	<tr><td port="e13" align="left">var alphaPixel = alphaPixel &lt;&lt; 24</td></tr>
	<tr><td port="e14" align="left">var alphaPixel = g &amp; 255</td></tr>
	<tr><td port="e15" align="left">var alphaPixel = alphaPixel &lt;&lt; 16</td></tr>
	<tr><td port="e16" align="left">var alphaPixel = alphaPixel | alphaPixel</td></tr>
	<tr><td port="e17" align="left">var alphaPixel = b &amp; 255</td></tr>
	<tr><td port="e18" align="left">var alphaPixel = alphaPixel &lt;&lt; 8</td></tr>
	<tr><td port="e19" align="left">var alphaPixel = alphaPixel | alphaPixel</td></tr>
	<tr><td port="e20" align="left">var alphaPixel = cast cast cast cast alphaPixel &amp; 255 &amp; 255</td></tr>
	<tr><td port="e21" align="left">alphaPixel = alphaPixel | alphaPixel</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68080[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68080) BKConditional</td></tr>
	<tr><td port="e0" align="left">lime.math._RGBA.RGBA_Impl_.unmult = 255.0 / (cast cast cast cast alphaPixel &amp; 255)</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68079[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68079) BKNormal</td></tr>
	<tr><td port="e0" align="left">@:cond-branch tmp</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68078[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68078) BKConditional</td></tr>
	<tr><td port="e0" align="left">tmp = false</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68077[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68077) BKConditional</td></tr>
	<tr><td port="e0" align="left">tmp = (cast cast cast cast alphaPixel &amp; 255) != 255</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68076[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68076) BKConditional</td></tr>
	<tr><td port="e0" align="left">var tmp</td></tr>
	<tr><td port="e1" align="left">var tmp = (cast cast cast cast alphaPixel &amp; 255) != 0</td></tr>
	<tr><td port="e2" align="left">@:cond-branch tmp</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68075[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68075) BKNormal</td></tr>
	<tr><td port="e0" align="left">var premultiplied = premultiplied</td></tr>
	<tr><td port="e1" align="left">@:cond-branch premultiplied</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68074[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68074) BKConditional</td></tr>
	<tr><td port="e0" align="left">var alphaPixel = alphaPosition + 2</td></tr>
	<tr><td port="e1" align="left">var alphaPixel = cast cast alphaData[alphaPixel] &amp; 255</td></tr>
	<tr><td port="e2" align="left">var alphaPixel = alphaPixel &lt;&lt; 24</td></tr>
	<tr><td port="e3" align="left">var alphaPixel = alphaPosition + 1</td></tr>
	<tr><td port="e4" align="left">var alphaPixel = cast cast alphaData[alphaPixel] &amp; 255</td></tr>
	<tr><td port="e5" align="left">var alphaPixel = alphaPixel &lt;&lt; 16</td></tr>
	<tr><td port="e6" align="left">var alphaPixel = alphaPixel | alphaPixel</td></tr>
	<tr><td port="e7" align="left">var alphaPixel = cast cast alphaData[alphaPosition] &amp; 255</td></tr>
	<tr><td port="e8" align="left">var alphaPixel = alphaPixel &lt;&lt; 8</td></tr>
	<tr><td port="e9" align="left">var alphaPixel = alphaPixel | alphaPixel</td></tr>
	<tr><td port="e10" align="left">var alphaPixel = alphaPosition + 3</td></tr>
	<tr><td port="e11" align="left">var alphaPixel = cast cast alphaData[alphaPixel] &amp; 255</td></tr>
	<tr><td port="e12" align="left">alphaPixel = alphaPixel | alphaPixel</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68073[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68073) BKConditional</td></tr>
	<tr><td port="e0" align="left">var alphaPixel = alphaPosition + 1</td></tr>
	<tr><td port="e1" align="left">var alphaPixel = cast cast alphaData[alphaPixel] &amp; 255</td></tr>
	<tr><td port="e2" align="left">var alphaPixel = alphaPixel &lt;&lt; 24</td></tr>
	<tr><td port="e3" align="left">var alphaPixel = alphaPosition + 2</td></tr>
	<tr><td port="e4" align="left">var alphaPixel = cast cast alphaData[alphaPixel] &amp; 255</td></tr>
	<tr><td port="e5" align="left">var alphaPixel = alphaPixel &lt;&lt; 16</td></tr>
	<tr><td port="e6" align="left">var alphaPixel = alphaPixel | alphaPixel</td></tr>
	<tr><td port="e7" align="left">var alphaPixel = alphaPosition + 3</td></tr>
	<tr><td port="e8" align="left">var alphaPixel = cast cast alphaData[alphaPixel] &amp; 255</td></tr>
	<tr><td port="e9" align="left">var alphaPixel = alphaPixel &lt;&lt; 8</td></tr>
	<tr><td port="e10" align="left">var alphaPixel = alphaPixel | alphaPixel</td></tr>
	<tr><td port="e11" align="left">var alphaPixel = cast cast alphaData[alphaPosition] &amp; 255</td></tr>
	<tr><td port="e12" align="left">alphaPixel = alphaPixel | alphaPixel</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68072[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68072) BKConditional</td></tr>
	<tr><td port="e0" align="left">var alphaPixel = cast cast alphaData[alphaPosition] &amp; 255</td></tr>
	<tr><td port="e1" align="left">var alphaPixel = alphaPixel &lt;&lt; 24</td></tr>
	<tr><td port="e2" align="left">var alphaPixel = alphaPosition + 1</td></tr>
	<tr><td port="e3" align="left">var alphaPixel = cast cast alphaData[alphaPixel] &amp; 255</td></tr>
	<tr><td port="e4" align="left">var alphaPixel = alphaPixel &lt;&lt; 16</td></tr>
	<tr><td port="e5" align="left">var alphaPixel = alphaPixel | alphaPixel</td></tr>
	<tr><td port="e6" align="left">var alphaPixel = alphaPosition + 2</td></tr>
	<tr><td port="e7" align="left">var alphaPixel = cast cast alphaData[alphaPixel] &amp; 255</td></tr>
	<tr><td port="e8" align="left">var alphaPixel = alphaPixel &lt;&lt; 8</td></tr>
	<tr><td port="e9" align="left">var alphaPixel = alphaPixel | alphaPixel</td></tr>
	<tr><td port="e10" align="left">var alphaPixel = alphaPosition + 3</td></tr>
	<tr><td port="e11" align="left">var alphaPixel = cast cast alphaData[alphaPixel] &amp; 255</td></tr>
	<tr><td port="e12" align="left">alphaPixel = alphaPixel | alphaPixel</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68071[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68071) BKNormal</td></tr>
	<tr><td port="e0" align="left">var format = @:exhaustive format</td></tr>
	<tr><td port="e1" align="left">@:cond-branch format</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68070[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68070) BKConditional</td></tr>
	<tr><td port="e0" align="left">format = 0</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68069[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68069) BKNormal</td></tr>
	<tr><td port="e0" align="left">var tmp = format == null</td></tr>
	<tr><td port="e1" align="left">@:cond-branch tmp</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68068[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68068) BKConditional</td></tr>
	<tr><td port="e0" align="left">premultiplied = false</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68067[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68067) BKSub</td></tr>
	<tr><td port="e0" align="left">var format = alphaFormat</td></tr>
	<tr><td port="e1" align="left">var premultiplied = false</td></tr>
	<tr><td port="e2" align="left">var tmp = premultiplied == null</td></tr>
	<tr><td port="e3" align="left">@:cond-branch tmp</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68066[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68066) BKNormal</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68065[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68065) BKNormal</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68064[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68064) BKNormal</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68063[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68063) BKNormal</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68062[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68062) BKSub</td></tr>
	<tr><td port="e0" align="left">var r = cast lime.math._RGBA.RGBA_Impl_.__clamp</td></tr>
	<tr><td port="e1" align="left">var r = (cast cast cast cast cast cast destPixel &gt;&gt;&gt; 24 &amp; 255) * lime.math._RGBA.RGBA_Impl_.unmult</td></tr>
	<tr><td port="e2" align="left">var r = Math.round(r)</td></tr>
	<tr><td port="e3" align="left">var r = cast r[r]</td></tr>
	<tr><td port="e4" align="left">var g = cast lime.math._RGBA.RGBA_Impl_.__clamp</td></tr>
	<tr><td port="e5" align="left">var g = (cast cast cast cast cast cast destPixel &gt;&gt;&gt; 16 &amp; 255) * lime.math._RGBA.RGBA_Impl_.unmult</td></tr>
	<tr><td port="e6" align="left">var g = Math.round(g)</td></tr>
	<tr><td port="e7" align="left">var g = cast g[g]</td></tr>
	<tr><td port="e8" align="left">var b = cast lime.math._RGBA.RGBA_Impl_.__clamp</td></tr>
	<tr><td port="e9" align="left">var b = (cast cast cast cast cast cast destPixel &gt;&gt;&gt; 8 &amp; 255) * lime.math._RGBA.RGBA_Impl_.unmult</td></tr>
	<tr><td port="e10" align="left">var b = Math.round(b)</td></tr>
	<tr><td port="e11" align="left">var b = cast b[b]</td></tr>
	<tr><td port="e12" align="left">var destPixel = r &amp; 255</td></tr>
	<tr><td port="e13" align="left">var destPixel = destPixel &lt;&lt; 24</td></tr>
	<tr><td port="e14" align="left">var destPixel = g &amp; 255</td></tr>
	<tr><td port="e15" align="left">var destPixel = destPixel &lt;&lt; 16</td></tr>
	<tr><td port="e16" align="left">var destPixel = destPixel | destPixel</td></tr>
	<tr><td port="e17" align="left">var destPixel = b &amp; 255</td></tr>
	<tr><td port="e18" align="left">var destPixel = destPixel &lt;&lt; 8</td></tr>
	<tr><td port="e19" align="left">var destPixel = destPixel | destPixel</td></tr>
	<tr><td port="e20" align="left">var destPixel = cast cast cast cast destPixel &amp; 255 &amp; 255</td></tr>
	<tr><td port="e21" align="left">destPixel = destPixel | destPixel</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68061[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68061) BKConditional</td></tr>
	<tr><td port="e0" align="left">lime.math._RGBA.RGBA_Impl_.unmult = 255.0 / (cast cast cast cast destPixel &amp; 255)</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68060[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68060) BKNormal</td></tr>
	<tr><td port="e0" align="left">@:cond-branch tmp</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68059[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68059) BKConditional</td></tr>
	<tr><td port="e0" align="left">tmp = false</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68058[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68058) BKConditional</td></tr>
	<tr><td port="e0" align="left">tmp = (cast cast cast cast destPixel &amp; 255) != 255</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68057[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68057) BKConditional</td></tr>
	<tr><td port="e0" align="left">var tmp</td></tr>
	<tr><td port="e1" align="left">var tmp = (cast cast cast cast destPixel &amp; 255) != 0</td></tr>
	<tr><td port="e2" align="left">@:cond-branch tmp</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68056[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68056) BKNormal</td></tr>
	<tr><td port="e0" align="left">var premultiplied = premultiplied</td></tr>
	<tr><td port="e1" align="left">@:cond-branch premultiplied</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68055[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68055) BKConditional</td></tr>
	<tr><td port="e0" align="left">var destPixel = destPosition + 2</td></tr>
	<tr><td port="e1" align="left">var destPixel = cast cast destData[destPixel] &amp; 255</td></tr>
	<tr><td port="e2" align="left">var destPixel = destPixel &lt;&lt; 24</td></tr>
	<tr><td port="e3" align="left">var destPixel = destPosition + 1</td></tr>
	<tr><td port="e4" align="left">var destPixel = cast cast destData[destPixel] &amp; 255</td></tr>
	<tr><td port="e5" align="left">var destPixel = destPixel &lt;&lt; 16</td></tr>
	<tr><td port="e6" align="left">var destPixel = destPixel | destPixel</td></tr>
	<tr><td port="e7" align="left">var destPixel = cast cast destData[destPosition] &amp; 255</td></tr>
	<tr><td port="e8" align="left">var destPixel = destPixel &lt;&lt; 8</td></tr>
	<tr><td port="e9" align="left">var destPixel = destPixel | destPixel</td></tr>
	<tr><td port="e10" align="left">var destPixel = destPosition + 3</td></tr>
	<tr><td port="e11" align="left">var destPixel = cast cast destData[destPixel] &amp; 255</td></tr>
	<tr><td port="e12" align="left">destPixel = destPixel | destPixel</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68054[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68054) BKConditional</td></tr>
	<tr><td port="e0" align="left">var destPixel = destPosition + 1</td></tr>
	<tr><td port="e1" align="left">var destPixel = cast cast destData[destPixel] &amp; 255</td></tr>
	<tr><td port="e2" align="left">var destPixel = destPixel &lt;&lt; 24</td></tr>
	<tr><td port="e3" align="left">var destPixel = destPosition + 2</td></tr>
	<tr><td port="e4" align="left">var destPixel = cast cast destData[destPixel] &amp; 255</td></tr>
	<tr><td port="e5" align="left">var destPixel = destPixel &lt;&lt; 16</td></tr>
	<tr><td port="e6" align="left">var destPixel = destPixel | destPixel</td></tr>
	<tr><td port="e7" align="left">var destPixel = destPosition + 3</td></tr>
	<tr><td port="e8" align="left">var destPixel = cast cast destData[destPixel] &amp; 255</td></tr>
	<tr><td port="e9" align="left">var destPixel = destPixel &lt;&lt; 8</td></tr>
	<tr><td port="e10" align="left">var destPixel = destPixel | destPixel</td></tr>
	<tr><td port="e11" align="left">var destPixel = cast cast destData[destPosition] &amp; 255</td></tr>
	<tr><td port="e12" align="left">destPixel = destPixel | destPixel</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68053[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68053) BKConditional</td></tr>
	<tr><td port="e0" align="left">var destPixel = cast cast destData[destPosition] &amp; 255</td></tr>
	<tr><td port="e1" align="left">var destPixel = destPixel &lt;&lt; 24</td></tr>
	<tr><td port="e2" align="left">var destPixel = destPosition + 1</td></tr>
	<tr><td port="e3" align="left">var destPixel = cast cast destData[destPixel] &amp; 255</td></tr>
	<tr><td port="e4" align="left">var destPixel = destPixel &lt;&lt; 16</td></tr>
	<tr><td port="e5" align="left">var destPixel = destPixel | destPixel</td></tr>
	<tr><td port="e6" align="left">var destPixel = destPosition + 2</td></tr>
	<tr><td port="e7" align="left">var destPixel = cast cast destData[destPixel] &amp; 255</td></tr>
	<tr><td port="e8" align="left">var destPixel = destPixel &lt;&lt; 8</td></tr>
	<tr><td port="e9" align="left">var destPixel = destPixel | destPixel</td></tr>
	<tr><td port="e10" align="left">var destPixel = destPosition + 3</td></tr>
	<tr><td port="e11" align="left">var destPixel = cast cast destData[destPixel] &amp; 255</td></tr>
	<tr><td port="e12" align="left">destPixel = destPixel | destPixel</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68052[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68052) BKNormal</td></tr>
	<tr><td port="e0" align="left">var format = @:exhaustive format</td></tr>
	<tr><td port="e1" align="left">@:cond-branch format</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68051[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68051) BKConditional</td></tr>
	<tr><td port="e0" align="left">format = 0</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68050[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68050) BKNormal</td></tr>
	<tr><td port="e0" align="left">var tmp = format == null</td></tr>
	<tr><td port="e1" align="left">@:cond-branch tmp</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68049[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68049) BKConditional</td></tr>
	<tr><td port="e0" align="left">premultiplied = false</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68048[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68048) BKSub</td></tr>
	<tr><td port="e0" align="left">var format = destFormat</td></tr>
	<tr><td port="e1" align="left">var premultiplied = destPremultiplied</td></tr>
	<tr><td port="e2" align="left">var tmp = premultiplied == null</td></tr>
	<tr><td port="e3" align="left">@:cond-branch tmp</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68047[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68047) BKNormal</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68046[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68046) BKNormal</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68045[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68045) BKNormal</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68044[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68044) BKNormal</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68043[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68043) BKSub</td></tr>
	<tr><td port="e0" align="left">var r = cast lime.math._RGBA.RGBA_Impl_.__clamp</td></tr>
	<tr><td port="e1" align="left">var r = (cast cast cast cast cast cast sourcePixel &gt;&gt;&gt; 24 &amp; 255) * lime.math._RGBA.RGBA_Impl_.unmult</td></tr>
	<tr><td port="e2" align="left">var r = Math.round(r)</td></tr>
	<tr><td port="e3" align="left">var r = cast r[r]</td></tr>
	<tr><td port="e4" align="left">var g = cast lime.math._RGBA.RGBA_Impl_.__clamp</td></tr>
	<tr><td port="e5" align="left">var g = (cast cast cast cast cast cast sourcePixel &gt;&gt;&gt; 16 &amp; 255) * lime.math._RGBA.RGBA_Impl_.unmult</td></tr>
	<tr><td port="e6" align="left">var g = Math.round(g)</td></tr>
	<tr><td port="e7" align="left">var g = cast g[g]</td></tr>
	<tr><td port="e8" align="left">var b = cast lime.math._RGBA.RGBA_Impl_.__clamp</td></tr>
	<tr><td port="e9" align="left">var b = (cast cast cast cast cast cast sourcePixel &gt;&gt;&gt; 8 &amp; 255) * lime.math._RGBA.RGBA_Impl_.unmult</td></tr>
	<tr><td port="e10" align="left">var b = Math.round(b)</td></tr>
	<tr><td port="e11" align="left">var b = cast b[b]</td></tr>
	<tr><td port="e12" align="left">var sourcePixel = r &amp; 255</td></tr>
	<tr><td port="e13" align="left">var sourcePixel = sourcePixel &lt;&lt; 24</td></tr>
	<tr><td port="e14" align="left">var sourcePixel = g &amp; 255</td></tr>
	<tr><td port="e15" align="left">var sourcePixel = sourcePixel &lt;&lt; 16</td></tr>
	<tr><td port="e16" align="left">var sourcePixel = sourcePixel | sourcePixel</td></tr>
	<tr><td port="e17" align="left">var sourcePixel = b &amp; 255</td></tr>
	<tr><td port="e18" align="left">var sourcePixel = sourcePixel &lt;&lt; 8</td></tr>
	<tr><td port="e19" align="left">var sourcePixel = sourcePixel | sourcePixel</td></tr>
	<tr><td port="e20" align="left">var sourcePixel = cast cast cast cast sourcePixel &amp; 255 &amp; 255</td></tr>
	<tr><td port="e21" align="left">sourcePixel = sourcePixel | sourcePixel</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68042[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68042) BKConditional</td></tr>
	<tr><td port="e0" align="left">lime.math._RGBA.RGBA_Impl_.unmult = 255.0 / (cast cast cast cast sourcePixel &amp; 255)</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68041[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68041) BKNormal</td></tr>
	<tr><td port="e0" align="left">@:cond-branch tmp</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68040[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68040) BKConditional</td></tr>
	<tr><td port="e0" align="left">tmp = false</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68039[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68039) BKConditional</td></tr>
	<tr><td port="e0" align="left">tmp = (cast cast cast cast sourcePixel &amp; 255) != 255</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68038[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68038) BKConditional</td></tr>
	<tr><td port="e0" align="left">var tmp</td></tr>
	<tr><td port="e1" align="left">var tmp = (cast cast cast cast sourcePixel &amp; 255) != 0</td></tr>
	<tr><td port="e2" align="left">@:cond-branch tmp</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68037[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68037) BKNormal</td></tr>
	<tr><td port="e0" align="left">var premultiplied = premultiplied</td></tr>
	<tr><td port="e1" align="left">@:cond-branch premultiplied</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68036[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68036) BKConditional</td></tr>
	<tr><td port="e0" align="left">var sourcePixel = sourcePosition + 2</td></tr>
	<tr><td port="e1" align="left">var sourcePixel = cast cast sourceData[sourcePixel] &amp; 255</td></tr>
	<tr><td port="e2" align="left">var sourcePixel = sourcePixel &lt;&lt; 24</td></tr>
	<tr><td port="e3" align="left">var sourcePixel = sourcePosition + 1</td></tr>
	<tr><td port="e4" align="left">var sourcePixel = cast cast sourceData[sourcePixel] &amp; 255</td></tr>
	<tr><td port="e5" align="left">var sourcePixel = sourcePixel &lt;&lt; 16</td></tr>
	<tr><td port="e6" align="left">var sourcePixel = sourcePixel | sourcePixel</td></tr>
	<tr><td port="e7" align="left">var sourcePixel = cast cast sourceData[sourcePosition] &amp; 255</td></tr>
	<tr><td port="e8" align="left">var sourcePixel = sourcePixel &lt;&lt; 8</td></tr>
	<tr><td port="e9" align="left">var sourcePixel = sourcePixel | sourcePixel</td></tr>
	<tr><td port="e10" align="left">var sourcePixel = sourcePosition + 3</td></tr>
	<tr><td port="e11" align="left">var sourcePixel = cast cast sourceData[sourcePixel] &amp; 255</td></tr>
	<tr><td port="e12" align="left">sourcePixel = sourcePixel | sourcePixel</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68035[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68035) BKConditional</td></tr>
	<tr><td port="e0" align="left">var sourcePixel = sourcePosition + 1</td></tr>
	<tr><td port="e1" align="left">var sourcePixel = cast cast sourceData[sourcePixel] &amp; 255</td></tr>
	<tr><td port="e2" align="left">var sourcePixel = sourcePixel &lt;&lt; 24</td></tr>
	<tr><td port="e3" align="left">var sourcePixel = sourcePosition + 2</td></tr>
	<tr><td port="e4" align="left">var sourcePixel = cast cast sourceData[sourcePixel] &amp; 255</td></tr>
	<tr><td port="e5" align="left">var sourcePixel = sourcePixel &lt;&lt; 16</td></tr>
	<tr><td port="e6" align="left">var sourcePixel = sourcePixel | sourcePixel</td></tr>
	<tr><td port="e7" align="left">var sourcePixel = sourcePosition + 3</td></tr>
	<tr><td port="e8" align="left">var sourcePixel = cast cast sourceData[sourcePixel] &amp; 255</td></tr>
	<tr><td port="e9" align="left">var sourcePixel = sourcePixel &lt;&lt; 8</td></tr>
	<tr><td port="e10" align="left">var sourcePixel = sourcePixel | sourcePixel</td></tr>
	<tr><td port="e11" align="left">var sourcePixel = cast cast sourceData[sourcePosition] &amp; 255</td></tr>
	<tr><td port="e12" align="left">sourcePixel = sourcePixel | sourcePixel</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68034[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68034) BKConditional</td></tr>
	<tr><td port="e0" align="left">var sourcePixel = cast cast sourceData[sourcePosition] &amp; 255</td></tr>
	<tr><td port="e1" align="left">var sourcePixel = sourcePixel &lt;&lt; 24</td></tr>
	<tr><td port="e2" align="left">var sourcePixel = sourcePosition + 1</td></tr>
	<tr><td port="e3" align="left">var sourcePixel = cast cast sourceData[sourcePixel] &amp; 255</td></tr>
	<tr><td port="e4" align="left">var sourcePixel = sourcePixel &lt;&lt; 16</td></tr>
	<tr><td port="e5" align="left">var sourcePixel = sourcePixel | sourcePixel</td></tr>
	<tr><td port="e6" align="left">var sourcePixel = sourcePosition + 2</td></tr>
	<tr><td port="e7" align="left">var sourcePixel = cast cast sourceData[sourcePixel] &amp; 255</td></tr>
	<tr><td port="e8" align="left">var sourcePixel = sourcePixel &lt;&lt; 8</td></tr>
	<tr><td port="e9" align="left">var sourcePixel = sourcePixel | sourcePixel</td></tr>
	<tr><td port="e10" align="left">var sourcePixel = sourcePosition + 3</td></tr>
	<tr><td port="e11" align="left">var sourcePixel = cast cast sourceData[sourcePixel] &amp; 255</td></tr>
	<tr><td port="e12" align="left">sourcePixel = sourcePixel | sourcePixel</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68033[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68033) BKNormal</td></tr>
	<tr><td port="e0" align="left">var format = @:exhaustive format</td></tr>
	<tr><td port="e1" align="left">@:cond-branch format</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68032[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68032) BKConditional</td></tr>
	<tr><td port="e0" align="left">format = 0</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68031[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68031) BKNormal</td></tr>
	<tr><td port="e0" align="left">var tmp = format == null</td></tr>
	<tr><td port="e1" align="left">@:cond-branch tmp</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68030[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68030) BKConditional</td></tr>
	<tr><td port="e0" align="left">premultiplied = false</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68029[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68029) BKSub</td></tr>
	<tr><td port="e0" align="left">var format = sourceFormat</td></tr>
	<tr><td port="e1" align="left">var premultiplied = sourcePremultiplied</td></tr>
	<tr><td port="e2" align="left">var tmp = premultiplied == null</td></tr>
	<tr><td port="e3" align="left">@:cond-branch tmp</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68028[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68028) BKNormal</td></tr>
	<tr><td port="e0" align="left">` = ` + 1</td></tr>
	<tr><td port="e1" align="left">var x = ` - 1</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68027[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68027) BKConditional</td></tr>
	<tr><td port="e0" align="left">break</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68026[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68026) BKNormal</td></tr>
	<tr><td port="e0" align="left">var tmp = ! ((` &lt; `1))</td></tr>
	<tr><td port="e1" align="left">@:cond-branch tmp</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68025[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68025) BKLoopHead</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68024[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68024) BKNormal</td></tr>
	<tr><td port="e0" align="left">while ((true)) @:block 68026</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68023[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68023) BKSub</td></tr>
	<tr><td port="e0" align="left">var ` = 0</td></tr>
	<tr><td port="e1" align="left">var `1 = destView.width</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68022[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68022) BKNormal</td></tr>
	<tr><td port="e0" align="left">` = ` + 1</td></tr>
	<tr><td port="e1" align="left">var y = ` - 1</td></tr>
	<tr><td port="e2" align="left">var sourceView = sourceView.byteOffset</td></tr>
	<tr><td port="e3" align="left">var sourcePosition = sourceView.stride * y</td></tr>
	<tr><td port="e4" align="left">sourcePosition = sourceView + sourcePosition</td></tr>
	<tr><td port="e5" align="left">var destView = destView.byteOffset</td></tr>
	<tr><td port="e6" align="left">var destPosition = destView.stride * y</td></tr>
	<tr><td port="e7" align="left">destPosition = destView + destPosition</td></tr>
	<tr><td port="e8" align="left">var alphaView = alphaView.byteOffset</td></tr>
	<tr><td port="e9" align="left">var alphaPosition = alphaView.stride * y</td></tr>
	<tr><td port="e10" align="left">alphaPosition = alphaView + alphaPosition</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68021[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68021) BKConditional</td></tr>
	<tr><td port="e0" align="left">break</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68020[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68020) BKNormal</td></tr>
	<tr><td port="e0" align="left">var tmp = ! ((` &lt; `1))</td></tr>
	<tr><td port="e1" align="left">@:cond-branch tmp</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68019[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68019) BKLoopHead</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68018[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68018) BKNormal</td></tr>
	<tr><td port="e0" align="left">while ((true)) @:block 68020</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68017[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68017) BKConditional</td></tr>
	<tr><td port="e0" align="left">var ` = 0</td></tr>
	<tr><td port="e1" align="left">var `1 = destView.height</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68016[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68016) BKConditional</td></tr>
	<tr><td port="e0" align="left">var ` = 0</td></tr>
	<tr><td port="e1" align="left">var `1 = destView.height</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68015[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68015) BKNormal</td></tr>
	<tr><td port="e0" align="left">var alphaView = sourceView.y + (alphaView)</td></tr>
	<tr><td port="e1" align="left">var alphaView = new lime._internal.graphics._ImageDataUtil.ImageDataView(alphaImage, new lime.math.Rectangle(alphaView, alphaView, sourceView.width, sourceView.height))</td></tr>
	<tr><td port="e2" align="left">var tmp = cast destPoint.x | 0</td></tr>
	<tr><td port="e3" align="left">var tmp = cast destPoint.y | 0</td></tr>
	<tr><td port="e4" align="left">destView.clip(tmp, tmp, alphaView.width, alphaView.height)</td></tr>
	<tr><td port="e5" align="left">var blend = blend</td></tr>
	<tr><td port="e6" align="left">@:cond-branch blend</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68014[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68014) BKConditional</td></tr>
	<tr><td port="e0" align="left">alphaView = alphaPoint.y</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68013[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68013) BKConditional</td></tr>
	<tr><td port="e0" align="left">alphaView = 0</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68012[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68012) BKNormal</td></tr>
	<tr><td port="e0" align="left">var alphaView = sourceView.x + (alphaView)</td></tr>
	<tr><td port="e1" align="left">var alphaView</td></tr>
	<tr><td port="e2" align="left">var alphaView = alphaPoint == null</td></tr>
	<tr><td port="e3" align="left">@:cond-branch alphaView</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68011[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68011) BKConditional</td></tr>
	<tr><td port="e0" align="left">alphaView = alphaPoint.x</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68010[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68010) BKConditional</td></tr>
	<tr><td port="e0" align="left">alphaView = 0</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68009[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68009) BKNormal</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68008[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68008) BKNormal</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68007[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68007) BKNormal</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68006[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68006) BKNormal</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68005[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68005) BKNormal</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68004[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68004) BKNormal</td></tr>
	<tr><td port="e0" align="left">sourcePosition = sourcePosition + 4</td></tr>
	<tr><td port="e1" align="left">destPosition = destPosition + 4</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68003[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68003) BKNormal</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68002[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68002) BKConditional</td></tr>
	<tr><td port="e0" align="left">cast destData[destPosition] = cast cast cast cast cast cast sourcePixel &gt;&gt;&gt; 8 &amp; 255</td></tr>
	<tr><td port="e1" align="left">var tmp = destPosition + 1</td></tr>
	<tr><td port="e2" align="left">cast destData[tmp] = cast cast cast cast cast cast sourcePixel &gt;&gt;&gt; 16 &amp; 255</td></tr>
	<tr><td port="e3" align="left">var tmp = destPosition + 2</td></tr>
	<tr><td port="e4" align="left">cast destData[tmp] = cast cast cast cast cast cast sourcePixel &gt;&gt;&gt; 24 &amp; 255</td></tr>
	<tr><td port="e5" align="left">var tmp = destPosition + 3</td></tr>
	<tr><td port="e6" align="left">cast destData[tmp] = cast cast cast cast sourcePixel &amp; 255</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68001[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68001) BKConditional</td></tr>
	<tr><td port="e0" align="left">cast destData[destPosition] = cast cast cast cast sourcePixel &amp; 255</td></tr>
	<tr><td port="e1" align="left">var tmp = destPosition + 1</td></tr>
	<tr><td port="e2" align="left">cast destData[tmp] = cast cast cast cast cast cast sourcePixel &gt;&gt;&gt; 24 &amp; 255</td></tr>
	<tr><td port="e3" align="left">var tmp = destPosition + 2</td></tr>
	<tr><td port="e4" align="left">cast destData[tmp] = cast cast cast cast cast cast sourcePixel &gt;&gt;&gt; 16 &amp; 255</td></tr>
	<tr><td port="e5" align="left">var tmp = destPosition + 3</td></tr>
	<tr><td port="e6" align="left">cast destData[tmp] = cast cast cast cast cast cast sourcePixel &gt;&gt;&gt; 8 &amp; 255</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n68000[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(68000) BKConditional</td></tr>
	<tr><td port="e0" align="left">cast destData[destPosition] = cast cast cast cast cast cast sourcePixel &gt;&gt;&gt; 24 &amp; 255</td></tr>
	<tr><td port="e1" align="left">var tmp = destPosition + 1</td></tr>
	<tr><td port="e2" align="left">cast destData[tmp] = cast cast cast cast cast cast sourcePixel &gt;&gt;&gt; 16 &amp; 255</td></tr>
	<tr><td port="e3" align="left">var tmp = destPosition + 2</td></tr>
	<tr><td port="e4" align="left">cast destData[tmp] = cast cast cast cast cast cast sourcePixel &gt;&gt;&gt; 8 &amp; 255</td></tr>
	<tr><td port="e5" align="left">var tmp = destPosition + 3</td></tr>
	<tr><td port="e6" align="left">cast destData[tmp] = cast cast cast cast sourcePixel &amp; 255</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67999[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67999) BKNormal</td></tr>
	<tr><td port="e0" align="left">var format = @:exhaustive format</td></tr>
	<tr><td port="e1" align="left">@:cond-branch format</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67998[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67998) BKNormal</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67997[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67997) BKNormal</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67996[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67996) BKNormal</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67995[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67995) BKSub</td></tr>
	<tr><td port="e0" align="left">var r = (cast cast cast cast cast cast sourcePixel &gt;&gt;&gt; 24 &amp; 255) * lime.math._RGBA.RGBA_Impl_.a16</td></tr>
	<tr><td port="e1" align="left">var r = r &gt;&gt; 16</td></tr>
	<tr><td port="e2" align="left">var g = (cast cast cast cast cast cast sourcePixel &gt;&gt;&gt; 16 &amp; 255) * lime.math._RGBA.RGBA_Impl_.a16</td></tr>
	<tr><td port="e3" align="left">var g = g &gt;&gt; 16</td></tr>
	<tr><td port="e4" align="left">var b = (cast cast cast cast cast cast sourcePixel &gt;&gt;&gt; 8 &amp; 255) * lime.math._RGBA.RGBA_Impl_.a16</td></tr>
	<tr><td port="e5" align="left">var b = b &gt;&gt; 16</td></tr>
	<tr><td port="e6" align="left">var sourcePixel = r &amp; 255</td></tr>
	<tr><td port="e7" align="left">var sourcePixel = sourcePixel &lt;&lt; 24</td></tr>
	<tr><td port="e8" align="left">var sourcePixel = g &amp; 255</td></tr>
	<tr><td port="e9" align="left">var sourcePixel = sourcePixel &lt;&lt; 16</td></tr>
	<tr><td port="e10" align="left">var sourcePixel = sourcePixel | sourcePixel</td></tr>
	<tr><td port="e11" align="left">var sourcePixel = b &amp; 255</td></tr>
	<tr><td port="e12" align="left">var sourcePixel = sourcePixel &lt;&lt; 8</td></tr>
	<tr><td port="e13" align="left">var sourcePixel = sourcePixel | sourcePixel</td></tr>
	<tr><td port="e14" align="left">var sourcePixel = cast cast cast cast sourcePixel &amp; 255 &amp; 255</td></tr>
	<tr><td port="e15" align="left">sourcePixel = sourcePixel | sourcePixel</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67994[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67994) BKConditional</td></tr>
	<tr><td port="e0" align="left">lime.math._RGBA.RGBA_Impl_.a16 = cast cast lime.math._RGBA.RGBA_Impl_.__alpha16[cast cast cast cast sourcePixel &amp; 255]</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67993[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67993) BKNormal</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67992[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67992) BKConditional</td></tr>
	<tr><td port="e0" align="left">sourcePixel = 0</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67991[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67991) BKConditional</td></tr>
	<tr><td port="e0" align="left">var tmp = (cast cast cast cast sourcePixel &amp; 255) != 255</td></tr>
	<tr><td port="e1" align="left">@:cond-branch tmp</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67990[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67990) BKConditional</td></tr>
	<tr><td port="e0" align="left">var tmp = cast cast sourcePixel != 0</td></tr>
	<tr><td port="e1" align="left">@:cond-branch tmp</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67989[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67989) BKConditional</td></tr>
	<tr><td port="e0" align="left">var tmp = (cast cast cast cast sourcePixel &amp; 255) == 0</td></tr>
	<tr><td port="e1" align="left">@:cond-branch tmp</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67988[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67988) BKNormal</td></tr>
	<tr><td port="e0" align="left">var premultiplied = premultiplied</td></tr>
	<tr><td port="e1" align="left">@:cond-branch premultiplied</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67987[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67987) BKConditional</td></tr>
	<tr><td port="e0" align="left">format = 0</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67986[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67986) BKNormal</td></tr>
	<tr><td port="e0" align="left">var tmp = format == null</td></tr>
	<tr><td port="e1" align="left">@:cond-branch tmp</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67985[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67985) BKConditional</td></tr>
	<tr><td port="e0" align="left">premultiplied = false</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67984[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67984) BKSub</td></tr>
	<tr><td port="e0" align="left">var format = destFormat</td></tr>
	<tr><td port="e1" align="left">var premultiplied = destPremultiplied</td></tr>
	<tr><td port="e2" align="left">var tmp = premultiplied == null</td></tr>
	<tr><td port="e3" align="left">@:cond-branch tmp</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67983[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67983) BKNormal</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67982[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67982) BKNormal</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67981[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67981) BKNormal</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67980[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67980) BKNormal</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67979[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67979) BKSub</td></tr>
	<tr><td port="e0" align="left">var r = cast lime.math._RGBA.RGBA_Impl_.__clamp</td></tr>
	<tr><td port="e1" align="left">var r = (cast cast cast cast cast cast sourcePixel &gt;&gt;&gt; 24 &amp; 255) * lime.math._RGBA.RGBA_Impl_.unmult</td></tr>
	<tr><td port="e2" align="left">var r = Math.round(r)</td></tr>
	<tr><td port="e3" align="left">var r = cast r[r]</td></tr>
	<tr><td port="e4" align="left">var g = cast lime.math._RGBA.RGBA_Impl_.__clamp</td></tr>
	<tr><td port="e5" align="left">var g = (cast cast cast cast cast cast sourcePixel &gt;&gt;&gt; 16 &amp; 255) * lime.math._RGBA.RGBA_Impl_.unmult</td></tr>
	<tr><td port="e6" align="left">var g = Math.round(g)</td></tr>
	<tr><td port="e7" align="left">var g = cast g[g]</td></tr>
	<tr><td port="e8" align="left">var b = cast lime.math._RGBA.RGBA_Impl_.__clamp</td></tr>
	<tr><td port="e9" align="left">var b = (cast cast cast cast cast cast sourcePixel &gt;&gt;&gt; 8 &amp; 255) * lime.math._RGBA.RGBA_Impl_.unmult</td></tr>
	<tr><td port="e10" align="left">var b = Math.round(b)</td></tr>
	<tr><td port="e11" align="left">var b = cast b[b]</td></tr>
	<tr><td port="e12" align="left">var sourcePixel = r &amp; 255</td></tr>
	<tr><td port="e13" align="left">var sourcePixel = sourcePixel &lt;&lt; 24</td></tr>
	<tr><td port="e14" align="left">var sourcePixel = g &amp; 255</td></tr>
	<tr><td port="e15" align="left">var sourcePixel = sourcePixel &lt;&lt; 16</td></tr>
	<tr><td port="e16" align="left">var sourcePixel = sourcePixel | sourcePixel</td></tr>
	<tr><td port="e17" align="left">var sourcePixel = b &amp; 255</td></tr>
	<tr><td port="e18" align="left">var sourcePixel = sourcePixel &lt;&lt; 8</td></tr>
	<tr><td port="e19" align="left">var sourcePixel = sourcePixel | sourcePixel</td></tr>
	<tr><td port="e20" align="left">var sourcePixel = cast cast cast cast sourcePixel &amp; 255 &amp; 255</td></tr>
	<tr><td port="e21" align="left">sourcePixel = sourcePixel | sourcePixel</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67978[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67978) BKConditional</td></tr>
	<tr><td port="e0" align="left">lime.math._RGBA.RGBA_Impl_.unmult = 255.0 / (cast cast cast cast sourcePixel &amp; 255)</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67977[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67977) BKNormal</td></tr>
	<tr><td port="e0" align="left">@:cond-branch tmp</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67976[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67976) BKConditional</td></tr>
	<tr><td port="e0" align="left">tmp = false</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67975[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67975) BKConditional</td></tr>
	<tr><td port="e0" align="left">tmp = (cast cast cast cast sourcePixel &amp; 255) != 255</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67974[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67974) BKConditional</td></tr>
	<tr><td port="e0" align="left">var tmp</td></tr>
	<tr><td port="e1" align="left">var tmp = (cast cast cast cast sourcePixel &amp; 255) != 0</td></tr>
	<tr><td port="e2" align="left">@:cond-branch tmp</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67973[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67973) BKNormal</td></tr>
	<tr><td port="e0" align="left">var premultiplied = premultiplied</td></tr>
	<tr><td port="e1" align="left">@:cond-branch premultiplied</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67972[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67972) BKConditional</td></tr>
	<tr><td port="e0" align="left">var sourcePixel = sourcePosition + 2</td></tr>
	<tr><td port="e1" align="left">var sourcePixel = cast cast sourceData[sourcePixel] &amp; 255</td></tr>
	<tr><td port="e2" align="left">var sourcePixel = sourcePixel &lt;&lt; 24</td></tr>
	<tr><td port="e3" align="left">var sourcePixel = sourcePosition + 1</td></tr>
	<tr><td port="e4" align="left">var sourcePixel = cast cast sourceData[sourcePixel] &amp; 255</td></tr>
	<tr><td port="e5" align="left">var sourcePixel = sourcePixel &lt;&lt; 16</td></tr>
	<tr><td port="e6" align="left">var sourcePixel = sourcePixel | sourcePixel</td></tr>
	<tr><td port="e7" align="left">var sourcePixel = cast cast sourceData[sourcePosition] &amp; 255</td></tr>
	<tr><td port="e8" align="left">var sourcePixel = sourcePixel &lt;&lt; 8</td></tr>
	<tr><td port="e9" align="left">var sourcePixel = sourcePixel | sourcePixel</td></tr>
	<tr><td port="e10" align="left">var sourcePixel = sourcePosition + 3</td></tr>
	<tr><td port="e11" align="left">var sourcePixel = cast cast sourceData[sourcePixel] &amp; 255</td></tr>
	<tr><td port="e12" align="left">sourcePixel = sourcePixel | sourcePixel</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67971[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67971) BKConditional</td></tr>
	<tr><td port="e0" align="left">var sourcePixel = sourcePosition + 1</td></tr>
	<tr><td port="e1" align="left">var sourcePixel = cast cast sourceData[sourcePixel] &amp; 255</td></tr>
	<tr><td port="e2" align="left">var sourcePixel = sourcePixel &lt;&lt; 24</td></tr>
	<tr><td port="e3" align="left">var sourcePixel = sourcePosition + 2</td></tr>
	<tr><td port="e4" align="left">var sourcePixel = cast cast sourceData[sourcePixel] &amp; 255</td></tr>
	<tr><td port="e5" align="left">var sourcePixel = sourcePixel &lt;&lt; 16</td></tr>
	<tr><td port="e6" align="left">var sourcePixel = sourcePixel | sourcePixel</td></tr>
	<tr><td port="e7" align="left">var sourcePixel = sourcePosition + 3</td></tr>
	<tr><td port="e8" align="left">var sourcePixel = cast cast sourceData[sourcePixel] &amp; 255</td></tr>
	<tr><td port="e9" align="left">var sourcePixel = sourcePixel &lt;&lt; 8</td></tr>
	<tr><td port="e10" align="left">var sourcePixel = sourcePixel | sourcePixel</td></tr>
	<tr><td port="e11" align="left">var sourcePixel = cast cast sourceData[sourcePosition] &amp; 255</td></tr>
	<tr><td port="e12" align="left">sourcePixel = sourcePixel | sourcePixel</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67970[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67970) BKConditional</td></tr>
	<tr><td port="e0" align="left">var sourcePixel = cast cast sourceData[sourcePosition] &amp; 255</td></tr>
	<tr><td port="e1" align="left">var sourcePixel = sourcePixel &lt;&lt; 24</td></tr>
	<tr><td port="e2" align="left">var sourcePixel = sourcePosition + 1</td></tr>
	<tr><td port="e3" align="left">var sourcePixel = cast cast sourceData[sourcePixel] &amp; 255</td></tr>
	<tr><td port="e4" align="left">var sourcePixel = sourcePixel &lt;&lt; 16</td></tr>
	<tr><td port="e5" align="left">var sourcePixel = sourcePixel | sourcePixel</td></tr>
	<tr><td port="e6" align="left">var sourcePixel = sourcePosition + 2</td></tr>
	<tr><td port="e7" align="left">var sourcePixel = cast cast sourceData[sourcePixel] &amp; 255</td></tr>
	<tr><td port="e8" align="left">var sourcePixel = sourcePixel &lt;&lt; 8</td></tr>
	<tr><td port="e9" align="left">var sourcePixel = sourcePixel | sourcePixel</td></tr>
	<tr><td port="e10" align="left">var sourcePixel = sourcePosition + 3</td></tr>
	<tr><td port="e11" align="left">var sourcePixel = cast cast sourceData[sourcePixel] &amp; 255</td></tr>
	<tr><td port="e12" align="left">sourcePixel = sourcePixel | sourcePixel</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67969[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67969) BKNormal</td></tr>
	<tr><td port="e0" align="left">var format = @:exhaustive format</td></tr>
	<tr><td port="e1" align="left">@:cond-branch format</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67968[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67968) BKConditional</td></tr>
	<tr><td port="e0" align="left">format = 0</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67967[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67967) BKNormal</td></tr>
	<tr><td port="e0" align="left">var tmp = format == null</td></tr>
	<tr><td port="e1" align="left">@:cond-branch tmp</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67966[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67966) BKConditional</td></tr>
	<tr><td port="e0" align="left">premultiplied = false</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67965[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67965) BKSub</td></tr>
	<tr><td port="e0" align="left">var format = sourceFormat</td></tr>
	<tr><td port="e1" align="left">var premultiplied = sourcePremultiplied</td></tr>
	<tr><td port="e2" align="left">var tmp = premultiplied == null</td></tr>
	<tr><td port="e3" align="left">@:cond-branch tmp</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67964[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67964) BKNormal</td></tr>
	<tr><td port="e0" align="left">` = ` + 1</td></tr>
	<tr><td port="e1" align="left">var x = ` - 1</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67963[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67963) BKConditional</td></tr>
	<tr><td port="e0" align="left">break</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67962[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67962) BKNormal</td></tr>
	<tr><td port="e0" align="left">var tmp = ! ((` &lt; `1))</td></tr>
	<tr><td port="e1" align="left">@:cond-branch tmp</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67961[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67961) BKLoopHead</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67960[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67960) BKNormal</td></tr>
	<tr><td port="e0" align="left">while ((true)) @:block 67962</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67959[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67959) BKSub</td></tr>
	<tr><td port="e0" align="left">var ` = 0</td></tr>
	<tr><td port="e1" align="left">var `1 = destView.width</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67958[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67958) BKNormal</td></tr>
	<tr><td port="e0" align="left">` = ` + 1</td></tr>
	<tr><td port="e1" align="left">var y = ` - 1</td></tr>
	<tr><td port="e2" align="left">var sourceView = sourceView.byteOffset</td></tr>
	<tr><td port="e3" align="left">var sourcePosition = sourceView.stride * y</td></tr>
	<tr><td port="e4" align="left">sourcePosition = sourceView + sourcePosition</td></tr>
	<tr><td port="e5" align="left">var destView = destView.byteOffset</td></tr>
	<tr><td port="e6" align="left">var destPosition = destView.stride * y</td></tr>
	<tr><td port="e7" align="left">destPosition = destView + destPosition</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67957[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67957) BKConditional</td></tr>
	<tr><td port="e0" align="left">break</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67956[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67956) BKNormal</td></tr>
	<tr><td port="e0" align="left">var tmp = ! ((` &lt; `1))</td></tr>
	<tr><td port="e1" align="left">@:cond-branch tmp</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67955[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67955) BKLoopHead</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67954[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67954) BKNormal</td></tr>
	<tr><td port="e0" align="left">while ((true)) @:block 67956</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67953[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67953) BKNormal</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67952[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67952) BKNormal</td></tr>
	<tr><td port="e0" align="left">` = ` + 1</td></tr>
	<tr><td port="e1" align="left">var y = ` - 1</td></tr>
	<tr><td port="e2" align="left">var sourceView = sourceView.byteOffset</td></tr>
	<tr><td port="e3" align="left">var sourcePosition = sourceView.stride * y</td></tr>
	<tr><td port="e4" align="left">sourcePosition = sourceView + sourcePosition</td></tr>
	<tr><td port="e5" align="left">var destView = destView.byteOffset</td></tr>
	<tr><td port="e6" align="left">var destPosition = destView.stride * y</td></tr>
	<tr><td port="e7" align="left">destPosition = destView + destPosition</td></tr>
	<tr><td port="e8" align="left">var tmp = destView.width * destBytesPerPixel</td></tr>
	<tr><td port="e9" align="left">var tmp = sourcePosition + tmp</td></tr>
	<tr><td port="e10" align="left">var tmp = sourceData.subarray(sourcePosition, tmp)</td></tr>
	<tr><td port="e11" align="left">destData.set(tmp, destPosition)</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67951[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67951) BKConditional</td></tr>
	<tr><td port="e0" align="left">break</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67950[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67950) BKNormal</td></tr>
	<tr><td port="e0" align="left">var tmp = ! ((` &lt; `1))</td></tr>
	<tr><td port="e1" align="left">@:cond-branch tmp</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67949[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67949) BKLoopHead</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67948[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67948) BKNormal</td></tr>
	<tr><td port="e0" align="left">while ((true)) @:block 67950</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67947[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67947) BKConditional</td></tr>
	<tr><td port="e0" align="left">var ` = 0</td></tr>
	<tr><td port="e1" align="left">var `1 = destView.height</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67946[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67946) BKConditional</td></tr>
	<tr><td port="e0" align="left">var ` = 0</td></tr>
	<tr><td port="e1" align="left">var `1 = destView.height</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67945[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67945) BKNormal</td></tr>
	<tr><td port="e0" align="left">@:cond-branch tmp</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67944[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67944) BKConditional</td></tr>
	<tr><td port="e0" align="left">tmp = false</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67943[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67943) BKConditional</td></tr>
	<tr><td port="e0" align="left">tmp = sourceBytesPerPixel == destBytesPerPixel</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67942[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67942) BKNormal</td></tr>
	<tr><td port="e0" align="left">@:cond-branch tmp</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67941[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67941) BKConditional</td></tr>
	<tr><td port="e0" align="left">tmp = false</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67940[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67940) BKConditional</td></tr>
	<tr><td port="e0" align="left">tmp = sourcePremultiplied == destPremultiplied</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67939[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67939) BKNormal</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67938[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67938) BKNormal</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67937[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67937) BKNormal</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67936[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67936) BKNormal</td></tr>
	<tr><td port="e0" align="left">sourcePosition = sourcePosition + 4</td></tr>
	<tr><td port="e1" align="left">destPosition = destPosition + 4</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67935[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67935) BKNormal</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67934[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67934) BKConditional</td></tr>
	<tr><td port="e0" align="left">cast destData[destPosition] = cast cast cast cast cast cast destPixel &gt;&gt;&gt; 8 &amp; 255</td></tr>
	<tr><td port="e1" align="left">var tmp = destPosition + 1</td></tr>
	<tr><td port="e2" align="left">cast destData[tmp] = cast cast cast cast cast cast destPixel &gt;&gt;&gt; 16 &amp; 255</td></tr>
	<tr><td port="e3" align="left">var tmp = destPosition + 2</td></tr>
	<tr><td port="e4" align="left">cast destData[tmp] = cast cast cast cast cast cast destPixel &gt;&gt;&gt; 24 &amp; 255</td></tr>
	<tr><td port="e5" align="left">var tmp = destPosition + 3</td></tr>
	<tr><td port="e6" align="left">cast destData[tmp] = cast cast cast cast destPixel &amp; 255</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67933[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67933) BKConditional</td></tr>
	<tr><td port="e0" align="left">cast destData[destPosition] = cast cast cast cast destPixel &amp; 255</td></tr>
	<tr><td port="e1" align="left">var tmp = destPosition + 1</td></tr>
	<tr><td port="e2" align="left">cast destData[tmp] = cast cast cast cast cast cast destPixel &gt;&gt;&gt; 24 &amp; 255</td></tr>
	<tr><td port="e3" align="left">var tmp = destPosition + 2</td></tr>
	<tr><td port="e4" align="left">cast destData[tmp] = cast cast cast cast cast cast destPixel &gt;&gt;&gt; 16 &amp; 255</td></tr>
	<tr><td port="e5" align="left">var tmp = destPosition + 3</td></tr>
	<tr><td port="e6" align="left">cast destData[tmp] = cast cast cast cast cast cast destPixel &gt;&gt;&gt; 8 &amp; 255</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67932[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67932) BKConditional</td></tr>
	<tr><td port="e0" align="left">cast destData[destPosition] = cast cast cast cast cast cast destPixel &gt;&gt;&gt; 24 &amp; 255</td></tr>
	<tr><td port="e1" align="left">var tmp = destPosition + 1</td></tr>
	<tr><td port="e2" align="left">cast destData[tmp] = cast cast cast cast cast cast destPixel &gt;&gt;&gt; 16 &amp; 255</td></tr>
	<tr><td port="e3" align="left">var tmp = destPosition + 2</td></tr>
	<tr><td port="e4" align="left">cast destData[tmp] = cast cast cast cast cast cast destPixel &gt;&gt;&gt; 8 &amp; 255</td></tr>
	<tr><td port="e5" align="left">var tmp = destPosition + 3</td></tr>
	<tr><td port="e6" align="left">cast destData[tmp] = cast cast cast cast destPixel &amp; 255</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67931[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67931) BKNormal</td></tr>
	<tr><td port="e0" align="left">var format = @:exhaustive format</td></tr>
	<tr><td port="e1" align="left">@:cond-branch format</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67930[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67930) BKNormal</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67929[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67929) BKNormal</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67928[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67928) BKNormal</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67927[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67927) BKSub</td></tr>
	<tr><td port="e0" align="left">var r = (cast cast cast cast cast cast destPixel &gt;&gt;&gt; 24 &amp; 255) * lime.math._RGBA.RGBA_Impl_.a16</td></tr>
	<tr><td port="e1" align="left">var r = r &gt;&gt; 16</td></tr>
	<tr><td port="e2" align="left">var g = (cast cast cast cast cast cast destPixel &gt;&gt;&gt; 16 &amp; 255) * lime.math._RGBA.RGBA_Impl_.a16</td></tr>
	<tr><td port="e3" align="left">var g = g &gt;&gt; 16</td></tr>
	<tr><td port="e4" align="left">var b = (cast cast cast cast cast cast destPixel &gt;&gt;&gt; 8 &amp; 255) * lime.math._RGBA.RGBA_Impl_.a16</td></tr>
	<tr><td port="e5" align="left">var b = b &gt;&gt; 16</td></tr>
	<tr><td port="e6" align="left">var destPixel = r &amp; 255</td></tr>
	<tr><td port="e7" align="left">var destPixel = destPixel &lt;&lt; 24</td></tr>
	<tr><td port="e8" align="left">var destPixel = g &amp; 255</td></tr>
	<tr><td port="e9" align="left">var destPixel = destPixel &lt;&lt; 16</td></tr>
	<tr><td port="e10" align="left">var destPixel = destPixel | destPixel</td></tr>
	<tr><td port="e11" align="left">var destPixel = b &amp; 255</td></tr>
	<tr><td port="e12" align="left">var destPixel = destPixel &lt;&lt; 8</td></tr>
	<tr><td port="e13" align="left">var destPixel = destPixel | destPixel</td></tr>
	<tr><td port="e14" align="left">var destPixel = cast cast cast cast destPixel &amp; 255 &amp; 255</td></tr>
	<tr><td port="e15" align="left">destPixel = destPixel | destPixel</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67926[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67926) BKConditional</td></tr>
	<tr><td port="e0" align="left">lime.math._RGBA.RGBA_Impl_.a16 = cast cast lime.math._RGBA.RGBA_Impl_.__alpha16[cast cast cast cast destPixel &amp; 255]</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67925[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67925) BKNormal</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67924[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67924) BKConditional</td></tr>
	<tr><td port="e0" align="left">destPixel = 0</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67923[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67923) BKConditional</td></tr>
	<tr><td port="e0" align="left">var tmp = (cast cast cast cast destPixel &amp; 255) != 255</td></tr>
	<tr><td port="e1" align="left">@:cond-branch tmp</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67922[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67922) BKConditional</td></tr>
	<tr><td port="e0" align="left">var tmp = cast cast destPixel != 0</td></tr>
	<tr><td port="e1" align="left">@:cond-branch tmp</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67921[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67921) BKConditional</td></tr>
	<tr><td port="e0" align="left">var tmp = (cast cast cast cast destPixel &amp; 255) == 0</td></tr>
	<tr><td port="e1" align="left">@:cond-branch tmp</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67920[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67920) BKNormal</td></tr>
	<tr><td port="e0" align="left">var premultiplied = premultiplied</td></tr>
	<tr><td port="e1" align="left">@:cond-branch premultiplied</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67919[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67919) BKConditional</td></tr>
	<tr><td port="e0" align="left">format = 0</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67918[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67918) BKNormal</td></tr>
	<tr><td port="e0" align="left">var tmp = format == null</td></tr>
	<tr><td port="e1" align="left">@:cond-branch tmp</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67917[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67917) BKConditional</td></tr>
	<tr><td port="e0" align="left">premultiplied = false</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67916[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67916) BKSub</td></tr>
	<tr><td port="e0" align="left">var format = destFormat</td></tr>
	<tr><td port="e1" align="left">var premultiplied = destPremultiplied</td></tr>
	<tr><td port="e2" align="left">var tmp = premultiplied == null</td></tr>
	<tr><td port="e3" align="left">@:cond-branch tmp</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67915[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67915) BKNormal</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67914[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67914) BKNormal</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67913[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67913) BKSub</td></tr>
	<tr><td port="e0" align="left">var value = cast lime.math._RGBA.RGBA_Impl_.__clamp</td></tr>
	<tr><td port="e1" align="left">var value = blendAlpha * 255.0</td></tr>
	<tr><td port="e2" align="left">var value = Math.round(value)</td></tr>
	<tr><td port="e3" align="left">var value = cast value[value]</td></tr>
	<tr><td port="e4" align="left">var destPixel = cast cast cast cast cast cast destPixel &gt;&gt;&gt; 24 &amp; 255 &amp; 255</td></tr>
	<tr><td port="e5" align="left">var destPixel = destPixel &lt;&lt; 24</td></tr>
	<tr><td port="e6" align="left">var destPixel = cast cast cast cast cast cast destPixel &gt;&gt;&gt; 16 &amp; 255 &amp; 255</td></tr>
	<tr><td port="e7" align="left">var destPixel = destPixel &lt;&lt; 16</td></tr>
	<tr><td port="e8" align="left">var destPixel = destPixel | destPixel</td></tr>
	<tr><td port="e9" align="left">var destPixel = cast cast cast cast cast cast destPixel &gt;&gt;&gt; 8 &amp; 255 &amp; 255</td></tr>
	<tr><td port="e10" align="left">var destPixel = destPixel &lt;&lt; 8</td></tr>
	<tr><td port="e11" align="left">var destPixel = destPixel | destPixel</td></tr>
	<tr><td port="e12" align="left">var destPixel = value &amp; 255</td></tr>
	<tr><td port="e13" align="left">destPixel = destPixel | destPixel</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67912[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67912) BKNormal</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67911[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67911) BKSub</td></tr>
	<tr><td port="e0" align="left">var value = cast lime.math._RGBA.RGBA_Impl_.__clamp</td></tr>
	<tr><td port="e1" align="left">var value = (cast cast cast cast cast cast sourcePixel &gt;&gt;&gt; 8 &amp; 255) * sourceAlpha</td></tr>
	<tr><td port="e2" align="left">var value = (cast cast cast cast cast cast destPixel &gt;&gt;&gt; 8 &amp; 255) * destAlpha</td></tr>
	<tr><td port="e3" align="left">var value = value * oneMinusSourceAlpha</td></tr>
	<tr><td port="e4" align="left">var value = value + value</td></tr>
	<tr><td port="e5" align="left">var value = value / blendAlpha</td></tr>
	<tr><td port="e6" align="left">var value = Math.round(value)</td></tr>
	<tr><td port="e7" align="left">var value = cast value[value]</td></tr>
	<tr><td port="e8" align="left">var destPixel = cast cast cast cast cast cast destPixel &gt;&gt;&gt; 24 &amp; 255 &amp; 255</td></tr>
	<tr><td port="e9" align="left">var destPixel = destPixel &lt;&lt; 24</td></tr>
	<tr><td port="e10" align="left">var destPixel = cast cast cast cast cast cast destPixel &gt;&gt;&gt; 16 &amp; 255 &amp; 255</td></tr>
	<tr><td port="e11" align="left">var destPixel = destPixel &lt;&lt; 16</td></tr>
	<tr><td port="e12" align="left">var destPixel = destPixel | destPixel</td></tr>
	<tr><td port="e13" align="left">var destPixel = value &amp; 255</td></tr>
	<tr><td port="e14" align="left">var destPixel = destPixel &lt;&lt; 8</td></tr>
	<tr><td port="e15" align="left">var destPixel = destPixel | destPixel</td></tr>
	<tr><td port="e16" align="left">var destPixel = cast cast cast cast destPixel &amp; 255 &amp; 255</td></tr>
	<tr><td port="e17" align="left">destPixel = destPixel | destPixel</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67910[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67910) BKNormal</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67909[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67909) BKSub</td></tr>
	<tr><td port="e0" align="left">var value = cast lime.math._RGBA.RGBA_Impl_.__clamp</td></tr>
	<tr><td port="e1" align="left">var value = (cast cast cast cast cast cast sourcePixel &gt;&gt;&gt; 16 &amp; 255) * sourceAlpha</td></tr>
	<tr><td port="e2" align="left">var value = (cast cast cast cast cast cast destPixel &gt;&gt;&gt; 16 &amp; 255) * destAlpha</td></tr>
	<tr><td port="e3" align="left">var value = value * oneMinusSourceAlpha</td></tr>
	<tr><td port="e4" align="left">var value = value + value</td></tr>
	<tr><td port="e5" align="left">var value = value / blendAlpha</td></tr>
	<tr><td port="e6" align="left">var value = Math.round(value)</td></tr>
	<tr><td port="e7" align="left">var value = cast value[value]</td></tr>
	<tr><td port="e8" align="left">var destPixel = cast cast cast cast cast cast destPixel &gt;&gt;&gt; 24 &amp; 255 &amp; 255</td></tr>
	<tr><td port="e9" align="left">var destPixel = destPixel &lt;&lt; 24</td></tr>
	<tr><td port="e10" align="left">var destPixel = value &amp; 255</td></tr>
	<tr><td port="e11" align="left">var destPixel = destPixel &lt;&lt; 16</td></tr>
	<tr><td port="e12" align="left">var destPixel = destPixel | destPixel</td></tr>
	<tr><td port="e13" align="left">var destPixel = cast cast cast cast cast cast destPixel &gt;&gt;&gt; 8 &amp; 255 &amp; 255</td></tr>
	<tr><td port="e14" align="left">var destPixel = destPixel &lt;&lt; 8</td></tr>
	<tr><td port="e15" align="left">var destPixel = destPixel | destPixel</td></tr>
	<tr><td port="e16" align="left">var destPixel = cast cast cast cast destPixel &amp; 255 &amp; 255</td></tr>
	<tr><td port="e17" align="left">destPixel = destPixel | destPixel</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67908[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67908) BKNormal</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67907[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67907) BKSub</td></tr>
	<tr><td port="e0" align="left">var value = cast lime.math._RGBA.RGBA_Impl_.__clamp</td></tr>
	<tr><td port="e1" align="left">var value = (cast cast cast cast cast cast sourcePixel &gt;&gt;&gt; 24 &amp; 255) * sourceAlpha</td></tr>
	<tr><td port="e2" align="left">var value = (cast cast cast cast cast cast destPixel &gt;&gt;&gt; 24 &amp; 255) * destAlpha</td></tr>
	<tr><td port="e3" align="left">var value = value * oneMinusSourceAlpha</td></tr>
	<tr><td port="e4" align="left">var value = value + value</td></tr>
	<tr><td port="e5" align="left">var value = value / blendAlpha</td></tr>
	<tr><td port="e6" align="left">var value = Math.round(value)</td></tr>
	<tr><td port="e7" align="left">var value = cast value[value]</td></tr>
	<tr><td port="e8" align="left">var destPixel = value &amp; 255</td></tr>
	<tr><td port="e9" align="left">var destPixel = destPixel &lt;&lt; 24</td></tr>
	<tr><td port="e10" align="left">var destPixel = cast cast cast cast cast cast destPixel &gt;&gt;&gt; 16 &amp; 255 &amp; 255</td></tr>
	<tr><td port="e11" align="left">var destPixel = destPixel &lt;&lt; 16</td></tr>
	<tr><td port="e12" align="left">var destPixel = destPixel | destPixel</td></tr>
	<tr><td port="e13" align="left">var destPixel = cast cast cast cast cast cast destPixel &gt;&gt;&gt; 8 &amp; 255 &amp; 255</td></tr>
	<tr><td port="e14" align="left">var destPixel = destPixel &lt;&lt; 8</td></tr>
	<tr><td port="e15" align="left">var destPixel = destPixel | destPixel</td></tr>
	<tr><td port="e16" align="left">var destPixel = cast cast cast cast destPixel &amp; 255 &amp; 255</td></tr>
	<tr><td port="e17" align="left">destPixel = destPixel | destPixel</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67906[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67906) BKConditional</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67905[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67905) BKConditional</td></tr>
	<tr><td port="e0" align="left">destPixel = 0</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67904[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67904) BKNormal</td></tr>
	<tr><td port="e0" align="left">sourceAlpha = (cast cast cast cast sourcePixel &amp; 255) / 255.0</td></tr>
	<tr><td port="e1" align="left">destAlpha = (cast cast cast cast destPixel &amp; 255) / 255.0</td></tr>
	<tr><td port="e2" align="left">oneMinusSourceAlpha = 1 - sourceAlpha</td></tr>
	<tr><td port="e3" align="left">var blendAlpha = destAlpha * oneMinusSourceAlpha</td></tr>
	<tr><td port="e4" align="left">blendAlpha = sourceAlpha + blendAlpha</td></tr>
	<tr><td port="e5" align="left">var tmp = blendAlpha == 0</td></tr>
	<tr><td port="e6" align="left">@:cond-branch tmp</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67903[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67903) BKNormal</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67902[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67902) BKNormal</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67901[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67901) BKNormal</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67900[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67900) BKSub</td></tr>
	<tr><td port="e0" align="left">var r = cast lime.math._RGBA.RGBA_Impl_.__clamp</td></tr>
	<tr><td port="e1" align="left">var r = (cast cast cast cast cast cast destPixel &gt;&gt;&gt; 24 &amp; 255) * lime.math._RGBA.RGBA_Impl_.unmult</td></tr>
	<tr><td port="e2" align="left">var r = Math.round(r)</td></tr>
	<tr><td port="e3" align="left">var r = cast r[r]</td></tr>
	<tr><td port="e4" align="left">var g = cast lime.math._RGBA.RGBA_Impl_.__clamp</td></tr>
	<tr><td port="e5" align="left">var g = (cast cast cast cast cast cast destPixel &gt;&gt;&gt; 16 &amp; 255) * lime.math._RGBA.RGBA_Impl_.unmult</td></tr>
	<tr><td port="e6" align="left">var g = Math.round(g)</td></tr>
	<tr><td port="e7" align="left">var g = cast g[g]</td></tr>
	<tr><td port="e8" align="left">var b = cast lime.math._RGBA.RGBA_Impl_.__clamp</td></tr>
	<tr><td port="e9" align="left">var b = (cast cast cast cast cast cast destPixel &gt;&gt;&gt; 8 &amp; 255) * lime.math._RGBA.RGBA_Impl_.unmult</td></tr>
	<tr><td port="e10" align="left">var b = Math.round(b)</td></tr>
	<tr><td port="e11" align="left">var b = cast b[b]</td></tr>
	<tr><td port="e12" align="left">var destPixel = r &amp; 255</td></tr>
	<tr><td port="e13" align="left">var destPixel = destPixel &lt;&lt; 24</td></tr>
	<tr><td port="e14" align="left">var destPixel = g &amp; 255</td></tr>
	<tr><td port="e15" align="left">var destPixel = destPixel &lt;&lt; 16</td></tr>
	<tr><td port="e16" align="left">var destPixel = destPixel | destPixel</td></tr>
	<tr><td port="e17" align="left">var destPixel = b &amp; 255</td></tr>
	<tr><td port="e18" align="left">var destPixel = destPixel &lt;&lt; 8</td></tr>
	<tr><td port="e19" align="left">var destPixel = destPixel | destPixel</td></tr>
	<tr><td port="e20" align="left">var destPixel = cast cast cast cast destPixel &amp; 255 &amp; 255</td></tr>
	<tr><td port="e21" align="left">destPixel = destPixel | destPixel</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67899[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67899) BKConditional</td></tr>
	<tr><td port="e0" align="left">lime.math._RGBA.RGBA_Impl_.unmult = 255.0 / (cast cast cast cast destPixel &amp; 255)</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67898[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67898) BKNormal</td></tr>
	<tr><td port="e0" align="left">@:cond-branch tmp</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67897[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67897) BKConditional</td></tr>
	<tr><td port="e0" align="left">tmp = false</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67896[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67896) BKConditional</td></tr>
	<tr><td port="e0" align="left">tmp = (cast cast cast cast destPixel &amp; 255) != 255</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67895[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67895) BKConditional</td></tr>
	<tr><td port="e0" align="left">var tmp</td></tr>
	<tr><td port="e1" align="left">var tmp = (cast cast cast cast destPixel &amp; 255) != 0</td></tr>
	<tr><td port="e2" align="left">@:cond-branch tmp</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67894[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67894) BKNormal</td></tr>
	<tr><td port="e0" align="left">var premultiplied = premultiplied</td></tr>
	<tr><td port="e1" align="left">@:cond-branch premultiplied</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67893[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67893) BKConditional</td></tr>
	<tr><td port="e0" align="left">var destPixel = destPosition + 2</td></tr>
	<tr><td port="e1" align="left">var destPixel = cast cast destData[destPixel] &amp; 255</td></tr>
	<tr><td port="e2" align="left">var destPixel = destPixel &lt;&lt; 24</td></tr>
	<tr><td port="e3" align="left">var destPixel = destPosition + 1</td></tr>
	<tr><td port="e4" align="left">var destPixel = cast cast destData[destPixel] &amp; 255</td></tr>
	<tr><td port="e5" align="left">var destPixel = destPixel &lt;&lt; 16</td></tr>
	<tr><td port="e6" align="left">var destPixel = destPixel | destPixel</td></tr>
	<tr><td port="e7" align="left">var destPixel = cast cast destData[destPosition] &amp; 255</td></tr>
	<tr><td port="e8" align="left">var destPixel = destPixel &lt;&lt; 8</td></tr>
	<tr><td port="e9" align="left">var destPixel = destPixel | destPixel</td></tr>
	<tr><td port="e10" align="left">var destPixel = destPosition + 3</td></tr>
	<tr><td port="e11" align="left">var destPixel = cast cast destData[destPixel] &amp; 255</td></tr>
	<tr><td port="e12" align="left">destPixel = destPixel | destPixel</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67892[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67892) BKConditional</td></tr>
	<tr><td port="e0" align="left">var destPixel = destPosition + 1</td></tr>
	<tr><td port="e1" align="left">var destPixel = cast cast destData[destPixel] &amp; 255</td></tr>
	<tr><td port="e2" align="left">var destPixel = destPixel &lt;&lt; 24</td></tr>
	<tr><td port="e3" align="left">var destPixel = destPosition + 2</td></tr>
	<tr><td port="e4" align="left">var destPixel = cast cast destData[destPixel] &amp; 255</td></tr>
	<tr><td port="e5" align="left">var destPixel = destPixel &lt;&lt; 16</td></tr>
	<tr><td port="e6" align="left">var destPixel = destPixel | destPixel</td></tr>
	<tr><td port="e7" align="left">var destPixel = destPosition + 3</td></tr>
	<tr><td port="e8" align="left">var destPixel = cast cast destData[destPixel] &amp; 255</td></tr>
	<tr><td port="e9" align="left">var destPixel = destPixel &lt;&lt; 8</td></tr>
	<tr><td port="e10" align="left">var destPixel = destPixel | destPixel</td></tr>
	<tr><td port="e11" align="left">var destPixel = cast cast destData[destPosition] &amp; 255</td></tr>
	<tr><td port="e12" align="left">destPixel = destPixel | destPixel</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67891[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67891) BKConditional</td></tr>
	<tr><td port="e0" align="left">var destPixel = cast cast destData[destPosition] &amp; 255</td></tr>
	<tr><td port="e1" align="left">var destPixel = destPixel &lt;&lt; 24</td></tr>
	<tr><td port="e2" align="left">var destPixel = destPosition + 1</td></tr>
	<tr><td port="e3" align="left">var destPixel = cast cast destData[destPixel] &amp; 255</td></tr>
	<tr><td port="e4" align="left">var destPixel = destPixel &lt;&lt; 16</td></tr>
	<tr><td port="e5" align="left">var destPixel = destPixel | destPixel</td></tr>
	<tr><td port="e6" align="left">var destPixel = destPosition + 2</td></tr>
	<tr><td port="e7" align="left">var destPixel = cast cast destData[destPixel] &amp; 255</td></tr>
	<tr><td port="e8" align="left">var destPixel = destPixel &lt;&lt; 8</td></tr>
	<tr><td port="e9" align="left">var destPixel = destPixel | destPixel</td></tr>
	<tr><td port="e10" align="left">var destPixel = destPosition + 3</td></tr>
	<tr><td port="e11" align="left">var destPixel = cast cast destData[destPixel] &amp; 255</td></tr>
	<tr><td port="e12" align="left">destPixel = destPixel | destPixel</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67890[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67890) BKNormal</td></tr>
	<tr><td port="e0" align="left">var format = @:exhaustive format</td></tr>
	<tr><td port="e1" align="left">@:cond-branch format</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67889[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67889) BKConditional</td></tr>
	<tr><td port="e0" align="left">format = 0</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67888[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67888) BKNormal</td></tr>
	<tr><td port="e0" align="left">var tmp = format == null</td></tr>
	<tr><td port="e1" align="left">@:cond-branch tmp</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67887[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67887) BKConditional</td></tr>
	<tr><td port="e0" align="left">premultiplied = false</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67886[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67886) BKSub</td></tr>
	<tr><td port="e0" align="left">var format = destFormat</td></tr>
	<tr><td port="e1" align="left">var premultiplied = destPremultiplied</td></tr>
	<tr><td port="e2" align="left">var tmp = premultiplied == null</td></tr>
	<tr><td port="e3" align="left">@:cond-branch tmp</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67885[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67885) BKNormal</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67884[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67884) BKNormal</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67883[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67883) BKNormal</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67882[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67882) BKNormal</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67881[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67881) BKSub</td></tr>
	<tr><td port="e0" align="left">var r = cast lime.math._RGBA.RGBA_Impl_.__clamp</td></tr>
	<tr><td port="e1" align="left">var r = (cast cast cast cast cast cast sourcePixel &gt;&gt;&gt; 24 &amp; 255) * lime.math._RGBA.RGBA_Impl_.unmult</td></tr>
	<tr><td port="e2" align="left">var r = Math.round(r)</td></tr>
	<tr><td port="e3" align="left">var r = cast r[r]</td></tr>
	<tr><td port="e4" align="left">var g = cast lime.math._RGBA.RGBA_Impl_.__clamp</td></tr>
	<tr><td port="e5" align="left">var g = (cast cast cast cast cast cast sourcePixel &gt;&gt;&gt; 16 &amp; 255) * lime.math._RGBA.RGBA_Impl_.unmult</td></tr>
	<tr><td port="e6" align="left">var g = Math.round(g)</td></tr>
	<tr><td port="e7" align="left">var g = cast g[g]</td></tr>
	<tr><td port="e8" align="left">var b = cast lime.math._RGBA.RGBA_Impl_.__clamp</td></tr>
	<tr><td port="e9" align="left">var b = (cast cast cast cast cast cast sourcePixel &gt;&gt;&gt; 8 &amp; 255) * lime.math._RGBA.RGBA_Impl_.unmult</td></tr>
	<tr><td port="e10" align="left">var b = Math.round(b)</td></tr>
	<tr><td port="e11" align="left">var b = cast b[b]</td></tr>
	<tr><td port="e12" align="left">var sourcePixel = r &amp; 255</td></tr>
	<tr><td port="e13" align="left">var sourcePixel = sourcePixel &lt;&lt; 24</td></tr>
	<tr><td port="e14" align="left">var sourcePixel = g &amp; 255</td></tr>
	<tr><td port="e15" align="left">var sourcePixel = sourcePixel &lt;&lt; 16</td></tr>
	<tr><td port="e16" align="left">var sourcePixel = sourcePixel | sourcePixel</td></tr>
	<tr><td port="e17" align="left">var sourcePixel = b &amp; 255</td></tr>
	<tr><td port="e18" align="left">var sourcePixel = sourcePixel &lt;&lt; 8</td></tr>
	<tr><td port="e19" align="left">var sourcePixel = sourcePixel | sourcePixel</td></tr>
	<tr><td port="e20" align="left">var sourcePixel = cast cast cast cast sourcePixel &amp; 255 &amp; 255</td></tr>
	<tr><td port="e21" align="left">sourcePixel = sourcePixel | sourcePixel</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67880[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67880) BKConditional</td></tr>
	<tr><td port="e0" align="left">lime.math._RGBA.RGBA_Impl_.unmult = 255.0 / (cast cast cast cast sourcePixel &amp; 255)</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67879[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67879) BKNormal</td></tr>
	<tr><td port="e0" align="left">@:cond-branch tmp</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67878[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67878) BKConditional</td></tr>
	<tr><td port="e0" align="left">tmp = false</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67877[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67877) BKConditional</td></tr>
	<tr><td port="e0" align="left">tmp = (cast cast cast cast sourcePixel &amp; 255) != 255</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67876[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67876) BKConditional</td></tr>
	<tr><td port="e0" align="left">var tmp</td></tr>
	<tr><td port="e1" align="left">var tmp = (cast cast cast cast sourcePixel &amp; 255) != 0</td></tr>
	<tr><td port="e2" align="left">@:cond-branch tmp</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67875[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67875) BKNormal</td></tr>
	<tr><td port="e0" align="left">var premultiplied = premultiplied</td></tr>
	<tr><td port="e1" align="left">@:cond-branch premultiplied</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67874[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67874) BKConditional</td></tr>
	<tr><td port="e0" align="left">var sourcePixel = sourcePosition + 2</td></tr>
	<tr><td port="e1" align="left">var sourcePixel = cast cast sourceData[sourcePixel] &amp; 255</td></tr>
	<tr><td port="e2" align="left">var sourcePixel = sourcePixel &lt;&lt; 24</td></tr>
	<tr><td port="e3" align="left">var sourcePixel = sourcePosition + 1</td></tr>
	<tr><td port="e4" align="left">var sourcePixel = cast cast sourceData[sourcePixel] &amp; 255</td></tr>
	<tr><td port="e5" align="left">var sourcePixel = sourcePixel &lt;&lt; 16</td></tr>
	<tr><td port="e6" align="left">var sourcePixel = sourcePixel | sourcePixel</td></tr>
	<tr><td port="e7" align="left">var sourcePixel = cast cast sourceData[sourcePosition] &amp; 255</td></tr>
	<tr><td port="e8" align="left">var sourcePixel = sourcePixel &lt;&lt; 8</td></tr>
	<tr><td port="e9" align="left">var sourcePixel = sourcePixel | sourcePixel</td></tr>
	<tr><td port="e10" align="left">var sourcePixel = sourcePosition + 3</td></tr>
	<tr><td port="e11" align="left">var sourcePixel = cast cast sourceData[sourcePixel] &amp; 255</td></tr>
	<tr><td port="e12" align="left">sourcePixel = sourcePixel | sourcePixel</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67873[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67873) BKConditional</td></tr>
	<tr><td port="e0" align="left">var sourcePixel = sourcePosition + 1</td></tr>
	<tr><td port="e1" align="left">var sourcePixel = cast cast sourceData[sourcePixel] &amp; 255</td></tr>
	<tr><td port="e2" align="left">var sourcePixel = sourcePixel &lt;&lt; 24</td></tr>
	<tr><td port="e3" align="left">var sourcePixel = sourcePosition + 2</td></tr>
	<tr><td port="e4" align="left">var sourcePixel = cast cast sourceData[sourcePixel] &amp; 255</td></tr>
	<tr><td port="e5" align="left">var sourcePixel = sourcePixel &lt;&lt; 16</td></tr>
	<tr><td port="e6" align="left">var sourcePixel = sourcePixel | sourcePixel</td></tr>
	<tr><td port="e7" align="left">var sourcePixel = sourcePosition + 3</td></tr>
	<tr><td port="e8" align="left">var sourcePixel = cast cast sourceData[sourcePixel] &amp; 255</td></tr>
	<tr><td port="e9" align="left">var sourcePixel = sourcePixel &lt;&lt; 8</td></tr>
	<tr><td port="e10" align="left">var sourcePixel = sourcePixel | sourcePixel</td></tr>
	<tr><td port="e11" align="left">var sourcePixel = cast cast sourceData[sourcePosition] &amp; 255</td></tr>
	<tr><td port="e12" align="left">sourcePixel = sourcePixel | sourcePixel</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67872[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67872) BKConditional</td></tr>
	<tr><td port="e0" align="left">var sourcePixel = cast cast sourceData[sourcePosition] &amp; 255</td></tr>
	<tr><td port="e1" align="left">var sourcePixel = sourcePixel &lt;&lt; 24</td></tr>
	<tr><td port="e2" align="left">var sourcePixel = sourcePosition + 1</td></tr>
	<tr><td port="e3" align="left">var sourcePixel = cast cast sourceData[sourcePixel] &amp; 255</td></tr>
	<tr><td port="e4" align="left">var sourcePixel = sourcePixel &lt;&lt; 16</td></tr>
	<tr><td port="e5" align="left">var sourcePixel = sourcePixel | sourcePixel</td></tr>
	<tr><td port="e6" align="left">var sourcePixel = sourcePosition + 2</td></tr>
	<tr><td port="e7" align="left">var sourcePixel = cast cast sourceData[sourcePixel] &amp; 255</td></tr>
	<tr><td port="e8" align="left">var sourcePixel = sourcePixel &lt;&lt; 8</td></tr>
	<tr><td port="e9" align="left">var sourcePixel = sourcePixel | sourcePixel</td></tr>
	<tr><td port="e10" align="left">var sourcePixel = sourcePosition + 3</td></tr>
	<tr><td port="e11" align="left">var sourcePixel = cast cast sourceData[sourcePixel] &amp; 255</td></tr>
	<tr><td port="e12" align="left">sourcePixel = sourcePixel | sourcePixel</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67871[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67871) BKNormal</td></tr>
	<tr><td port="e0" align="left">var format = @:exhaustive format</td></tr>
	<tr><td port="e1" align="left">@:cond-branch format</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67870[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67870) BKConditional</td></tr>
	<tr><td port="e0" align="left">format = 0</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67869[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67869) BKNormal</td></tr>
	<tr><td port="e0" align="left">var tmp = format == null</td></tr>
	<tr><td port="e1" align="left">@:cond-branch tmp</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67868[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67868) BKConditional</td></tr>
	<tr><td port="e0" align="left">premultiplied = false</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67867[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67867) BKSub</td></tr>
	<tr><td port="e0" align="left">var format = sourceFormat</td></tr>
	<tr><td port="e1" align="left">var premultiplied = sourcePremultiplied</td></tr>
	<tr><td port="e2" align="left">var tmp = premultiplied == null</td></tr>
	<tr><td port="e3" align="left">@:cond-branch tmp</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67866[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67866) BKNormal</td></tr>
	<tr><td port="e0" align="left">` = ` + 1</td></tr>
	<tr><td port="e1" align="left">var x = ` - 1</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67865[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67865) BKConditional</td></tr>
	<tr><td port="e0" align="left">break</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67864[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67864) BKNormal</td></tr>
	<tr><td port="e0" align="left">var tmp = ! ((` &lt; `1))</td></tr>
	<tr><td port="e1" align="left">@:cond-branch tmp</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67863[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67863) BKLoopHead</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67862[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67862) BKNormal</td></tr>
	<tr><td port="e0" align="left">while ((true)) @:block 67864</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67861[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67861) BKSub</td></tr>
	<tr><td port="e0" align="left">var ` = 0</td></tr>
	<tr><td port="e1" align="left">var `1 = destView.width</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67860[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67860) BKNormal</td></tr>
	<tr><td port="e0" align="left">` = ` + 1</td></tr>
	<tr><td port="e1" align="left">var y = ` - 1</td></tr>
	<tr><td port="e2" align="left">var sourceView = sourceView.byteOffset</td></tr>
	<tr><td port="e3" align="left">var sourcePosition = sourceView.stride * y</td></tr>
	<tr><td port="e4" align="left">sourcePosition = sourceView + sourcePosition</td></tr>
	<tr><td port="e5" align="left">var destView = destView.byteOffset</td></tr>
	<tr><td port="e6" align="left">var destPosition = destView.stride * y</td></tr>
	<tr><td port="e7" align="left">destPosition = destView + destPosition</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67859[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67859) BKConditional</td></tr>
	<tr><td port="e0" align="left">break</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67858[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67858) BKNormal</td></tr>
	<tr><td port="e0" align="left">var tmp = ! ((` &lt; `1))</td></tr>
	<tr><td port="e1" align="left">@:cond-branch tmp</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67857[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67857) BKLoopHead</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67856[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67856) BKNormal</td></tr>
	<tr><td port="e0" align="left">while ((true)) @:block 67858</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67855[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67855) BKConditional</td></tr>
	<tr><td port="e0" align="left">var tmp</td></tr>
	<tr><td port="e1" align="left">var tmp</td></tr>
	<tr><td port="e2" align="left">var tmp = sourceFormat == destFormat</td></tr>
	<tr><td port="e3" align="left">@:cond-branch tmp</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67854[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67854) BKConditional</td></tr>
	<tr><td port="e0" align="left">var ` = 0</td></tr>
	<tr><td port="e1" align="left">var `1 = destView.height</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67853[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67853) BKConditional</td></tr>
	<tr><td port="e0" align="left">var alphaData = alphaImage.buffer.data</td></tr>
	<tr><td port="e1" align="left">var alphaFormat = alphaImage.buffer.format</td></tr>
	<tr><td port="e2" align="left">var alphaPosition</td></tr>
	<tr><td port="e3" align="left">var alphaPixel</td></tr>
	<tr><td port="e4" align="left">var alphaView</td></tr>
	<tr><td port="e5" align="left">var alphaView = alphaPoint == null</td></tr>
	<tr><td port="e6" align="left">@:cond-branch alphaView</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67852[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67852) BKConditional</td></tr>
	<tr><td port="e0" align="left">var blend = blend</td></tr>
	<tr><td port="e1" align="left">@:cond-branch blend</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67851[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67851) BKNormal</td></tr>
	<tr><td port="e0" align="left">var tmp = ! useAlphaImage</td></tr>
	<tr><td port="e1" align="left">@:cond-branch tmp</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67850[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67850) BKNormal</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67849[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67849) BKConditional</td></tr>
	<tr><td port="e0" align="left">blend = false</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67848[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67848) BKConditional</td></tr>
	<tr><td port="e0" align="left">blend = sourceImage.get_transparent()</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67847[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67847) BKNormal</td></tr>
	<tr><td port="e0" align="left">@:cond-branch blend</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67846[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67846) BKConditional</td></tr>
	<tr><td port="e0" align="left">blend = false</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67845[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67845) BKConditional</td></tr>
	<tr><td port="e0" align="left">blend = ! image.get_transparent()</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67844[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67844) BKConditional</td></tr>
	<tr><td port="e0" align="left">blend = true</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67843[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67843) BKConditional</td></tr>
	<tr><td port="e0" align="left">var blend</td></tr>
	<tr><td port="e1" align="left">var blend = ! mergeAlpha</td></tr>
	<tr><td port="e2" align="left">@:cond-branch blend</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67842[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67842) BKNormal</td></tr>
	<tr><td port="e0" align="left">var blend = ! blend</td></tr>
	<tr><td port="e1" align="left">@:cond-branch blend</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67841[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67841) BKNormal</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67840[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67840) BKConditional</td></tr>
	<tr><td port="e0" align="left">blend = false</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67839[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67839) BKConditional</td></tr>
	<tr><td port="e0" align="left">blend = ! image.get_transparent()</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67838[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67838) BKConditional</td></tr>
	<tr><td port="e0" align="left">blend = true</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67837[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67837) BKConditional</td></tr>
	<tr><td port="e0" align="left">var useAlphaImage = useAlphaImage</td></tr>
	<tr><td port="e1" align="left">@:cond-branch useAlphaImage</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67836[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67836) BKNormal</td></tr>
	<tr><td port="e0" align="left">var blend</td></tr>
	<tr><td port="e1" align="left">var blend</td></tr>
	<tr><td port="e2" align="left">var blend = ! mergeAlpha</td></tr>
	<tr><td port="e3" align="left">@:cond-branch blend</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67835[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67835) BKConditional</td></tr>
	<tr><td port="e0" align="left">useAlphaImage = false</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67834[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67834) BKConditional</td></tr>
	<tr><td port="e0" align="left">useAlphaImage = alphaImage.get_transparent()</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67833[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67833) BKNormal</td></tr>
	<tr><td port="e0" align="left">var sourceView = new lime._internal.graphics._ImageDataUtil.ImageDataView(sourceImage, sourceRect)</td></tr>
	<tr><td port="e1" align="left">var destRect = new lime.math.Rectangle(destPoint.x, destPoint.y, sourceView.width, sourceView.height)</td></tr>
	<tr><td port="e2" align="left">var destView = new lime._internal.graphics._ImageDataUtil.ImageDataView(image, destRect)</td></tr>
	<tr><td port="e3" align="left">var sourceFormat = sourceImage.buffer.format</td></tr>
	<tr><td port="e4" align="left">var destFormat = image.buffer.format</td></tr>
	<tr><td port="e5" align="left">var sourcePosition</td></tr>
	<tr><td port="e6" align="left">var destPosition</td></tr>
	<tr><td port="e7" align="left">var sourceAlpha</td></tr>
	<tr><td port="e8" align="left">var destAlpha</td></tr>
	<tr><td port="e9" align="left">var oneMinusSourceAlpha</td></tr>
	<tr><td port="e10" align="left">var blendAlpha</td></tr>
	<tr><td port="e11" align="left">var sourcePixel</td></tr>
	<tr><td port="e12" align="left">var destPixel</td></tr>
	<tr><td port="e13" align="left">var sourcePremultiplied = sourceImage.buffer.premultiplied</td></tr>
	<tr><td port="e14" align="left">var destPremultiplied = image.buffer.premultiplied</td></tr>
	<tr><td port="e15" align="left">var sourceBytesPerPixel = cast sourceImage.buffer.bitsPerPixel / 8 | 0</td></tr>
	<tr><td port="e16" align="left">var destBytesPerPixel = cast image.buffer.bitsPerPixel / 8 | 0</td></tr>
	<tr><td port="e17" align="left">var useAlphaImage</td></tr>
	<tr><td port="e18" align="left">var useAlphaImage = alphaImage != null</td></tr>
	<tr><td port="e19" align="left">@:cond-branch useAlphaImage</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67832[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67832) BKConditional</td></tr>
	<tr><td port="e0" align="left">return</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67831[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67831) BKNormal</td></tr>
	<tr><td port="e0" align="left">@:cond-branch tmp</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67830[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67830) BKConditional</td></tr>
	<tr><td port="e0" align="left">tmp = true</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67829[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67829) BKConditional</td></tr>
	<tr><td port="e0" align="left">tmp = destData == null</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67828[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67828) BKConditional</td></tr>
	<tr><td port="e0" align="left">var sourceData = sourceImage.buffer.data</td></tr>
	<tr><td port="e1" align="left">var destData = image.buffer.data</td></tr>
	<tr><td port="e2" align="left">var tmp</td></tr>
	<tr><td port="e3" align="left">var tmp = ! sourceData == null</td></tr>
	<tr><td port="e4" align="left">@:cond-branch tmp</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67827[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67827) BKConditional</td></tr>
	<tr><td port="e0" align="left">image.buffer.data.set(sourceImage.buffer.data)</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67826[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67826) BKNormal</td></tr>
	<tr><td port="e0" align="left">@:cond-branch tmp</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67825[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67825) BKConditional</td></tr>
	<tr><td port="e0" align="left">tmp = false</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67824[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67824) BKConditional</td></tr>
	<tr><td port="e0" align="left">var tmp = image.get_format()</td></tr>
	<tr><td port="e1" align="left">var tmp = sourceImage.get_format()</td></tr>
	<tr><td port="e2" align="left">tmp = tmp == tmp</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67823[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67823) BKNormal</td></tr>
	<tr><td port="e0" align="left">@:cond-branch tmp</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67822[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67822) BKConditional</td></tr>
	<tr><td port="e0" align="left">tmp = false</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67821[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67821) BKConditional</td></tr>
	<tr><td port="e0" align="left">tmp = mergeAlpha == false</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67820[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67820) BKNormal</td></tr>
	<tr><td port="e0" align="left">@:cond-branch tmp</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67819[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67819) BKConditional</td></tr>
	<tr><td port="e0" align="left">tmp = false</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67818[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67818) BKConditional</td></tr>
	<tr><td port="e0" align="left">tmp = alphaPoint == null</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67817[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67817) BKNormal</td></tr>
	<tr><td port="e0" align="left">@:cond-branch tmp</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67816[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67816) BKConditional</td></tr>
	<tr><td port="e0" align="left">tmp = false</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67815[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67815) BKConditional</td></tr>
	<tr><td port="e0" align="left">tmp = alphaImage == null</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67814[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67814) BKNormal</td></tr>
	<tr><td port="e0" align="left">@:cond-branch tmp</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67813[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67813) BKConditional</td></tr>
	<tr><td port="e0" align="left">tmp = false</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67812[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67812) BKConditional</td></tr>
	<tr><td port="e0" align="left">tmp = destPoint.y == 0</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67811[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67811) BKNormal</td></tr>
	<tr><td port="e0" align="left">@:cond-branch tmp</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67810[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67810) BKConditional</td></tr>
	<tr><td port="e0" align="left">tmp = false</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67809[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67809) BKConditional</td></tr>
	<tr><td port="e0" align="left">tmp = destPoint.x == 0</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67808[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67808) BKNormal</td></tr>
	<tr><td port="e0" align="left">@:cond-branch tmp</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67807[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67807) BKConditional</td></tr>
	<tr><td port="e0" align="left">tmp = false</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67806[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67806) BKConditional</td></tr>
	<tr><td port="e0" align="left">tmp = sourceRect.y == 0</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67805[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67805) BKNormal</td></tr>
	<tr><td port="e0" align="left">@:cond-branch tmp</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67804[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67804) BKConditional</td></tr>
	<tr><td port="e0" align="left">tmp = false</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67803[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67803) BKConditional</td></tr>
	<tr><td port="e0" align="left">tmp = sourceRect.x == 0</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67802[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67802) BKNormal</td></tr>
	<tr><td port="e0" align="left">@:cond-branch tmp</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67801[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67801) BKConditional</td></tr>
	<tr><td port="e0" align="left">tmp = false</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67800[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67800) BKConditional</td></tr>
	<tr><td port="e0" align="left">tmp = sourceRect.height == sourceImage.height</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67799[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67799) BKNormal</td></tr>
	<tr><td port="e0" align="left">@:cond-branch tmp</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67798[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67798) BKConditional</td></tr>
	<tr><td port="e0" align="left">tmp = false</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67797[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67797) BKConditional</td></tr>
	<tr><td port="e0" align="left">tmp = sourceRect.width == sourceImage.width</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67796[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67796) BKNormal</td></tr>
	<tr><td port="e0" align="left">@:cond-branch tmp</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67795[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67795) BKConditional</td></tr>
	<tr><td port="e0" align="left">tmp = false</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67794[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67794) BKConditional</td></tr>
	<tr><td port="e0" align="left">tmp = image.height == sourceImage.height</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67793[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67793) BKFunctionEnd</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n67792[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(67792) BKFunctionBegin</td></tr>
	<tr><td port="e0" align="left">var tmp</td></tr>
	<tr><td port="e1" align="left">var tmp</td></tr>
	<tr><td port="e2" align="left">var tmp</td></tr>
	<tr><td port="e3" align="left">var tmp</td></tr>
	<tr><td port="e4" align="left">var tmp</td></tr>
	<tr><td port="e5" align="left">var tmp</td></tr>
	<tr><td port="e6" align="left">var tmp</td></tr>
	<tr><td port="e7" align="left">var tmp</td></tr>
	<tr><td port="e8" align="left">var tmp</td></tr>
	<tr><td port="e9" align="left">var tmp</td></tr>
	<tr><td port="e10" align="left">var tmp</td></tr>
	<tr><td port="e11" align="left">var tmp = image.width == sourceImage.width</td></tr>
	<tr><td port="e12" align="left">@:cond-branch tmp</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n1[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(1) BKRoot</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n1:out -> n67792:in[label="CFGFunction"];
n67792:out -> n67795:in[label="CFGCondElse"];
n67792:out -> n67794:in[label="CFGCondBranch true"];
n67794:out -> n67796:in[label="CFGGoto"];
n67796:out -> n67798:in[label="CFGCondElse"];
n67796:out -> n67797:in[label="CFGCondBranch true"];
n67797:out -> n67799:in[label="CFGGoto"];
n67799:out -> n67801:in[label="CFGCondElse"];
n67799:out -> n67800:in[label="CFGCondBranch true"];
n67800:out -> n67802:in[label="CFGGoto"];
n67802:out -> n67804:in[label="CFGCondElse"];
n67802:out -> n67803:in[label="CFGCondBranch true"];
n67803:out -> n67805:in[label="CFGGoto"];
n67805:out -> n67807:in[label="CFGCondElse"];
n67805:out -> n67806:in[label="CFGCondBranch true"];
n67806:out -> n67808:in[label="CFGGoto"];
n67808:out -> n67810:in[label="CFGCondElse"];
n67808:out -> n67809:in[label="CFGCondBranch true"];
n67809:out -> n67811:in[label="CFGGoto"];
n67811:out -> n67813:in[label="CFGCondElse"];
n67811:out -> n67812:in[label="CFGCondBranch true"];
n67812:out -> n67814:in[label="CFGGoto"];
n67814:out -> n67816:in[label="CFGCondElse"];
n67814:out -> n67815:in[label="CFGCondBranch true"];
n67815:out -> n67817:in[label="CFGGoto"];
n67817:out -> n67819:in[label="CFGCondElse"];
n67817:out -> n67818:in[label="CFGCondBranch true"];
n67818:out -> n67820:in[label="CFGGoto"];
n67820:out -> n67822:in[label="CFGCondElse"];
n67820:out -> n67821:in[label="CFGCondBranch true"];
n67821:out -> n67823:in[label="CFGGoto"];
n67823:out -> n67825:in[label="CFGCondElse"];
n67823:out -> n67824:in[label="CFGCondBranch true"];
n67824:out -> n67826:in[label="CFGGoto"];
n67826:out -> n67828:in[label="CFGCondElse"];
n67826:out -> n67827:in[label="CFGCondBranch true"];
n67827:out -> n68197:in[label="CFGGoto"];
n68197:out -> n67793:in[label="CFGGoto"];
n67828:out -> n67830:in[label="CFGCondElse"];
n67828:out -> n67829:in[label="CFGCondBranch true"];
n67829:out -> n67831:in[label="CFGGoto"];
n67831:out -> n67833:in[label="CFGCondElse"];
n67831:out -> n67832:in[label="CFGCondBranch true"];
n67832:out -> n67793:in[label="CFGGoto"];
n67833:out -> n67835:in[label="CFGCondElse"];
n67833:out -> n67834:in[label="CFGCondBranch true"];
n67834:out -> n67836:in[label="CFGGoto"];
n67836:out -> n67838:in[label="CFGCondElse"];
n67836:out -> n67837:in[label="CFGCondBranch true"];
n67837:out -> n67840:in[label="CFGCondElse"];
n67837:out -> n67839:in[label="CFGCondBranch true"];
n67839:out -> n67841:in[label="CFGGoto"];
n67841:out -> n67842:in[label="CFGGoto"];
n67840:out -> n67841:in[label="CFGGoto"];
n67842:out -> n67844:in[label="CFGCondElse"];
n67842:out -> n67843:in[label="CFGCondBranch true"];
n67843:out -> n67846:in[label="CFGCondElse"];
n67843:out -> n67845:in[label="CFGCondBranch true"];
n67845:out -> n67847:in[label="CFGGoto"];
n67847:out -> n67849:in[label="CFGCondElse"];
n67847:out -> n67848:in[label="CFGCondBranch true"];
n67848:out -> n67850:in[label="CFGGoto"];
n67850:out -> n67851:in[label="CFGGoto"];
n67849:out -> n67850:in[label="CFGGoto"];
n67846:out -> n67847:in[label="CFGGoto"];
n67851:out -> n67853:in[label="CFGCondElse"];
n67851:out -> n67852:in[label="CFGCondBranch true"];
n67852:out -> n67855:in[label="CFGCondElse"];
n67852:out -> n67854:in[label="CFGCondBranch true"];
n67854:out -> n67856:in[label="CFGGoto"];
n67856:out -> n67857:in[label="CFGGoto"];
n67857:out -> n67858:in[label="CFGGoto"];
n67858:out -> n67860:in[label="CFGCondElse"];
n67858:out -> n67859:in[label="CFGCondBranch true"];
n67859:out -> n67939:in[label="CFGGoto"];
n67939:out -> n68009:in[label="CFGGoto"];
n67860:out -> n67861:in[label="CFGGoto"];
n67861:out -> n67862:in[label="CFGGoto"];
n67862:out -> n67863:in[label="CFGGoto"];
n67863:out -> n67864:in[label="CFGGoto"];
n67864:out -> n67866:in[label="CFGCondElse"];
n67864:out -> n67865:in[label="CFGCondBranch true"];
n67865:out -> n67937:in[label="CFGGoto"];
n67937:out -> n67938:in[label="CFGGoto"];
n67938:out -> n67857:in[label="CFGGoto"];
n67866:out -> n67867:in[label="CFGGoto"];
n67867:out -> n67869:in[label="CFGCondElse"];
n67867:out -> n67868:in[label="CFGCondBranch true"];
n67868:out -> n67869:in[label="CFGGoto"];
n67869:out -> n67871:in[label="CFGCondElse"];
n67869:out -> n67870:in[label="CFGCondBranch true"];
n67870:out -> n67871:in[label="CFGGoto"];
n67871:out -> n67874:in[label="CFGCondBranch 2"];
n67871:out -> n67873:in[label="CFGCondBranch 1"];
n67871:out -> n67872:in[label="CFGCondBranch 0"];
n67872:out -> n67875:in[label="CFGGoto"];
n67873:out -> n67875:in[label="CFGGoto"];
n67875:out -> n67884:in[label="CFGCondElse"];
n67875:out -> n67876:in[label="CFGCondBranch true"];
n67876:out -> n67878:in[label="CFGCondElse"];
n67876:out -> n67877:in[label="CFGCondBranch true"];
n67877:out -> n67879:in[label="CFGGoto"];
n67879:out -> n67883:in[label="CFGCondElse"];
n67879:out -> n67880:in[label="CFGCondBranch true"];
n67880:out -> n67881:in[label="CFGGoto"];
n67881:out -> n67882:in[label="CFGGoto"];
n67882:out -> n67883:in[label="CFGGoto"];
n67883:out -> n67884:in[label="CFGGoto"];
n67878:out -> n67879:in[label="CFGGoto"];
n67884:out -> n67885:in[label="CFGGoto"];
n67885:out -> n67886:in[label="CFGGoto"];
n67886:out -> n67888:in[label="CFGCondElse"];
n67886:out -> n67887:in[label="CFGCondBranch true"];
n67887:out -> n67888:in[label="CFGGoto"];
n67888:out -> n67890:in[label="CFGCondElse"];
n67888:out -> n67889:in[label="CFGCondBranch true"];
n67889:out -> n67890:in[label="CFGGoto"];
n67890:out -> n67893:in[label="CFGCondBranch 2"];
n67890:out -> n67892:in[label="CFGCondBranch 1"];
n67890:out -> n67891:in[label="CFGCondBranch 0"];
n67891:out -> n67894:in[label="CFGGoto"];
n67892:out -> n67894:in[label="CFGGoto"];
n67894:out -> n67903:in[label="CFGCondElse"];
n67894:out -> n67895:in[label="CFGCondBranch true"];
n67895:out -> n67897:in[label="CFGCondElse"];
n67895:out -> n67896:in[label="CFGCondBranch true"];
n67896:out -> n67898:in[label="CFGGoto"];
n67898:out -> n67902:in[label="CFGCondElse"];
n67898:out -> n67899:in[label="CFGCondBranch true"];
n67899:out -> n67900:in[label="CFGGoto"];
n67900:out -> n67901:in[label="CFGGoto"];
n67901:out -> n67902:in[label="CFGGoto"];
n67902:out -> n67903:in[label="CFGGoto"];
n67897:out -> n67898:in[label="CFGGoto"];
n67903:out -> n67904:in[label="CFGGoto"];
n67904:out -> n67906:in[label="CFGCondElse"];
n67904:out -> n67905:in[label="CFGCondBranch true"];
n67905:out -> n67915:in[label="CFGGoto"];
n67915:out -> n67916:in[label="CFGGoto"];
n67916:out -> n67918:in[label="CFGCondElse"];
n67916:out -> n67917:in[label="CFGCondBranch true"];
n67917:out -> n67918:in[label="CFGGoto"];
n67918:out -> n67920:in[label="CFGCondElse"];
n67918:out -> n67919:in[label="CFGCondBranch true"];
n67919:out -> n67920:in[label="CFGGoto"];
n67920:out -> n67931:in[label="CFGCondElse"];
n67920:out -> n67921:in[label="CFGCondBranch true"];
n67921:out -> n67923:in[label="CFGCondElse"];
n67921:out -> n67922:in[label="CFGCondBranch true"];
n67922:out -> n67925:in[label="CFGCondElse"];
n67922:out -> n67924:in[label="CFGCondBranch true"];
n67924:out -> n67925:in[label="CFGGoto"];
n67925:out -> n67930:in[label="CFGGoto"];
n67930:out -> n67931:in[label="CFGGoto"];
n67923:out -> n67929:in[label="CFGCondElse"];
n67923:out -> n67926:in[label="CFGCondBranch true"];
n67926:out -> n67927:in[label="CFGGoto"];
n67927:out -> n67928:in[label="CFGGoto"];
n67928:out -> n67929:in[label="CFGGoto"];
n67929:out -> n67930:in[label="CFGGoto"];
n67931:out -> n67934:in[label="CFGCondBranch 2"];
n67931:out -> n67933:in[label="CFGCondBranch 1"];
n67931:out -> n67932:in[label="CFGCondBranch 0"];
n67932:out -> n67935:in[label="CFGGoto"];
n67933:out -> n67935:in[label="CFGGoto"];
n67935:out -> n67936:in[label="CFGGoto"];
n67936:out -> n67863:in[label="CFGGoto"];
n67934:out -> n67935:in[label="CFGGoto"];
n67906:out -> n67907:in[label="CFGGoto"];
n67907:out -> n67908:in[label="CFGGoto"];
n67908:out -> n67909:in[label="CFGGoto"];
n67909:out -> n67910:in[label="CFGGoto"];
n67910:out -> n67911:in[label="CFGGoto"];
n67911:out -> n67912:in[label="CFGGoto"];
n67912:out -> n67913:in[label="CFGGoto"];
n67913:out -> n67914:in[label="CFGGoto"];
n67914:out -> n67915:in[label="CFGGoto"];
n67893:out -> n67894:in[label="CFGGoto"];
n67874:out -> n67875:in[label="CFGGoto"];
n68009:out -> n68196:in[label="CFGGoto"];
n67855:out -> n67941:in[label="CFGCondElse"];
n67855:out -> n67940:in[label="CFGCondBranch true"];
n67940:out -> n67942:in[label="CFGGoto"];
n67942:out -> n67944:in[label="CFGCondElse"];
n67942:out -> n67943:in[label="CFGCondBranch true"];
n67943:out -> n67945:in[label="CFGGoto"];
n67945:out -> n67947:in[label="CFGCondElse"];
n67945:out -> n67946:in[label="CFGCondBranch true"];
n67946:out -> n67948:in[label="CFGGoto"];
n67948:out -> n67949:in[label="CFGGoto"];
n67949:out -> n67950:in[label="CFGGoto"];
n67950:out -> n67952:in[label="CFGCondElse"];
n67950:out -> n67951:in[label="CFGCondBranch true"];
n67951:out -> n67953:in[label="CFGGoto"];
n67953:out -> n68008:in[label="CFGGoto"];
n67952:out -> n67949:in[label="CFGGoto"];
n68008:out -> n68009:in[label="CFGGoto"];
n67947:out -> n67954:in[label="CFGGoto"];
n67954:out -> n67955:in[label="CFGGoto"];
n67955:out -> n67956:in[label="CFGGoto"];
n67956:out -> n67958:in[label="CFGCondElse"];
n67956:out -> n67957:in[label="CFGCondBranch true"];
n67957:out -> n68007:in[label="CFGGoto"];
n68007:out -> n68008:in[label="CFGGoto"];
n67958:out -> n67959:in[label="CFGGoto"];
n67959:out -> n67960:in[label="CFGGoto"];
n67960:out -> n67961:in[label="CFGGoto"];
n67961:out -> n67962:in[label="CFGGoto"];
n67962:out -> n67964:in[label="CFGCondElse"];
n67962:out -> n67963:in[label="CFGCondBranch true"];
n67963:out -> n68005:in[label="CFGGoto"];
n68005:out -> n68006:in[label="CFGGoto"];
n68006:out -> n67955:in[label="CFGGoto"];
n67964:out -> n67965:in[label="CFGGoto"];
n67965:out -> n67967:in[label="CFGCondElse"];
n67965:out -> n67966:in[label="CFGCondBranch true"];
n67966:out -> n67967:in[label="CFGGoto"];
n67967:out -> n67969:in[label="CFGCondElse"];
n67967:out -> n67968:in[label="CFGCondBranch true"];
n67968:out -> n67969:in[label="CFGGoto"];
n67969:out -> n67972:in[label="CFGCondBranch 2"];
n67969:out -> n67971:in[label="CFGCondBranch 1"];
n67969:out -> n67970:in[label="CFGCondBranch 0"];
n67970:out -> n67973:in[label="CFGGoto"];
n67971:out -> n67973:in[label="CFGGoto"];
n67973:out -> n67982:in[label="CFGCondElse"];
n67973:out -> n67974:in[label="CFGCondBranch true"];
n67974:out -> n67976:in[label="CFGCondElse"];
n67974:out -> n67975:in[label="CFGCondBranch true"];
n67975:out -> n67977:in[label="CFGGoto"];
n67977:out -> n67981:in[label="CFGCondElse"];
n67977:out -> n67978:in[label="CFGCondBranch true"];
n67978:out -> n67979:in[label="CFGGoto"];
n67979:out -> n67980:in[label="CFGGoto"];
n67980:out -> n67981:in[label="CFGGoto"];
n67981:out -> n67982:in[label="CFGGoto"];
n67976:out -> n67977:in[label="CFGGoto"];
n67982:out -> n67983:in[label="CFGGoto"];
n67983:out -> n67984:in[label="CFGGoto"];
n67984:out -> n67986:in[label="CFGCondElse"];
n67984:out -> n67985:in[label="CFGCondBranch true"];
n67985:out -> n67986:in[label="CFGGoto"];
n67986:out -> n67988:in[label="CFGCondElse"];
n67986:out -> n67987:in[label="CFGCondBranch true"];
n67987:out -> n67988:in[label="CFGGoto"];
n67988:out -> n67999:in[label="CFGCondElse"];
n67988:out -> n67989:in[label="CFGCondBranch true"];
n67989:out -> n67991:in[label="CFGCondElse"];
n67989:out -> n67990:in[label="CFGCondBranch true"];
n67990:out -> n67993:in[label="CFGCondElse"];
n67990:out -> n67992:in[label="CFGCondBranch true"];
n67992:out -> n67993:in[label="CFGGoto"];
n67993:out -> n67998:in[label="CFGGoto"];
n67998:out -> n67999:in[label="CFGGoto"];
n67991:out -> n67997:in[label="CFGCondElse"];
n67991:out -> n67994:in[label="CFGCondBranch true"];
n67994:out -> n67995:in[label="CFGGoto"];
n67995:out -> n67996:in[label="CFGGoto"];
n67996:out -> n67997:in[label="CFGGoto"];
n67997:out -> n67998:in[label="CFGGoto"];
n67999:out -> n68002:in[label="CFGCondBranch 2"];
n67999:out -> n68001:in[label="CFGCondBranch 1"];
n67999:out -> n68000:in[label="CFGCondBranch 0"];
n68000:out -> n68003:in[label="CFGGoto"];
n68001:out -> n68003:in[label="CFGGoto"];
n68003:out -> n68004:in[label="CFGGoto"];
n68004:out -> n67961:in[label="CFGGoto"];
n68002:out -> n68003:in[label="CFGGoto"];
n67972:out -> n67973:in[label="CFGGoto"];
n67944:out -> n67945:in[label="CFGGoto"];
n67941:out -> n67942:in[label="CFGGoto"];
n68196:out -> n68197:in[label="CFGGoto"];
n67853:out -> n68011:in[label="CFGCondElse"];
n67853:out -> n68010:in[label="CFGCondBranch true"];
n68010:out -> n68012:in[label="CFGGoto"];
n68012:out -> n68014:in[label="CFGCondElse"];
n68012:out -> n68013:in[label="CFGCondBranch true"];
n68013:out -> n68015:in[label="CFGGoto"];
n68015:out -> n68017:in[label="CFGCondElse"];
n68015:out -> n68016:in[label="CFGCondBranch true"];
n68016:out -> n68018:in[label="CFGGoto"];
n68018:out -> n68019:in[label="CFGGoto"];
n68019:out -> n68020:in[label="CFGGoto"];
n68020:out -> n68022:in[label="CFGCondElse"];
n68020:out -> n68021:in[label="CFGCondBranch true"];
n68021:out -> n68119:in[label="CFGGoto"];
n68119:out -> n68195:in[label="CFGGoto"];
n68022:out -> n68023:in[label="CFGGoto"];
n68023:out -> n68024:in[label="CFGGoto"];
n68024:out -> n68025:in[label="CFGGoto"];
n68025:out -> n68026:in[label="CFGGoto"];
n68026:out -> n68028:in[label="CFGCondElse"];
n68026:out -> n68027:in[label="CFGCondBranch true"];
n68027:out -> n68117:in[label="CFGGoto"];
n68117:out -> n68118:in[label="CFGGoto"];
n68118:out -> n68019:in[label="CFGGoto"];
n68028:out -> n68029:in[label="CFGGoto"];
n68029:out -> n68031:in[label="CFGCondElse"];
n68029:out -> n68030:in[label="CFGCondBranch true"];
n68030:out -> n68031:in[label="CFGGoto"];
n68031:out -> n68033:in[label="CFGCondElse"];
n68031:out -> n68032:in[label="CFGCondBranch true"];
n68032:out -> n68033:in[label="CFGGoto"];
n68033:out -> n68036:in[label="CFGCondBranch 2"];
n68033:out -> n68035:in[label="CFGCondBranch 1"];
n68033:out -> n68034:in[label="CFGCondBranch 0"];
n68034:out -> n68037:in[label="CFGGoto"];
n68035:out -> n68037:in[label="CFGGoto"];
n68037:out -> n68046:in[label="CFGCondElse"];
n68037:out -> n68038:in[label="CFGCondBranch true"];
n68038:out -> n68040:in[label="CFGCondElse"];
n68038:out -> n68039:in[label="CFGCondBranch true"];
n68039:out -> n68041:in[label="CFGGoto"];
n68041:out -> n68045:in[label="CFGCondElse"];
n68041:out -> n68042:in[label="CFGCondBranch true"];
n68042:out -> n68043:in[label="CFGGoto"];
n68043:out -> n68044:in[label="CFGGoto"];
n68044:out -> n68045:in[label="CFGGoto"];
n68045:out -> n68046:in[label="CFGGoto"];
n68040:out -> n68041:in[label="CFGGoto"];
n68046:out -> n68047:in[label="CFGGoto"];
n68047:out -> n68048:in[label="CFGGoto"];
n68048:out -> n68050:in[label="CFGCondElse"];
n68048:out -> n68049:in[label="CFGCondBranch true"];
n68049:out -> n68050:in[label="CFGGoto"];
n68050:out -> n68052:in[label="CFGCondElse"];
n68050:out -> n68051:in[label="CFGCondBranch true"];
n68051:out -> n68052:in[label="CFGGoto"];
n68052:out -> n68055:in[label="CFGCondBranch 2"];
n68052:out -> n68054:in[label="CFGCondBranch 1"];
n68052:out -> n68053:in[label="CFGCondBranch 0"];
n68053:out -> n68056:in[label="CFGGoto"];
n68054:out -> n68056:in[label="CFGGoto"];
n68056:out -> n68065:in[label="CFGCondElse"];
n68056:out -> n68057:in[label="CFGCondBranch true"];
n68057:out -> n68059:in[label="CFGCondElse"];
n68057:out -> n68058:in[label="CFGCondBranch true"];
n68058:out -> n68060:in[label="CFGGoto"];
n68060:out -> n68064:in[label="CFGCondElse"];
n68060:out -> n68061:in[label="CFGCondBranch true"];
n68061:out -> n68062:in[label="CFGGoto"];
n68062:out -> n68063:in[label="CFGGoto"];
n68063:out -> n68064:in[label="CFGGoto"];
n68064:out -> n68065:in[label="CFGGoto"];
n68059:out -> n68060:in[label="CFGGoto"];
n68065:out -> n68066:in[label="CFGGoto"];
n68066:out -> n68067:in[label="CFGGoto"];
n68067:out -> n68069:in[label="CFGCondElse"];
n68067:out -> n68068:in[label="CFGCondBranch true"];
n68068:out -> n68069:in[label="CFGGoto"];
n68069:out -> n68071:in[label="CFGCondElse"];
n68069:out -> n68070:in[label="CFGCondBranch true"];
n68070:out -> n68071:in[label="CFGGoto"];
n68071:out -> n68074:in[label="CFGCondBranch 2"];
n68071:out -> n68073:in[label="CFGCondBranch 1"];
n68071:out -> n68072:in[label="CFGCondBranch 0"];
n68072:out -> n68075:in[label="CFGGoto"];
n68073:out -> n68075:in[label="CFGGoto"];
n68075:out -> n68084:in[label="CFGCondElse"];
n68075:out -> n68076:in[label="CFGCondBranch true"];
n68076:out -> n68078:in[label="CFGCondElse"];
n68076:out -> n68077:in[label="CFGCondBranch true"];
n68077:out -> n68079:in[label="CFGGoto"];
n68079:out -> n68083:in[label="CFGCondElse"];
n68079:out -> n68080:in[label="CFGCondBranch true"];
n68080:out -> n68081:in[label="CFGGoto"];
n68081:out -> n68082:in[label="CFGGoto"];
n68082:out -> n68083:in[label="CFGGoto"];
n68083:out -> n68084:in[label="CFGGoto"];
n68078:out -> n68079:in[label="CFGGoto"];
n68084:out -> n68085:in[label="CFGGoto"];
n68085:out -> n68116:in[label="CFGCondElse"];
n68085:out -> n68086:in[label="CFGCondBranch true"];
n68086:out -> n68087:in[label="CFGGoto"];
n68087:out -> n68088:in[label="CFGGoto"];
n68088:out -> n68089:in[label="CFGGoto"];
n68089:out -> n68090:in[label="CFGGoto"];
n68090:out -> n68091:in[label="CFGGoto"];
n68091:out -> n68092:in[label="CFGGoto"];
n68092:out -> n68093:in[label="CFGGoto"];
n68093:out -> n68094:in[label="CFGGoto"];
n68094:out -> n68095:in[label="CFGGoto"];
n68095:out -> n68097:in[label="CFGCondElse"];
n68095:out -> n68096:in[label="CFGCondBranch true"];
n68096:out -> n68097:in[label="CFGGoto"];
n68097:out -> n68099:in[label="CFGCondElse"];
n68097:out -> n68098:in[label="CFGCondBranch true"];
n68098:out -> n68099:in[label="CFGGoto"];
n68099:out -> n68110:in[label="CFGCondElse"];
n68099:out -> n68100:in[label="CFGCondBranch true"];
n68100:out -> n68102:in[label="CFGCondElse"];
n68100:out -> n68101:in[label="CFGCondBranch true"];
n68101:out -> n68104:in[label="CFGCondElse"];
n68101:out -> n68103:in[label="CFGCondBranch true"];
n68103:out -> n68104:in[label="CFGGoto"];
n68104:out -> n68109:in[label="CFGGoto"];
n68109:out -> n68110:in[label="CFGGoto"];
n68102:out -> n68108:in[label="CFGCondElse"];
n68102:out -> n68105:in[label="CFGCondBranch true"];
n68105:out -> n68106:in[label="CFGGoto"];
n68106:out -> n68107:in[label="CFGGoto"];
n68107:out -> n68108:in[label="CFGGoto"];
n68108:out -> n68109:in[label="CFGGoto"];
n68110:out -> n68113:in[label="CFGCondBranch 2"];
n68110:out -> n68112:in[label="CFGCondBranch 1"];
n68110:out -> n68111:in[label="CFGCondBranch 0"];
n68111:out -> n68114:in[label="CFGGoto"];
n68112:out -> n68114:in[label="CFGGoto"];
n68114:out -> n68115:in[label="CFGGoto"];
n68115:out -> n68116:in[label="CFGGoto"];
n68113:out -> n68114:in[label="CFGGoto"];
n68116:out -> n68025:in[label="CFGGoto"];
n68074:out -> n68075:in[label="CFGGoto"];
n68055:out -> n68056:in[label="CFGGoto"];
n68036:out -> n68037:in[label="CFGGoto"];
n68195:out -> n68196:in[label="CFGGoto"];
n68017:out -> n68120:in[label="CFGGoto"];
n68120:out -> n68121:in[label="CFGGoto"];
n68121:out -> n68122:in[label="CFGGoto"];
n68122:out -> n68124:in[label="CFGCondElse"];
n68122:out -> n68123:in[label="CFGCondBranch true"];
n68123:out -> n68194:in[label="CFGGoto"];
n68194:out -> n68195:in[label="CFGGoto"];
n68124:out -> n68125:in[label="CFGGoto"];
n68125:out -> n68126:in[label="CFGGoto"];
n68126:out -> n68127:in[label="CFGGoto"];
n68127:out -> n68128:in[label="CFGGoto"];
n68128:out -> n68130:in[label="CFGCondElse"];
n68128:out -> n68129:in[label="CFGCondBranch true"];
n68129:out -> n68192:in[label="CFGGoto"];
n68192:out -> n68193:in[label="CFGGoto"];
n68193:out -> n68121:in[label="CFGGoto"];
n68130:out -> n68131:in[label="CFGGoto"];
n68131:out -> n68133:in[label="CFGCondElse"];
n68131:out -> n68132:in[label="CFGCondBranch true"];
n68132:out -> n68133:in[label="CFGGoto"];
n68133:out -> n68135:in[label="CFGCondElse"];
n68133:out -> n68134:in[label="CFGCondBranch true"];
n68134:out -> n68135:in[label="CFGGoto"];
n68135:out -> n68138:in[label="CFGCondBranch 2"];
n68135:out -> n68137:in[label="CFGCondBranch 1"];
n68135:out -> n68136:in[label="CFGCondBranch 0"];
n68136:out -> n68139:in[label="CFGGoto"];
n68137:out -> n68139:in[label="CFGGoto"];
n68139:out -> n68148:in[label="CFGCondElse"];
n68139:out -> n68140:in[label="CFGCondBranch true"];
n68140:out -> n68142:in[label="CFGCondElse"];
n68140:out -> n68141:in[label="CFGCondBranch true"];
n68141:out -> n68143:in[label="CFGGoto"];
n68143:out -> n68147:in[label="CFGCondElse"];
n68143:out -> n68144:in[label="CFGCondBranch true"];
n68144:out -> n68145:in[label="CFGGoto"];
n68145:out -> n68146:in[label="CFGGoto"];
n68146:out -> n68147:in[label="CFGGoto"];
n68147:out -> n68148:in[label="CFGGoto"];
n68142:out -> n68143:in[label="CFGGoto"];
n68148:out -> n68149:in[label="CFGGoto"];
n68149:out -> n68150:in[label="CFGGoto"];
n68150:out -> n68152:in[label="CFGCondElse"];
n68150:out -> n68151:in[label="CFGCondBranch true"];
n68151:out -> n68152:in[label="CFGGoto"];
n68152:out -> n68154:in[label="CFGCondElse"];
n68152:out -> n68153:in[label="CFGCondBranch true"];
n68153:out -> n68154:in[label="CFGGoto"];
n68154:out -> n68157:in[label="CFGCondBranch 2"];
n68154:out -> n68156:in[label="CFGCondBranch 1"];
n68154:out -> n68155:in[label="CFGCondBranch 0"];
n68155:out -> n68158:in[label="CFGGoto"];
n68156:out -> n68158:in[label="CFGGoto"];
n68158:out -> n68167:in[label="CFGCondElse"];
n68158:out -> n68159:in[label="CFGCondBranch true"];
n68159:out -> n68161:in[label="CFGCondElse"];
n68159:out -> n68160:in[label="CFGCondBranch true"];
n68160:out -> n68162:in[label="CFGGoto"];
n68162:out -> n68166:in[label="CFGCondElse"];
n68162:out -> n68163:in[label="CFGCondBranch true"];
n68163:out -> n68164:in[label="CFGGoto"];
n68164:out -> n68165:in[label="CFGGoto"];
n68165:out -> n68166:in[label="CFGGoto"];
n68166:out -> n68167:in[label="CFGGoto"];
n68161:out -> n68162:in[label="CFGGoto"];
n68167:out -> n68168:in[label="CFGGoto"];
n68168:out -> n68169:in[label="CFGGoto"];
n68169:out -> n68170:in[label="CFGGoto"];
n68170:out -> n68171:in[label="CFGGoto"];
n68171:out -> n68173:in[label="CFGCondElse"];
n68171:out -> n68172:in[label="CFGCondBranch true"];
n68172:out -> n68173:in[label="CFGGoto"];
n68173:out -> n68175:in[label="CFGCondElse"];
n68173:out -> n68174:in[label="CFGCondBranch true"];
n68174:out -> n68175:in[label="CFGGoto"];
n68175:out -> n68186:in[label="CFGCondElse"];
n68175:out -> n68176:in[label="CFGCondBranch true"];
n68176:out -> n68178:in[label="CFGCondElse"];
n68176:out -> n68177:in[label="CFGCondBranch true"];
n68177:out -> n68180:in[label="CFGCondElse"];
n68177:out -> n68179:in[label="CFGCondBranch true"];
n68179:out -> n68180:in[label="CFGGoto"];
n68180:out -> n68185:in[label="CFGGoto"];
n68185:out -> n68186:in[label="CFGGoto"];
n68178:out -> n68184:in[label="CFGCondElse"];
n68178:out -> n68181:in[label="CFGCondBranch true"];
n68181:out -> n68182:in[label="CFGGoto"];
n68182:out -> n68183:in[label="CFGGoto"];
n68183:out -> n68184:in[label="CFGGoto"];
n68184:out -> n68185:in[label="CFGGoto"];
n68186:out -> n68189:in[label="CFGCondBranch 2"];
n68186:out -> n68188:in[label="CFGCondBranch 1"];
n68186:out -> n68187:in[label="CFGCondBranch 0"];
n68187:out -> n68190:in[label="CFGGoto"];
n68188:out -> n68190:in[label="CFGGoto"];
n68190:out -> n68191:in[label="CFGGoto"];
n68191:out -> n68127:in[label="CFGGoto"];
n68189:out -> n68190:in[label="CFGGoto"];
n68157:out -> n68158:in[label="CFGGoto"];
n68138:out -> n68139:in[label="CFGGoto"];
n68014:out -> n68015:in[label="CFGGoto"];
n68011:out -> n68012:in[label="CFGGoto"];
n67844:out -> n67851:in[label="CFGGoto"];
n67838:out -> n67842:in[label="CFGGoto"];
n67835:out -> n67836:in[label="CFGGoto"];
n67830:out -> n67831:in[label="CFGGoto"];
n67825:out -> n67826:in[label="CFGGoto"];
n67822:out -> n67823:in[label="CFGGoto"];
n67819:out -> n67820:in[label="CFGGoto"];
n67816:out -> n67817:in[label="CFGGoto"];
n67813:out -> n67814:in[label="CFGGoto"];
n67810:out -> n67811:in[label="CFGGoto"];
n67807:out -> n67808:in[label="CFGGoto"];
n67804:out -> n67805:in[label="CFGGoto"];
n67801:out -> n67802:in[label="CFGGoto"];
n67798:out -> n67799:in[label="CFGGoto"];
n67795:out -> n67796:in[label="CFGGoto"];
}
